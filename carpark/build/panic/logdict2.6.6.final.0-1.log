__main__: None -> <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\_pyi_bootstrap.py imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1), ('site', 0, 0, -1), ('pyi_importers', 0, 0, -1), ('warnings', 0, 1, -1), ('encodings', 0, 0, -1)] binaries=[] datas=[]>
sys: None -> <BuiltinModule 'sys' None imports=[] binaries=[] datas=[]>
os: None -> <PyModule 'os' C:\Python26\lib\os.pyc imports=[('subprocess', 1, 0, -1), ('os.path.isdir', 1, 0, -1), ('os.path.pardir', 0, 0, -1), ('os.path.join', 1, 0, -1), ('copy_reg', 0, 0, -1), ('os.path.islink', 1, 0, -1), ('os.path.altsep', 0, 0, -1), ('os.path', 1, 0, -1), ('os.path.devnull', 0, 0, -1), ('posix._exit', 0, 1, -1), ('nt._exit', 0, 1, -1), ('posix', 0, 1, -1), ('os.path.extsep', 0, 0, -1), ('posix.*', 0, 1, -1), ('os.path.pathsep', 0, 0, -1), ('os.path', 0, 0, -1), ('warnings', 1, 0, -1), ('errno', 0, 0, -1), ('posixpath', 0, 1, -1), ('sys', 0, 0, -1), ('UserDict', 0, 1, -1), ('os.path.sep', 0, 0, -1), ('_emx_link', 0, 1, -1), ('ntpath', 0, 1, -1), ('os.path.defpath', 0, 0, -1), ('os2emxpath', 0, 1, -1), ('_emx_link.link', 0, 1, -1), ('nt.*', 0, 1, -1), ('nt', 0, 1, -1), ('os.path.curdir', 0, 0, -1)] binaries=[] datas=[]>
pyi_archive: None -> <PyModule 'pyi_archive' C:\Python26\lib\site-packages\PyInstaller\loader\pyi_archive.pyc imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('marshal', 0, 0, -1), ('os', 1, 1, -1), ('struct', 0, 0, -1), ('imp', 1, 0, -1)] binaries=[] datas=[]>
pyi_os_path: None -> <PyModule 'pyi_os_path' C:\Python26\lib\site-packages\PyInstaller\loader\pyi_os_path.pyc imports=[('sys', 0, 0, -1), ('posix.environ', 0, 1, -1), ('nt.listdir', 0, 1, -1), ('nt.environ', 0, 1, -1), ('posix', 0, 1, -1), ('posix.listdir', 0, 1, -1), ('nt', 0, 1, -1)] binaries=[] datas=[]>
site: None -> <PyModule 'site' C:\Python26\lib\site-packages\PyInstaller\fake\fake-site.pyc imports=[('pydoc', 1, 0, -1)] binaries=[] datas=[]>
pyi_importers: None -> <PyModule 'pyi_importers' C:\Python26\lib\site-packages\PyInstaller\loader\pyi_importers.pyc imports=[('pyi_archive.ZlibArchive', 0, 0, -1), ('imp', 0, 0, -1), ('sys', 0, 0, -1), ('pyi_archive.ArchiveReadError', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1)] binaries=[] datas=[]>
warnings: None -> <PyModule 'warnings' C:\Python26\lib\warnings.pyc imports=[('linecache', 0, 0, -1), ('_warnings.default_action', 0, 0, -1), ('sys', 0, 0, -1), ('_warnings', 0, 0, -1), ('types', 0, 0, -1), ('_warnings.warn', 0, 0, -1), ('_warnings.once_registry', 0, 0, -1), ('_warnings.filters', 0, 0, -1), ('_warnings.warn_explicit', 0, 0, -1), ('re', 1, 0, -1)] binaries=[] datas=[]>
encodings: None -> <PkgModule 'encodings' C:\Python26\lib\encodings\__init__.pyc imports=[('encodings', 0, 0, -1), ('codecs', 0, 0, -1), ('encodings.aliases', 0, 0, -1), ('__builtin__', 0, 0, -1), ('encodings.aliases', 0, 0, -1), ('encodings.ascii', 0, 0, -1), ('encodings.base64_codec', 0, 0, -1), ('encodings.big5', 0, 0, -1), ('encodings.big5hkscs', 0, 0, -1), ('encodings.bz2_codec', 0, 0, -1), ('encodings.charmap', 0, 0, -1), ('encodings.cp037', 0, 0, -1), ('encodings.cp1006', 0, 0, -1), ('encodings.cp1026', 0, 0, -1), ('encodings.cp1140', 0, 0, -1), ('encodings.cp1250', 0, 0, -1), ('encodings.cp1251', 0, 0, -1), ('encodings.cp1252', 0, 0, -1), ('encodings.cp1253', 0, 0, -1), ('encodings.cp1254', 0, 0, -1), ('encodings.cp1255', 0, 0, -1), ('encodings.cp1256', 0, 0, -1), ('encodings.cp1257', 0, 0, -1), ('encodings.cp1258', 0, 0, -1), ('encodings.cp424', 0, 0, -1), ('encodings.cp437', 0, 0, -1), ('encodings.cp500', 0, 0, -1), ('encodings.cp737', 0, 0, -1), ('encodings.cp775', 0, 0, -1), ('encodings.cp850', 0, 0, -1), ('encodings.cp852', 0, 0, -1), ('encodings.cp855', 0, 0, -1), ('encodings.cp856', 0, 0, -1), ('encodings.cp857', 0, 0, -1), ('encodings.cp860', 0, 0, -1), ('encodings.cp861', 0, 0, -1), ('encodings.cp862', 0, 0, -1), ('encodings.cp863', 0, 0, -1), ('encodings.cp864', 0, 0, -1), ('encodings.cp865', 0, 0, -1), ('encodings.cp866', 0, 0, -1), ('encodings.cp869', 0, 0, -1), ('encodings.cp874', 0, 0, -1), ('encodings.cp875', 0, 0, -1), ('encodings.cp932', 0, 0, -1), ('encodings.cp949', 0, 0, -1), ('encodings.cp950', 0, 0, -1), ('encodings.euc_jisx0213', 0, 0, -1), ('encodings.euc_jis_2004', 0, 0, -1), ('encodings.euc_jp', 0, 0, -1), ('encodings.euc_kr', 0, 0, -1), ('encodings.gb18030', 0, 0, -1), ('encodings.gb2312', 0, 0, -1), ('encodings.gbk', 0, 0, -1), ('encodings.hex_codec', 0, 0, -1), ('encodings.hp_roman8', 0, 0, -1), ('encodings.hz', 0, 0, -1), ('encodings.idna', 0, 0, -1), ('encodings.iso2022_jp', 0, 0, -1), ('encodings.iso2022_jp_1', 0, 0, -1), ('encodings.iso2022_jp_2', 0, 0, -1), ('encodings.iso2022_jp_2004', 0, 0, -1), ('encodings.iso2022_jp_3', 0, 0, -1), ('encodings.iso2022_jp_ext', 0, 0, -1), ('encodings.iso2022_kr', 0, 0, -1), ('encodings.iso8859_1', 0, 0, -1), ('encodings.iso8859_10', 0, 0, -1), ('encodings.iso8859_11', 0, 0, -1), ('encodings.iso8859_13', 0, 0, -1), ('encodings.iso8859_14', 0, 0, -1), ('encodings.iso8859_15', 0, 0, -1), ('encodings.iso8859_16', 0, 0, -1), ('encodings.iso8859_2', 0, 0, -1), ('encodings.iso8859_3', 0, 0, -1), ('encodings.iso8859_4', 0, 0, -1), ('encodings.iso8859_5', 0, 0, -1), ('encodings.iso8859_6', 0, 0, -1), ('encodings.iso8859_7', 0, 0, -1), ('encodings.iso8859_8', 0, 0, -1), ('encodings.iso8859_9', 0, 0, -1), ('encodings.johab', 0, 0, -1), ('encodings.koi8_r', 0, 0, -1), ('encodings.koi8_u', 0, 0, -1), ('encodings.latin_1', 0, 0, -1), ('encodings.mac_arabic', 0, 0, -1), ('encodings.mac_centeuro', 0, 0, -1), ('encodings.mac_croatian', 0, 0, -1), ('encodings.mac_cyrillic', 0, 0, -1), ('encodings.mac_farsi', 0, 0, -1), ('encodings.mac_greek', 0, 0, -1), ('encodings.mac_iceland', 0, 0, -1), ('encodings.mac_latin2', 0, 0, -1), ('encodings.mac_roman', 0, 0, -1), ('encodings.mac_romanian', 0, 0, -1), ('encodings.mac_turkish', 0, 0, -1), ('encodings.mbcs', 0, 0, -1), ('encodings.palmos', 0, 0, -1), ('encodings.ptcp154', 0, 0, -1), ('encodings.punycode', 0, 0, -1), ('encodings.quopri_codec', 0, 0, -1), ('encodings.raw_unicode_escape', 0, 0, -1), ('encodings.rot_13', 0, 0, -1), ('encodings.shift_jis', 0, 0, -1), ('encodings.shift_jisx0213', 0, 0, -1), ('encodings.shift_jis_2004', 0, 0, -1), ('encodings.string_escape', 0, 0, -1), ('encodings.tis_620', 0, 0, -1), ('encodings.undefined', 0, 0, -1), ('encodings.unicode_escape', 0, 0, -1), ('encodings.unicode_internal', 0, 0, -1), ('encodings.utf_16', 0, 0, -1), ('encodings.utf_16_be', 0, 0, -1), ('encodings.utf_16_le', 0, 0, -1), ('encodings.utf_32', 0, 0, -1), ('encodings.utf_32_be', 0, 0, -1), ('encodings.utf_32_le', 0, 0, -1), ('encodings.utf_7', 0, 0, -1), ('encodings.utf_8', 0, 0, -1), ('encodings.utf_8_sig', 0, 0, -1), ('encodings.uu_codec', 0, 0, -1), ('encodings.zlib_codec', 0, 0, -1)] binaries=[] datas=[]>
subprocess: None -> <PyModule 'subprocess' C:\Python26\lib\subprocess.pyc imports=[('gc', 0, 0, -1), ('_subprocess', 0, 1, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('fcntl', 0, 1, -1), ('os', 0, 0, -1), ('errno', 0, 1, -1), ('threading', 0, 1, -1), ('msvcrt', 0, 1, -1), ('traceback', 0, 0, -1), ('_subprocess.CREATE_NEW_CONSOLE', 0, 1, -1), ('select', 0, 1, -1), ('signal', 0, 0, -1), ('pickle', 0, 1, -1)] binaries=[] datas=[]>
copy_reg: None -> <PyModule 'copy_reg' C:\Python26\lib\copy_reg.pyc imports=[('types.ClassType', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
nt: None -> <BuiltinModule 'nt' None imports=[] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
errno: None -> <BuiltinModule 'errno' None imports=[] binaries=[] datas=[]>
posixpath: None -> <PyModule 'posixpath' C:\Python26\lib\posixpath.pyc imports=[('re', 1, 1, -1), ('pwd', 1, 1, -1), ('os', 0, 0, -1), ('warnings', 0, 0, -1), ('genericpath', 0, 0, -1), ('stat', 0, 0, -1), ('genericpath.*', 0, 0, -1)] binaries=[] datas=[]>
UserDict: None -> <PyModule 'UserDict' C:\Python26\lib\UserDict.pyc imports=[('_abcoll', 0, 0, -1), ('copy', 1, 0, -1)] binaries=[] datas=[]>
_emx_link: None -> None
  DEL _emx_link
ntpath: None -> <PyModule 'ntpath' C:\Python26\lib\ntpath.pyc imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('nt._getfullpathname', 0, 0, -1), ('warnings', 0, 0, -1), ('genericpath', 0, 0, -1), ('stat', 0, 0, -1), ('nt', 0, 0, -1), ('string', 1, 0, -1), ('genericpath.*', 0, 0, -1)] binaries=[] datas=[]>
os2emxpath: None -> <PyModule 'os2emxpath' C:\Python26\lib\os2emxpath.pyc imports=[('ntpath.splitdrive', 0, 0, -1), ('ntpath.walk', 0, 0, -1), ('os', 0, 0, -1), ('ntpath.splitext', 0, 0, -1), ('genericpath', 0, 0, -1), ('stat', 0, 0, -1), ('ntpath.isabs', 0, 0, -1), ('ntpath.split', 0, 0, -1), ('ntpath.islink', 0, 0, -1), ('ntpath.expanduser', 0, 0, -1), ('genericpath.*', 0, 0, -1), ('ntpath.expandvars', 0, 0, -1), ('ntpath', 0, 0, -1)] binaries=[] datas=[]>
_emx_link: None -> None
  DEL _emx_link
gc: None -> <BuiltinModule 'gc' None imports=[] binaries=[] datas=[]>
_subprocess: None -> <BuiltinModule '_subprocess' None imports=[] binaries=[] datas=[]>
types: None -> <PyModule 'types' C:\Python26\lib\types.pyc imports=[('sys', 0, 0, -1)] binaries=[] datas=[]>
fcntl: None -> None
  DEL fcntl
threading: None -> <PyModule 'threading' C:\Python26\lib\threading.pyc imports=[('collections', 0, 0, -1), ('_threading_local.local', 0, 1, -1), ('sys', 0, 0, -1), ('traceback.format_exc', 0, 0, -1), ('collections.deque', 0, 0, -1), ('thread._local', 0, 0, -1), ('random', 1, 0, -1), ('random.random', 1, 0, -1), ('warnings', 0, 0, -1), ('time.time', 0, 0, -1), ('thread', 0, 0, -1), ('thread.stack_size', 0, 0, -1), ('time.sleep', 0, 0, -1), ('traceback', 0, 0, -1), ('functools.wraps', 0, 0, -1), ('functools', 0, 0, -1), ('time', 0, 0, -1), ('_threading_local', 0, 1, -1)] binaries=[] datas=[]>
msvcrt: None -> <BuiltinModule 'msvcrt' None imports=[] binaries=[] datas=[]>
traceback: None -> <PyModule 'traceback' C:\Python26\lib\traceback.pyc imports=[('linecache', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
select: None -> <ExtensionModule 'select' C:\Python26\DLLs\select.pyd imports=[] binaries=[] datas=[]>
signal: None -> <BuiltinModule 'signal' None imports=[] binaries=[] datas=[]>
pickle: None -> <PyModule 'pickle' C:\Python26\lib\pickle.pyc imports=[('re', 0, 0, -1), ('copy_reg.dispatch_table', 0, 0, -1), ('types.*', 0, 0, -1), ('marshal', 0, 0, -1), ('types', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('struct', 0, 0, -1), ('org.python.core', 0, 0, -1), ('copy_reg', 0, 0, -1), ('cStringIO', 0, 0, -1), ('copy_reg._extension_cache', 0, 0, -1), ('doctest', 1, 0, -1), ('StringIO', 0, 1, -1), ('copy_reg._inverted_registry', 0, 0, -1), ('binascii', 0, 0, -1), ('copy_reg._extension_registry', 0, 0, -1), ('org.python.core.PyStringMap', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
collections: None -> <PyModule 'collections' C:\Python26\lib\collections.pyc imports=[('_abcoll', 0, 0, -1), ('keyword.iskeyword', 0, 0, -1), ('operator.itemgetter', 0, 0, -1), ('cPickle.loads', 0, 1, -1), ('cPickle', 0, 1, -1), ('sys', 0, 0, -1), ('keyword', 0, 0, -1), ('doctest', 0, 1, -1), ('operator', 0, 0, -1), ('_collections.deque', 0, 0, -1), ('_collections.defaultdict', 0, 0, -1), ('cPickle.dumps', 0, 1, -1), ('_collections', 0, 0, -1), ('_abcoll.*', 0, 0, -1)] binaries=[] datas=[]>
_threading_local: None -> <PyModule '_threading_local' C:\Python26\lib\_threading_local.pyc imports=[('threading.current_thread', 0, 0, -1), ('threading', 0, 0, -1), ('threading.RLock', 0, 0, -1), ('threading', 1, 0, -1)] binaries=[] datas=[]>
thread: None -> <BuiltinModule 'thread' None imports=[] binaries=[] datas=[]>
random: None -> <PyModule 'random' C:\Python26\lib\random.pyc imports=[('os', 0, 0, -1), ('warnings', 0, 0, -1), ('__future__', 0, 0, -1), ('math.log', 0, 0, -1), ('math.cos', 0, 0, -1), ('time', 1, 1, -1), ('math.sin', 0, 0, -1), ('math.sqrt', 0, 0, -1), ('math', 0, 0, -1), ('__future__.division', 0, 0, -1), ('os.urandom', 0, 0, -1), ('binascii', 0, 0, -1), ('_random', 0, 0, -1), ('math.acos', 0, 0, -1), ('types', 0, 0, -1), ('types.BuiltinMethodType', 0, 0, -1), ('binascii.hexlify', 0, 0, -1), ('types.MethodType', 0, 0, -1), ('math.exp', 0, 0, -1), ('time', 1, 0, -1), ('math.pi', 0, 0, -1), ('math.e', 0, 0, -1), ('math.ceil', 0, 0, -1), ('warnings.warn', 0, 0, -1)] binaries=[] datas=[]>
time: None -> <BuiltinModule 'time' None imports=[('_strptime', 0, 0, -1)] binaries=[] datas=[]>
functools: None -> <PyModule 'functools' C:\Python26\lib\functools.pyc imports=[('_functools.reduce', 0, 0, -1), ('_functools.partial', 0, 0, -1), ('_functools', 0, 0, -1)] binaries=[] datas=[]>
_abcoll: None -> <PyModule '_abcoll' C:\Python26\lib\_abcoll.pyc imports=[('abc', 0, 0, -1), ('abc.abstractmethod', 0, 0, -1), ('abc.ABCMeta', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
keyword: None -> <PyModule 'keyword' C:\Python26\lib\keyword.pyc imports=[('sys', 1, 0, -1), ('re', 1, 0, -1)] binaries=[] datas=[]>
operator: None -> <BuiltinModule 'operator' None imports=[] binaries=[] datas=[]>
cPickle: None -> <BuiltinModule 'cPickle' None imports=[('copy_reg', 0, 0, -1), ('types', 0, 0, -1), ('string', 0, 0, -1)] binaries=[] datas=[]>
doctest: None -> <PyModule 'doctest' C:\Python26\lib\doctest.pyc imports=[('collections', 0, 0, -1), ('linecache', 0, 0, -1), ('StringIO', 0, 0, -1), ('sys', 0, 0, -1), ('pdb', 0, 0, -1), ('os', 0, 0, -1), ('StringIO.StringIO', 0, 0, -1), ('warnings', 0, 0, -1), ('re', 0, 0, -1), ('__future__', 0, 0, -1), ('inspect', 0, 0, -1), ('collections.namedtuple', 0, 0, -1), ('pdb', 1, 0, -1), ('difflib', 0, 0, -1), ('traceback', 0, 0, -1), ('types', 1, 0, -1), ('unittest', 0, 0, -1), ('tempfile', 0, 0, -1)] binaries=[] datas=[]>
_collections: None -> <BuiltinModule '_collections' None imports=[] binaries=[] datas=[]>
abc: None -> <PyModule 'abc' C:\Python26\lib\abc.pyc imports=[] binaries=[] datas=[]>
re: None -> <PyModule 're' C:\Python26\lib\re.pyc imports=[('sre_constants', 1, 0, -1), ('sys', 0, 0, -1), ('sre_parse', 0, 0, -1), ('sre_constants.BRANCH', 1, 0, -1), ('sre_compile', 0, 0, -1), ('sre_constants.SUBPATTERN', 1, 0, -1), ('copy_reg', 0, 0, -1)] binaries=[] datas=[]>
sre_constants: None -> <PyModule 'sre_constants' C:\Python26\lib\sre_constants.pyc imports=[] binaries=[] datas=[]>
sre_parse: None -> <PyModule 'sre_parse' C:\Python26\lib\sre_parse.pyc imports=[('sre_constants', 0, 0, -1), ('sys', 0, 0, -1), ('sre_constants.*', 0, 0, -1)] binaries=[] datas=[]>
sre_compile: None -> <PyModule 'sre_compile' C:\Python26\lib\sre_compile.pyc imports=[('sys', 0, 0, -1), ('sre_constants.*', 0, 0, -1), ('sre_parse', 0, 0, -1), ('sre_constants', 0, 0, -1), ('_sre', 0, 0, -1), ('array', 1, 0, -1)] binaries=[] datas=[]>
_sre: None -> <BuiltinModule '_sre' None imports=[('copy_reg', 0, 0, -1)] binaries=[] datas=[]>
array: None -> <BuiltinModule 'array' None imports=[] binaries=[] datas=[]>
string: None -> <PyModule 'string' C:\Python26\lib\string.pyc imports=[('strop.uppercase', 0, 0, -1), ('re', 0, 0, -1), ('strop', 0, 0, -1), ('strop.lowercase', 0, 0, -1), ('strop.whitespace', 0, 0, -1), ('strop.maketrans', 0, 0, -1)] binaries=[] datas=[]>
strop: None -> <BuiltinModule 'strop' None imports=[] binaries=[] datas=[]>
linecache: None -> <PyModule 'linecache' C:\Python26\lib\linecache.pyc imports=[('os', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
StringIO: None -> <PyModule 'StringIO' C:\Python26\lib\StringIO.pyc imports=[('sys', 1, 0, -1), ('errno', 0, 0, -1), ('errno.EINVAL', 0, 0, -1)] binaries=[] datas=[]>
pdb: None -> <PyModule 'pdb' C:\Python26\lib\pdb.pyc imports=[('linecache', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('repr.Repr', 0, 0, -1), ('bdb', 0, 0, -1), ('re', 0, 0, -1), ('pprint', 0, 0, -1), ('pdb', 0, 1, -1), ('shlex', 1, 1, -1), ('repr', 0, 0, -1), ('__main__', 1, 0, -1), ('cmd', 0, 0, -1), ('traceback', 0, 0, -1), ('readline', 1, 0, -1)] binaries=[] datas=[]>
__future__: None -> <PyModule '__future__' C:\Python26\lib\__future__.pyc imports=[] binaries=[] datas=[]>
inspect: None -> <PyModule 'inspect' C:\Python26\lib\inspect.pyc imports=[('collections', 0, 0, -1), ('re', 0, 0, -1), ('dis', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('imp', 0, 0, -1), ('string', 0, 0, -1), ('operator', 0, 0, -1), ('linecache', 0, 0, -1), ('operator.attrgetter', 0, 0, -1), ('collections.namedtuple', 0, 0, -1), ('tokenize', 0, 0, -1)] binaries=[] datas=[]>
difflib: None -> <PyModule 'difflib' C:\Python26\lib\difflib.pyc imports=[('difflib', 1, 0, -1), ('collections', 0, 0, -1), ('re', 0, 0, -1), ('functools', 0, 0, -1), ('functools.reduce', 0, 0, -1), ('doctest', 1, 0, -1), ('re', 1, 0, -1), ('heapq', 0, 0, -1), ('collections.namedtuple', 0, 0, -1)] binaries=[] datas=[]>
unittest: None -> <PyModule 'unittest' C:\Python26\lib\unittest.pyc imports=[('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('__builtin__', 1, 0, -1), ('getopt', 1, 0, -1), ('traceback', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
tempfile: None -> <PyModule 'tempfile' C:\Python26\lib\tempfile.pyc imports=[('os', 0, 0, -1), ('dummy_thread', 0, 1, -1), ('thread', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1), ('cStringIO', 0, 0, -1), ('fcntl', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('random', 0, 0, -1), ('StringIO', 0, 1, -1), ('errno', 0, 0, -1), ('random.Random', 0, 0, -1)] binaries=[] datas=[]>
repr: None -> <PyModule 'repr' C:\Python26\lib\repr.pyc imports=[('itertools.islice', 0, 0, -1), ('itertools', 0, 0, -1), ('__builtin__', 0, 0, -1)] binaries=[] datas=[]>
bdb: None -> <PyModule 'bdb' C:\Python26\lib\bdb.pyc imports=[('repr', 1, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('linecache', 1, 0, -1), ('__main__', 1, 1, -1)] binaries=[] datas=[]>
pprint: None -> <PyModule 'pprint' C:\Python26\lib\pprint.pyc imports=[('cStringIO.StringIO', 0, 0, -1), ('time', 1, 0, -1), ('cStringIO', 0, 0, -1), ('warnings', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
shlex: None -> <PyModule 'shlex' C:\Python26\lib\shlex.pyc imports=[('collections.deque', 0, 0, -1), ('sys', 0, 0, -1), ('collections', 0, 0, -1), ('os.path', 0, 0, -1), ('cStringIO', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('StringIO', 0, 1, -1)] binaries=[] datas=[]>
cmd: None -> <PyModule 'cmd' C:\Python26\lib\cmd.pyc imports=[('sys', 1, 0, -1), ('readline', 1, 1, -1), ('string', 0, 0, -1)] binaries=[] datas=[]>
readline: None -> None
  DEL readline
itertools: None -> <BuiltinModule 'itertools' None imports=[] binaries=[] datas=[]>
__builtin__: None -> <BuiltinModule '__builtin__' None imports=[] binaries=[] datas=[]>
cStringIO: None -> <BuiltinModule 'cStringIO' None imports=[('copy_reg', 0, 0, -1)] binaries=[] datas=[]>
_strptime: None -> <PyModule '_strptime' C:\Python26\lib\_strptime.pyc imports=[('thread.allocate_lock', 0, 0, -1), ('dummy_thread', 0, 0, -1), ('re', 0, 0, -1), ('re.compile', 0, 0, -1), ('re.escape', 0, 0, -1), ('calendar', 0, 0, -1), ('locale', 0, 0, -1), ('datetime.date', 0, 0, -1), ('datetime', 0, 0, -1), ('dummy_thread.allocate_lock', 0, 0, -1), ('thread', 0, 0, -1), ('time', 0, 0, -1), ('re.IGNORECASE', 0, 0, -1)] binaries=[] datas=[]>
dummy_thread: None -> <PyModule 'dummy_thread' C:\Python26\lib\dummy_thread.pyc imports=[('traceback', 0, 0, -1)] binaries=[] datas=[]>
calendar: None -> <PyModule 'calendar' C:\Python26\lib\calendar.pyc imports=[('optparse', 1, 0, -1), ('datetime', 0, 0, -1), ('sys', 0, 0, -1), ('locale', 0, 0, -1)] binaries=[] datas=[]>
locale: None -> <PyModule 'locale' C:\Python26\lib\locale.pyc imports=[('re', 0, 0, -1), ('sys', 0, 0, -1), ('_locale', 1, 0, -1), ('os', 1, 0, -1), ('operator', 0, 0, -1), ('_locale', 0, 0, -1), ('_locale.*', 0, 0, -1), ('functools', 0, 0, -1), ('encodings', 0, 0, -1), ('encodings.aliases', 0, 0, -1)] binaries=[] datas=[]>
datetime: None -> <BuiltinModule 'datetime' None imports=[] binaries=[] datas=[]>
optparse: None -> <PyModule 'optparse' C:\Python26\lib\optparse.pyc imports=[('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('__builtin__', 1, 1, -1), ('gettext.gettext', 0, 0, -1), ('textwrap', 0, 0, -1), ('gettext', 0, 0, -1)] binaries=[] datas=[]>
gettext: None -> <PyModule 'gettext' C:\Python26\lib\gettext.pyc imports=[('re', 0, 0, -1), ('locale.normalize', 1, 0, -1), ('sys', 0, 0, -1), ('errno.ENOENT', 0, 0, -1), ('copy', 0, 0, -1), ('os', 0, 0, -1), ('StringIO', 1, 1, -1), ('StringIO.StringIO', 1, 1, -1), ('cStringIO.StringIO', 1, 0, -1), ('struct', 0, 0, -1), ('locale', 1, 0, -1), ('token', 1, 0, -1), ('tokenize', 1, 0, -1), ('__builtin__', 1, 0, -1), ('errno', 0, 0, -1), ('locale', 0, 0, -1), ('cStringIO', 1, 0, -1)] binaries=[] datas=[]>
textwrap: None -> <PyModule 'textwrap' C:\Python26\lib\textwrap.pyc imports=[('re', 0, 0, -1), ('string', 0, 0, -1)] binaries=[] datas=[]>
copy: None -> <PyModule 'copy' C:\Python26\lib\copy.pyc imports=[('repr', 1, 0, -1), ('sys', 1, 1, -1), ('types', 0, 0, -1), ('copy_reg', 0, 0, -1), ('copy_reg.dispatch_table', 0, 0, -1), ('org.python.core.PyStringMap', 0, 0, -1), ('org.python.core', 0, 0, -1)] binaries=[] datas=[]>
struct: None -> <PyModule 'struct' C:\Python26\lib\struct.pyc imports=[('_struct.__doc__', 0, 0, -1), ('_struct.*', 0, 0, -1), ('_struct', 0, 0, -1), ('_struct._clearcache', 0, 0, -1)] binaries=[] datas=[]>
token: None -> <PyModule 'token' C:\Python26\lib\token.pyc imports=[('sys', 1, 0, -1), ('re', 1, 0, -1)] binaries=[] datas=[]>
tokenize: None -> <PyModule 'tokenize' C:\Python26\lib\tokenize.pyc imports=[('sys', 0, 1, -1), ('token.*', 0, 0, -1), ('re', 0, 0, -1), ('token', 0, 0, -1), ('string', 0, 0, -1)] binaries=[] datas=[]>
_locale: None -> <BuiltinModule '_locale' None imports=[] binaries=[] datas=[]>
encodings.aliases: None -> <PyModule 'encodings.aliases' C:\Python26\lib\encodings\aliases.pyc imports=[] binaries=[] datas=[]>
_functools: None -> <BuiltinModule '_functools' None imports=[] binaries=[] datas=[]>
encodings.encodings: None -> None
encodings.codecs: None -> None
codecs: None -> <PyModule 'codecs' C:\Python26\lib\codecs.pyc imports=[('encodings', 0, 1, -1), ('_codecs', 0, 0, -1), ('_codecs.*', 0, 0, -1), ('sys', 0, 0, -1), ('__builtin__', 0, 0, -1), ('encodings', 0, 0, -1)] binaries=[] datas=[]>
encodings.__builtin__: None -> None
encodings.ascii: None -> <PyModule 'encodings.ascii' C:\Python26\lib\encodings\ascii.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.base64_codec: None -> <PyModule 'encodings.base64_codec' C:\Python26\lib\encodings\base64_codec.pyc imports=[('base64', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.big5: None -> <PyModule 'encodings.big5' C:\Python26\lib\encodings\big5.pyc imports=[('_codecs_tw', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.big5hkscs: None -> <PyModule 'encodings.big5hkscs' C:\Python26\lib\encodings\big5hkscs.pyc imports=[('_codecs_hk', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.bz2_codec: None -> <PyModule 'encodings.bz2_codec' C:\Python26\lib\encodings\bz2_codec.pyc imports=[('codecs', 0, 0, -1), ('bz2', 0, 0, -1)] binaries=[] datas=[]>
encodings.charmap: None -> <PyModule 'encodings.charmap' C:\Python26\lib\encodings\charmap.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp037: None -> <PyModule 'encodings.cp037' C:\Python26\lib\encodings\cp037.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1006: None -> <PyModule 'encodings.cp1006' C:\Python26\lib\encodings\cp1006.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1026: None -> <PyModule 'encodings.cp1026' C:\Python26\lib\encodings\cp1026.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1140: None -> <PyModule 'encodings.cp1140' C:\Python26\lib\encodings\cp1140.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1250: None -> <PyModule 'encodings.cp1250' C:\Python26\lib\encodings\cp1250.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1251: None -> <PyModule 'encodings.cp1251' C:\Python26\lib\encodings\cp1251.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1252: None -> <PyModule 'encodings.cp1252' C:\Python26\lib\encodings\cp1252.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1253: None -> <PyModule 'encodings.cp1253' C:\Python26\lib\encodings\cp1253.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1254: None -> <PyModule 'encodings.cp1254' C:\Python26\lib\encodings\cp1254.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1255: None -> <PyModule 'encodings.cp1255' C:\Python26\lib\encodings\cp1255.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1256: None -> <PyModule 'encodings.cp1256' C:\Python26\lib\encodings\cp1256.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1257: None -> <PyModule 'encodings.cp1257' C:\Python26\lib\encodings\cp1257.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp1258: None -> <PyModule 'encodings.cp1258' C:\Python26\lib\encodings\cp1258.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp424: None -> <PyModule 'encodings.cp424' C:\Python26\lib\encodings\cp424.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp437: None -> <PyModule 'encodings.cp437' C:\Python26\lib\encodings\cp437.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp500: None -> <PyModule 'encodings.cp500' C:\Python26\lib\encodings\cp500.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp737: None -> <PyModule 'encodings.cp737' C:\Python26\lib\encodings\cp737.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp775: None -> <PyModule 'encodings.cp775' C:\Python26\lib\encodings\cp775.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp850: None -> <PyModule 'encodings.cp850' C:\Python26\lib\encodings\cp850.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp852: None -> <PyModule 'encodings.cp852' C:\Python26\lib\encodings\cp852.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp855: None -> <PyModule 'encodings.cp855' C:\Python26\lib\encodings\cp855.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp856: None -> <PyModule 'encodings.cp856' C:\Python26\lib\encodings\cp856.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp857: None -> <PyModule 'encodings.cp857' C:\Python26\lib\encodings\cp857.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp860: None -> <PyModule 'encodings.cp860' C:\Python26\lib\encodings\cp860.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp861: None -> <PyModule 'encodings.cp861' C:\Python26\lib\encodings\cp861.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp862: None -> <PyModule 'encodings.cp862' C:\Python26\lib\encodings\cp862.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp863: None -> <PyModule 'encodings.cp863' C:\Python26\lib\encodings\cp863.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp864: None -> <PyModule 'encodings.cp864' C:\Python26\lib\encodings\cp864.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp865: None -> <PyModule 'encodings.cp865' C:\Python26\lib\encodings\cp865.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp866: None -> <PyModule 'encodings.cp866' C:\Python26\lib\encodings\cp866.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp869: None -> <PyModule 'encodings.cp869' C:\Python26\lib\encodings\cp869.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp874: None -> <PyModule 'encodings.cp874' C:\Python26\lib\encodings\cp874.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp875: None -> <PyModule 'encodings.cp875' C:\Python26\lib\encodings\cp875.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp932: None -> <PyModule 'encodings.cp932' C:\Python26\lib\encodings\cp932.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp949: None -> <PyModule 'encodings.cp949' C:\Python26\lib\encodings\cp949.pyc imports=[('_codecs_kr', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.cp950: None -> <PyModule 'encodings.cp950' C:\Python26\lib\encodings\cp950.pyc imports=[('_codecs_tw', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.euc_jisx0213: None -> <PyModule 'encodings.euc_jisx0213' C:\Python26\lib\encodings\euc_jisx0213.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.euc_jis_2004: None -> <PyModule 'encodings.euc_jis_2004' C:\Python26\lib\encodings\euc_jis_2004.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.euc_jp: None -> <PyModule 'encodings.euc_jp' C:\Python26\lib\encodings\euc_jp.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.euc_kr: None -> <PyModule 'encodings.euc_kr' C:\Python26\lib\encodings\euc_kr.pyc imports=[('_codecs_kr', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.gb18030: None -> <PyModule 'encodings.gb18030' C:\Python26\lib\encodings\gb18030.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_cn', 0, 0, -1)] binaries=[] datas=[]>
encodings.gb2312: None -> <PyModule 'encodings.gb2312' C:\Python26\lib\encodings\gb2312.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_cn', 0, 0, -1)] binaries=[] datas=[]>
encodings.gbk: None -> <PyModule 'encodings.gbk' C:\Python26\lib\encodings\gbk.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_cn', 0, 0, -1)] binaries=[] datas=[]>
encodings.hex_codec: None -> <PyModule 'encodings.hex_codec' C:\Python26\lib\encodings\hex_codec.pyc imports=[('binascii', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.hp_roman8: None -> <PyModule 'encodings.hp_roman8' C:\Python26\lib\encodings\hp_roman8.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.hz: None -> <PyModule 'encodings.hz' C:\Python26\lib\encodings\hz.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_cn', 0, 0, -1)] binaries=[] datas=[]>
encodings.idna: None -> <PyModule 'encodings.idna' C:\Python26\lib\encodings\idna.pyc imports=[('unicodedata.ucd_3_2_0', 0, 0, -1), ('re', 0, 0, -1), ('unicodedata', 0, 0, -1), ('codecs', 0, 0, -1), ('stringprep', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp: None -> <PyModule 'encodings.iso2022_jp' C:\Python26\lib\encodings\iso2022_jp.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_1: None -> <PyModule 'encodings.iso2022_jp_1' C:\Python26\lib\encodings\iso2022_jp_1.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_2: None -> <PyModule 'encodings.iso2022_jp_2' C:\Python26\lib\encodings\iso2022_jp_2.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_2004: None -> <PyModule 'encodings.iso2022_jp_2004' C:\Python26\lib\encodings\iso2022_jp_2004.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_3: None -> <PyModule 'encodings.iso2022_jp_3' C:\Python26\lib\encodings\iso2022_jp_3.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_jp_ext: None -> <PyModule 'encodings.iso2022_jp_ext' C:\Python26\lib\encodings\iso2022_jp_ext.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso2022_kr: None -> <PyModule 'encodings.iso2022_kr' C:\Python26\lib\encodings\iso2022_kr.pyc imports=[('_codecs_iso2022', 0, 0, -1), ('codecs', 0, 0, -1), ('_multibytecodec', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_1: None -> <PyModule 'encodings.iso8859_1' C:\Python26\lib\encodings\iso8859_1.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_10: None -> <PyModule 'encodings.iso8859_10' C:\Python26\lib\encodings\iso8859_10.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_11: None -> <PyModule 'encodings.iso8859_11' C:\Python26\lib\encodings\iso8859_11.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_13: None -> <PyModule 'encodings.iso8859_13' C:\Python26\lib\encodings\iso8859_13.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_14: None -> <PyModule 'encodings.iso8859_14' C:\Python26\lib\encodings\iso8859_14.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_15: None -> <PyModule 'encodings.iso8859_15' C:\Python26\lib\encodings\iso8859_15.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_16: None -> <PyModule 'encodings.iso8859_16' C:\Python26\lib\encodings\iso8859_16.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_2: None -> <PyModule 'encodings.iso8859_2' C:\Python26\lib\encodings\iso8859_2.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_3: None -> <PyModule 'encodings.iso8859_3' C:\Python26\lib\encodings\iso8859_3.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_4: None -> <PyModule 'encodings.iso8859_4' C:\Python26\lib\encodings\iso8859_4.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_5: None -> <PyModule 'encodings.iso8859_5' C:\Python26\lib\encodings\iso8859_5.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_6: None -> <PyModule 'encodings.iso8859_6' C:\Python26\lib\encodings\iso8859_6.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_7: None -> <PyModule 'encodings.iso8859_7' C:\Python26\lib\encodings\iso8859_7.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_8: None -> <PyModule 'encodings.iso8859_8' C:\Python26\lib\encodings\iso8859_8.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.iso8859_9: None -> <PyModule 'encodings.iso8859_9' C:\Python26\lib\encodings\iso8859_9.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.johab: None -> <PyModule 'encodings.johab' C:\Python26\lib\encodings\johab.pyc imports=[('_codecs_kr', 0, 0, -1), ('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.koi8_r: None -> <PyModule 'encodings.koi8_r' C:\Python26\lib\encodings\koi8_r.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.koi8_u: None -> <PyModule 'encodings.koi8_u' C:\Python26\lib\encodings\koi8_u.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.latin_1: None -> <PyModule 'encodings.latin_1' C:\Python26\lib\encodings\latin_1.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_arabic: None -> <PyModule 'encodings.mac_arabic' C:\Python26\lib\encodings\mac_arabic.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_centeuro: None -> <PyModule 'encodings.mac_centeuro' C:\Python26\lib\encodings\mac_centeuro.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_croatian: None -> <PyModule 'encodings.mac_croatian' C:\Python26\lib\encodings\mac_croatian.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_cyrillic: None -> <PyModule 'encodings.mac_cyrillic' C:\Python26\lib\encodings\mac_cyrillic.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_farsi: None -> <PyModule 'encodings.mac_farsi' C:\Python26\lib\encodings\mac_farsi.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_greek: None -> <PyModule 'encodings.mac_greek' C:\Python26\lib\encodings\mac_greek.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_iceland: None -> <PyModule 'encodings.mac_iceland' C:\Python26\lib\encodings\mac_iceland.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_latin2: None -> <PyModule 'encodings.mac_latin2' C:\Python26\lib\encodings\mac_latin2.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_roman: None -> <PyModule 'encodings.mac_roman' C:\Python26\lib\encodings\mac_roman.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_romanian: None -> <PyModule 'encodings.mac_romanian' C:\Python26\lib\encodings\mac_romanian.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mac_turkish: None -> <PyModule 'encodings.mac_turkish' C:\Python26\lib\encodings\mac_turkish.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.mbcs: None -> <PyModule 'encodings.mbcs' C:\Python26\lib\encodings\mbcs.pyc imports=[('codecs.mbcs_decode', 0, 0, -1), ('codecs', 0, 0, -1), ('codecs.mbcs_encode', 0, 0, -1)] binaries=[] datas=[]>
encodings.palmos: None -> <PyModule 'encodings.palmos' C:\Python26\lib\encodings\palmos.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.ptcp154: None -> <PyModule 'encodings.ptcp154' C:\Python26\lib\encodings\ptcp154.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.punycode: None -> <PyModule 'encodings.punycode' C:\Python26\lib\encodings\punycode.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.quopri_codec: None -> <PyModule 'encodings.quopri_codec' C:\Python26\lib\encodings\quopri_codec.pyc imports=[('quopri', 0, 0, -1), ('cStringIO', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('StringIO', 0, 1, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.raw_unicode_escape: None -> <PyModule 'encodings.raw_unicode_escape' C:\Python26\lib\encodings\raw_unicode_escape.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.rot_13: None -> <PyModule 'encodings.rot_13' C:\Python26\lib\encodings\rot_13.pyc imports=[('sys', 0, 1, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.shift_jis: None -> <PyModule 'encodings.shift_jis' C:\Python26\lib\encodings\shift_jis.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.shift_jisx0213: None -> <PyModule 'encodings.shift_jisx0213' C:\Python26\lib\encodings\shift_jisx0213.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.shift_jis_2004: None -> <PyModule 'encodings.shift_jis_2004' C:\Python26\lib\encodings\shift_jis_2004.pyc imports=[('_multibytecodec', 0, 0, -1), ('codecs', 0, 0, -1), ('_codecs_jp', 0, 0, -1)] binaries=[] datas=[]>
encodings.string_escape: None -> <PyModule 'encodings.string_escape' C:\Python26\lib\encodings\string_escape.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.tis_620: None -> <PyModule 'encodings.tis_620' C:\Python26\lib\encodings\tis_620.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.undefined: None -> <PyModule 'encodings.undefined' C:\Python26\lib\encodings\undefined.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.unicode_escape: None -> <PyModule 'encodings.unicode_escape' C:\Python26\lib\encodings\unicode_escape.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.unicode_internal: None -> <PyModule 'encodings.unicode_internal' C:\Python26\lib\encodings\unicode_internal.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_16: None -> <PyModule 'encodings.utf_16' C:\Python26\lib\encodings\utf_16.pyc imports=[('codecs', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_16_be: None -> <PyModule 'encodings.utf_16_be' C:\Python26\lib\encodings\utf_16_be.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_16_le: None -> <PyModule 'encodings.utf_16_le' C:\Python26\lib\encodings\utf_16_le.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_32: None -> <PyModule 'encodings.utf_32' C:\Python26\lib\encodings\utf_32.pyc imports=[('codecs', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_32_be: None -> <PyModule 'encodings.utf_32_be' C:\Python26\lib\encodings\utf_32_be.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_32_le: None -> <PyModule 'encodings.utf_32_le' C:\Python26\lib\encodings\utf_32_le.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_7: None -> <PyModule 'encodings.utf_7' C:\Python26\lib\encodings\utf_7.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_8: None -> <PyModule 'encodings.utf_8' C:\Python26\lib\encodings\utf_8.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.utf_8_sig: None -> <PyModule 'encodings.utf_8_sig' C:\Python26\lib\encodings\utf_8_sig.pyc imports=[('codecs', 0, 0, -1)] binaries=[] datas=[]>
encodings.uu_codec: None -> <PyModule 'encodings.uu_codec' C:\Python26\lib\encodings\uu_codec.pyc imports=[('cStringIO.StringIO', 1, 0, -1), ('binascii.a2b_uu', 1, 0, -1), ('binascii', 1, 0, -1), ('binascii.b2a_uu', 1, 0, -1), ('binascii', 0, 0, -1), ('codecs', 0, 0, -1), ('cStringIO', 1, 0, -1)] binaries=[] datas=[]>
encodings.zlib_codec: None -> <PyModule 'encodings.zlib_codec' C:\Python26\lib\encodings\zlib_codec.pyc imports=[('zlib', 0, 0, -1), ('codecs', 0, 0, -1)] binaries=[] datas=[]>
_codecs: None -> <BuiltinModule '_codecs' None imports=[] binaries=[] datas=[]>
encodings.base64: None -> None
base64: None -> <PyModule 'base64' C:\Python26\lib\base64.pyc imports=[('sys', 1, 0, -1), ('binascii', 0, 0, -1), ('re', 0, 0, -1), ('struct', 0, 0, -1), ('getopt', 1, 0, -1)] binaries=[] datas=[]>
binascii: None -> <BuiltinModule 'binascii' None imports=[] binaries=[] datas=[]>
getopt: None -> <PyModule 'getopt' C:\Python26\lib\getopt.pyc imports=[('sys', 0, 1, -1), ('os', 0, 0, -1)] binaries=[] datas=[]>
_struct: None -> <BuiltinModule '_struct' None imports=[] binaries=[] datas=[]>
encodings._codecs_tw: None -> None
_codecs_tw: None -> <BuiltinModule '_codecs_tw' None imports=[] binaries=[] datas=[]>
encodings._multibytecodec: None -> None
_multibytecodec: None -> <BuiltinModule '_multibytecodec' None imports=[] binaries=[] datas=[]>
encodings._codecs_hk: None -> None
_codecs_hk: None -> <BuiltinModule '_codecs_hk' None imports=[] binaries=[] datas=[]>
encodings.bz2: None -> None
bz2: None -> <ExtensionModule 'bz2' C:\Python26\DLLs\bz2.pyd imports=[] binaries=[] datas=[]>
encodings._codecs_jp: None -> None
_codecs_jp: None -> <BuiltinModule '_codecs_jp' None imports=[] binaries=[] datas=[]>
encodings._codecs_kr: None -> None
_codecs_kr: None -> <BuiltinModule '_codecs_kr' None imports=[] binaries=[] datas=[]>
encodings._codecs_cn: None -> None
_codecs_cn: None -> <BuiltinModule '_codecs_cn' None imports=[] binaries=[] datas=[]>
encodings.binascii: None -> None
encodings.unicodedata: None -> None
unicodedata: None -> <ExtensionModule 'unicodedata' C:\Python26\DLLs\unicodedata.pyd imports=[] binaries=[] datas=[]>
encodings.re: None -> None
encodings.stringprep: None -> None
stringprep: None -> <PyModule 'stringprep' C:\Python26\lib\stringprep.pyc imports=[('unicodedata', 0, 0, -1), ('unicodedata.ucd_3_2_0', 0, 0, -1)] binaries=[] datas=[]>
encodings._codecs_iso2022: None -> None
_codecs_iso2022: None -> <BuiltinModule '_codecs_iso2022' None imports=[] binaries=[] datas=[]>
encodings.quopri: None -> None
quopri: None -> <PyModule 'quopri' C:\Python26\lib\quopri.pyc imports=[('cStringIO.StringIO', 1, 0, -1), ('getopt', 1, 0, -1), ('binascii.a2b_qp', 0, 0, -1), ('binascii.b2a_qp', 0, 0, -1), ('sys', 1, 0, -1), ('binascii', 0, 0, -1), ('cStringIO', 1, 0, -1)] binaries=[] datas=[]>
encodings.cStringIO: None -> None
encodings.StringIO: None -> None
encodings.sys: None -> None
encodings.zlib: None -> None
zlib: None -> <BuiltinModule 'zlib' None imports=[] binaries=[] datas=[]>
org: None -> None
  DEL org
org: None -> None
  DEL org
_warnings: None -> <BuiltinModule '_warnings' None imports=[] binaries=[] datas=[]>
readline: None -> None
  DEL readline
dis: None -> <PyModule 'dis' C:\Python26\lib\dis.pyc imports=[('opcode', 0, 0, -1), ('opcode.*', 0, 0, -1), ('opcode.__all__', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
imp: None -> <BuiltinModule 'imp' None imports=[] binaries=[] datas=[]>
opcode: None -> <PyModule 'opcode' C:\Python26\lib\opcode.pyc imports=[] binaries=[] datas=[]>
heapq: None -> <PyModule 'heapq' C:\Python26\lib\heapq.pyc imports=[('_heapq.nlargest', 0, 0, -1), ('operator.itemgetter', 0, 0, -1), ('itertools', 0, 0, -1), ('bisect', 0, 0, -1), ('_heapq.heappush', 0, 0, -1), ('doctest', 0, 1, -1), ('operator', 0, 0, -1), ('_heapq.heappop', 0, 0, -1), ('itertools.repeat', 0, 0, -1), ('_heapq.heappushpop', 0, 0, -1), ('itertools.islice', 0, 0, -1), ('itertools.izip', 0, 0, -1), ('itertools.tee', 0, 0, -1), ('_heapq', 0, 0, -1), ('itertools.count', 0, 0, -1), ('_heapq.heapify', 0, 0, -1), ('_heapq.heapreplace', 0, 0, -1), ('_heapq.nsmallest', 0, 0, -1), ('itertools.imap', 0, 0, -1), ('operator.neg', 0, 0, -1)] binaries=[] datas=[]>
_heapq: None -> <BuiltinModule '_heapq' None imports=[] binaries=[] datas=[]>
bisect: None -> <PyModule 'bisect' C:\Python26\lib\bisect.pyc imports=[('_bisect.insort_right', 0, 0, -1), ('_bisect.insort', 0, 0, -1), ('_bisect', 0, 0, -1), ('_bisect.insort_left', 0, 0, -1), ('_bisect.bisect_left', 0, 0, -1), ('_bisect.bisect_right', 0, 0, -1), ('_bisect.bisect', 0, 0, -1)] binaries=[] datas=[]>
_bisect: None -> <BuiltinModule '_bisect' None imports=[] binaries=[] datas=[]>
fcntl: None -> None
  DEL fcntl
math: None -> <BuiltinModule 'math' None imports=[] binaries=[] datas=[]>
_random: None -> <BuiltinModule '_random' None imports=[] binaries=[] datas=[]>
marshal: None -> <BuiltinModule 'marshal' None imports=[] binaries=[] datas=[]>
org: None -> None
  DEL org
org: None -> None
  DEL org
pwd: None -> None
  DEL pwd
genericpath: None -> <PyModule 'genericpath' C:\Python26\lib\genericpath.pyc imports=[('os', 0, 0, -1), ('stat', 0, 0, -1)] binaries=[] datas=[]>
stat: None -> <PyModule 'stat' C:\Python26\lib\stat.pyc imports=[] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
pydoc: None -> <PyModule 'pydoc' C:\Python26\lib\pydoc.pyc imports=[('collections.deque', 0, 0, -1), ('string.rfind', 0, 0, -1), ('tty', 1, 0, -1), ('os', 0, 0, -1), ('StringIO', 1, 1, -1), ('pkgutil', 0, 0, -1), ('string.rstrip', 0, 0, -1), ('getopt', 1, 0, -1), ('string.find', 0, 0, -1), ('traceback.extract_tb', 0, 0, -1), ('sys', 0, 0, -1), ('formatter', 1, 1, -1), ('string.join', 0, 0, -1), ('string', 0, 0, -1), ('webbrowser', 1, 0, -1), ('repr', 0, 0, -1), ('warnings', 1, 0, -1), ('string.expandtabs', 0, 0, -1), ('BaseHTTPServer', 1, 0, -1), ('collections', 0, 0, -1), ('string.split', 0, 0, -1), ('types', 0, 0, -1), ('repr.Repr', 0, 0, -1), ('string.strip', 0, 0, -1), ('re', 0, 0, -1), ('threading', 1, 0, -1), ('tempfile', 1, 0, -1), ('string.lower', 0, 0, -1), ('inspect', 0, 0, -1), ('select', 1, 0, -1), ('nturl2path', 1, 1, -1), ('imp', 0, 0, -1), ('pydoc_topics', 1, 0, -1), ('ic', 1, 1, -1), ('mimetools', 1, 0, -1), ('__builtin__', 0, 0, -1), ('traceback', 0, 0, -1)] binaries=[] datas=[]>
tty: None -> <PyModule 'tty' C:\Python26\lib\tty.pyc imports=[('termios.*', 0, 0, -1), ('termios', 0, 0, -1)] binaries=[] datas=[]>
pkgutil: None -> <PyModule 'pkgutil' C:\Python26\lib\pkgutil.pyc imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('os.path', 0, 0, -1), ('zipimport.zipimporter', 0, 0, -1), ('zipimport', 0, 0, -1), ('marshal', 1, 0, -1), ('types.ModuleType', 0, 0, -1), ('inspect', 1, 0, -1)] binaries=[] datas=[]>
formatter: None -> <PyModule 'formatter' C:\Python26\lib\formatter.pyc imports=[('sys', 0, 0, -1)] binaries=[] datas=[]>
webbrowser: None -> <PyModule 'webbrowser' C:\Python26\lib\webbrowser.pyc imports=[('sys', 0, 0, -1), ('copy', 1, 1, -1), ('os', 0, 0, -1), ('ic', 0, 0, -1), ('glob', 1, 0, -1), ('tempfile', 1, 0, -1), ('stat', 0, 0, -1), ('subprocess', 0, 0, -1), ('pwd', 1, 0, -1), ('getopt', 1, 0, -1), ('socket', 1, 0, -1), ('time', 0, 0, -1), ('shlex', 0, 0, -1)] binaries=[] datas=[]>
BaseHTTPServer: None -> <PyModule 'BaseHTTPServer' C:\Python26\lib\BaseHTTPServer.pyc imports=[('sys', 0, 0, -1), ('warnings', 0, 0, -1), ('socket', 0, 0, -1), ('SocketServer', 0, 0, -1), ('warnings.catch_warnings', 0, 0, -1), ('mimetools', 0, 0, -1), ('warnings.filterwarnings', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
nturl2path: None -> <PyModule 'nturl2path' C:\Python26\lib\nturl2path.pyc imports=[('urllib', 1, 0, -1), ('string', 1, 0, -1)] binaries=[] datas=[]>
pydoc_topics: None -> <PyModule 'pydoc_topics' C:\Python26\lib\pydoc_topics.pyc imports=[] binaries=[] datas=[]>
ic: None -> None
  DEL ic
mimetools: None -> <PyModule 'mimetools' C:\Python26\lib\mimetools.pyc imports=[('warnings.warnpy3k', 0, 0, -1), ('sys', 0, 0, -1), ('uu', 1, 1, -1), ('os', 0, 0, -1), ('rfc822', 0, 0, -1), ('quopri', 1, 1, -1), ('warnings', 0, 0, -1), ('dummy_thread', 0, 1, -1), ('socket', 1, 1, -1), ('thread', 0, 0, -1), ('warnings.catch_warnings', 0, 0, -1), ('time', 1, 0, -1), ('base64', 1, 1, -1), ('warnings.filterwarnings', 0, 0, -1), ('tempfile', 0, 0, -1)] binaries=[] datas=[]>
termios: None -> None
  DEL termios
termios: None -> None
  DEL termios
zipimport: None -> <BuiltinModule 'zipimport' None imports=[] binaries=[] datas=[]>
ic: None -> None
  DEL ic
glob: None -> <PyModule 'glob' C:\Python26\lib\glob.pyc imports=[('os', 0, 0, -1), ('re', 0, 0, -1), ('sys', 0, 0, -1), ('fnmatch', 0, 0, -1)] binaries=[] datas=[]>
pwd: None -> None
  DEL pwd
socket: None -> <PyModule 'socket' C:\Python26\lib\socket.pyc imports=[('_ssl.SSL_ERROR_EOF', 0, 1, -1), ('_ssl.RAND_add', 0, 1, -1), ('os', 0, 0, -1), ('warnings', 0, 0, -1), ('_ssl.RAND_egd', 0, 1, -1), ('_ssl', 0, 1, -1), ('sys', 0, 0, -1), ('ssl', 1, 0, -1), ('cStringIO', 0, 0, -1), ('_ssl.SSL_ERROR_INVALID_ERROR_CODE', 0, 1, -1), ('_ssl.SSL_ERROR_WANT_X509_LOOKUP', 0, 1, -1), ('_ssl.SSL_ERROR_WANT_CONNECT', 0, 1, -1), ('_ssl.SSL_ERROR_SYSCALL', 0, 1, -1), ('_ssl.SSL_ERROR_WANT_WRITE', 0, 1, -1), ('_socket.*', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_READ', 0, 1, -1), ('_ssl', 0, 0, -1), ('_socket', 0, 0, -1), ('_ssl.RAND_status', 0, 1, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('errno', 0, 0, -1), ('_ssl.SSL_ERROR_SSL', 0, 1, -1), ('_ssl.SSL_ERROR_ZERO_RETURN', 0, 1, -1), ('_ssl.SSLError', 0, 1, -1), ('StringIO', 0, 1, -1)] binaries=[] datas=[]>
fnmatch: None -> <PyModule 'fnmatch' C:\Python26\lib\fnmatch.pyc imports=[('re', 0, 0, -1), ('posixpath', 1, 0, -1), ('os', 1, 0, -1)] binaries=[] datas=[]>
_ssl: None -> <ExtensionModule '_ssl' C:\Python26\DLLs\_ssl.pyd imports=[] binaries=[] datas=[]>
ssl: None -> <PyModule 'ssl' C:\Python26\lib\ssl.pyc imports=[('_ssl.SSL_ERROR_INVALID_ERROR_CODE', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_X509_LOOKUP', 0, 0, -1), ('_ssl.RAND_status', 0, 0, -1), ('_ssl.SSL_ERROR_SYSCALL', 0, 0, -1), ('socket._fileobject', 0, 0, -1), ('_ssl.SSL_ERROR_ZERO_RETURN', 0, 0, -1), ('_ssl.SSL_ERROR_SSL', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_READ', 0, 0, -1), ('_ssl.PROTOCOL_TLSv1', 0, 0, -1), ('_ssl.PROTOCOL_SSLv3', 0, 0, -1), ('_ssl.RAND_egd', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_WRITE', 0, 0, -1), ('_ssl.SSL_ERROR_EOF', 0, 0, -1), ('_ssl.RAND_add', 0, 0, -1), ('_ssl.CERT_REQUIRED', 0, 0, -1), ('_ssl.SSLError', 0, 0, -1), ('textwrap', 0, 0, -1), ('socket.error', 0, 0, -1), ('socket', 0, 0, -1), ('_ssl', 0, 0, -1), ('base64', 0, 0, -1), ('_ssl.PROTOCOL_SSLv23', 0, 0, -1), ('errno', 0, 0, -1), ('_ssl.CERT_OPTIONAL', 0, 0, -1), ('_ssl.CERT_NONE', 0, 0, -1), ('socket._delegate_methods', 0, 0, -1), ('time', 1, 0, -1), ('socket.socket', 0, 0, -1), ('_ssl.SSL_ERROR_WANT_CONNECT', 0, 0, -1), ('socket.getnameinfo', 0, 0, -1), ('_ssl.PROTOCOL_SSLv2', 0, 0, -1)] binaries=[] datas=[]>
_socket: None -> <ExtensionModule '_socket' C:\Python26\DLLs\_socket.pyd imports=[] binaries=[] datas=[]>
SocketServer: None -> <PyModule 'SocketServer' C:\Python26\lib\SocketServer.pyc imports=[('threading', 0, 0, -1), ('sys', 0, 0, -1), ('select', 0, 0, -1), ('os', 0, 0, -1), ('StringIO', 1, 1, -1), ('cStringIO.StringIO', 1, 0, -1), ('socket', 0, 0, -1), ('dummy_threading', 0, 1, -1), ('cStringIO', 1, 0, -1), ('StringIO.StringIO', 1, 1, -1), ('traceback', 1, 0, -1)] binaries=[] datas=[]>
dummy_threading: None -> <PyModule 'dummy_threading' C:\Python26\lib\dummy_threading.pyc imports=[('dummy_thread', 0, 0, -1), ('threading', 0, 0, -1), ('sys', 0, 0, -1), ('_dummy_threading', 0, 0, -1), ('_dummy_threading.__all__', 0, 0, -1), ('_dummy_threading.*', 0, 0, -1), ('sys.modules', 0, 0, -1)] binaries=[] datas=[]>
_dummy_threading: None -> None
  DEL _dummy_threading
_dummy_threading: None -> None
  DEL _dummy_threading
_dummy_threading: None -> None
  DEL _dummy_threading
uu: None -> <PyModule 'uu' C:\Python26\lib\uu.pyc imports=[('optparse', 1, 0, -1), ('binascii', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1)] binaries=[] datas=[]>
rfc822: None -> <PyModule 'rfc822' C:\Python26\lib\rfc822.pyc imports=[('sys', 0, 1, -1), ('warnings', 0, 0, -1), ('warnings.warnpy3k', 0, 0, -1), ('time', 0, 0, -1), ('os', 0, 1, -1)] binaries=[] datas=[]>
urllib: None -> <PyModule 'urllib' C:\Python26\lib\urllib.pyc imports=[('ssl', 0, 0, -1), ('cStringIO.StringIO', 1, 0, -1), ('os', 0, 0, -1), ('email.utils', 1, 0, -1), ('StringIO', 1, 1, -1), ('_scproxy._get_proxies', 0, 1, -1), ('re', 1, 0, -1), ('cStringIO', 1, 1, -1), ('string', 0, 0, -1), ('getopt', 1, 0, -1), ('base64', 1, 1, -1), ('_scproxy._get_proxy_settings', 0, 1, -1), ('tempfile', 1, 1, -1), ('ftplib', 1, 0, -1), ('fnmatch', 1, 0, -1), ('re', 1, 1, -1), ('sys', 0, 0, -1), ('rourl2path.url2pathname', 0, 1, -1), ('mimetools', 1, 0, -1), ('rourl2path', 0, 1, -1), ('macurl2path.pathname2url', 0, 1, -1), ('cStringIO.StringIO', 1, 1, -1), ('nturl2path.pathname2url', 0, 1, -1), ('warnings', 1, 0, -1), ('time', 0, 0, -1), ('macurl2path.url2pathname', 0, 1, -1), ('nturl2path.url2pathname', 0, 1, -1), ('rourl2path.pathname2url', 0, 1, -1), ('urlparse', 0, 0, -1), ('mimetypes', 1, 0, -1), ('warnings.warnpy3k', 1, 0, -1), ('socket', 0, 0, -1), ('getpass', 1, 0, -1), ('ftplib', 1, 1, -1), ('macurl2path', 0, 1, -1), ('cStringIO', 1, 0, -1), ('httplib', 1, 0, -1), ('urlparse.urljoin', 0, 0, -1), ('_scproxy', 0, 1, -1), ('nturl2path', 0, 1, -1), ('_winreg', 1, 0, -1), ('mimetools', 1, 1, -1), ('fnmatch.fnmatch', 1, 0, -1), ('sys', 1, 0, -1), ('socket', 1, 0, -1), ('StringIO.StringIO', 1, 1, -1)] binaries=[] datas=[]>
email: None -> <PkgModule 'email' C:\Python26\lib\email\__init__.pyc imports=[('email.mime', 0, 0, -1), ('email.parser.Parser', 1, 0, -1), ('sys', 0, 0, -1), ('email.parser', 1, 0, -1), ('email.charset', 0, 0, -1), ('email.encoders', 0, 0, -1), ('email.errors', 0, 0, -1), ('email.feedparser', 0, 0, -1), ('email.generator', 0, 0, -1), ('email.header', 0, 0, -1), ('email.iterators', 0, 0, -1), ('email.message', 0, 0, -1), ('email.parser', 0, 0, -1), ('email.utils', 0, 0, -1), ('email.base64mime', 0, 0, -1), ('email.quoprimime', 0, 0, -1), ('email.mime.audio', 0, 0, -1), ('email.mime.base', 0, 0, -1), ('email.mime.image', 0, 0, -1), ('email.mime.message', 0, 0, -1), ('email.mime.multipart', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1), ('email.mime.text', 0, 0, -1)] binaries=[] datas=[]>
email.utils: None -> <PyModule 'email.utils' C:\Python26\lib\email\utils.pyc imports=[('email._parseaddr', 0, 0, -1), ('email.encoders', 0, 0, -1), ('re', 0, 0, -1), ('email._parseaddr.parsedate', 0, 0, -1), ('email._parseaddr.parsedate_tz', 0, 0, -1), ('email._parseaddr.quote', 0, 0, -1), ('os', 0, 0, -1), ('urllib', 1, 0, -1), ('email._parseaddr.mktime_tz', 0, 0, -1), ('warnings', 0, 0, -1), ('quopri.decodestring', 0, 0, -1), ('socket', 0, 0, -1), ('email.encoders._qencode', 0, 0, -1), ('random', 0, 0, -1), ('urllib', 0, 0, -1), ('base64', 0, 0, -1), ('email.encoders._bencode', 0, 0, -1), ('time', 0, 0, -1), ('quopri', 0, 0, -1), ('email._parseaddr.AddressList', 0, 0, -1)] binaries=[] datas=[]>
_scproxy: None -> None
  DEL _scproxy
_scproxy: None -> None
  DEL _scproxy
ftplib: None -> <PyModule 'ftplib' C:\Python26\lib\ftplib.pyc imports=[('re', 1, 1, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('socket', 0, 0, -1), ('socket._GLOBAL_DEFAULT_TIMEOUT', 0, 0, -1), ('SOCKS', 0, 0, -1), ('socket', 0, 1, -1), ('socket.getfqdn', 0, 0, -1)] binaries=[] datas=[]>
rourl2path: None -> None
  DEL rourl2path
rourl2path: None -> None
  DEL rourl2path
macurl2path: None -> <PyModule 'macurl2path' C:\Python26\lib\macurl2path.pyc imports=[('os', 0, 0, -1), ('urllib', 0, 0, -1)] binaries=[] datas=[]>
rourl2path: None -> None
  DEL rourl2path
urlparse: None -> <PyModule 'urlparse' C:\Python26\lib\urlparse.pyc imports=[('collections', 0, 0, -1), ('collections.namedtuple', 0, 0, -1)] binaries=[] datas=[]>
mimetypes: None -> <PyModule 'mimetypes' C:\Python26\lib\mimetypes.pyc imports=[('sys', 0, 1, -1), ('os', 0, 0, -1), ('getopt', 0, 1, -1), ('posixpath', 0, 0, -1), ('urllib', 0, 0, -1)] binaries=[] datas=[]>
getpass: None -> <PyModule 'getpass' C:\Python26\lib\getpass.pyc imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('EasyDialogs', 0, 1, -1), ('warnings', 0, 0, -1), ('EasyDialogs.AskPassword', 0, 1, -1), ('msvcrt', 1, 0, -1), ('msvcrt', 0, 1, -1), ('pwd', 1, 0, -1), ('termios', 0, 0, -1), ('os', 1, 0, -1)] binaries=[] datas=[]>
httplib: None -> <PyModule 'httplib' C:\Python26\lib\httplib.pyc imports=[('sys.py3kwarning', 0, 0, -1), ('ssl', 0, 0, -1), ('urlparse', 0, 0, -1), ('os', 1, 1, -1), ('array', 0, 0, -1), ('warnings', 0, 0, -1), ('socket', 0, 0, -1), ('ssl', 1, 0, -1), ('sys', 1, 0, -1), ('cStringIO', 0, 0, -1), ('mimetools', 0, 0, -1), ('array.array', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('StringIO', 0, 1, -1), ('urlparse.urlsplit', 0, 0, -1), ('getopt', 1, 0, -1), ('sys', 0, 0, -1), ('_ssl', 0, 0, -1), ('ssl', 0, 0, -1)] binaries=[] datas=[]>
_scproxy: None -> None
  DEL _scproxy
_winreg: None -> <BuiltinModule '_winreg' None imports=[] binaries=[] datas=[]>
email.email: None -> None
email.mime: None -> <PkgModule 'email.mime' C:\Python26\lib\email\mime\__init__.pyc imports=[] binaries=[] datas=[]>
email.parser: None -> <PyModule 'email.parser' C:\Python26\lib\email\parser.pyc imports=[('email.message', 0, 0, -1), ('warnings', 0, 0, -1), ('cStringIO', 0, 0, -1), ('email.feedparser', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1), ('email.feedparser.FeedParser', 0, 0, -1), ('email.message.Message', 0, 0, -1)] binaries=[] datas=[]>
email.sys: None -> None
email.charset: None -> <PyModule 'email.charset' C:\Python26\lib\email\charset.pyc imports=[('email.encoders', 0, 0, -1), ('email.quoprimime', 0, 0, -1), ('email', 0, 0, -1), ('email.errors', 0, 0, -1), ('email.base64mime', 0, 0, -1), ('email.encoders.encode_7or8bit', 0, 0, -1)] binaries=[] datas=[]>
email.encoders: None -> <PyModule 'email.encoders' C:\Python26\lib\email\encoders.pyc imports=[('base64', 0, 0, -1), ('quopri.encodestring', 0, 0, -1), ('quopri', 0, 0, -1)] binaries=[] datas=[]>
email.errors: None -> <PyModule 'email.errors' C:\Python26\lib\email\errors.pyc imports=[] binaries=[] datas=[]>
email.feedparser: None -> <PyModule 'email.feedparser' C:\Python26\lib\email\feedparser.pyc imports=[('email.errors', 0, 0, -1), ('re', 0, 0, -1), ('email', 0, 0, -1), ('email.message', 0, 0, -1)] binaries=[] datas=[]>
email.generator: None -> <PyModule 'email.generator' C:\Python26\lib\email\generator.pyc imports=[('re', 0, 0, -1), ('sys', 0, 0, -1), ('warnings', 0, 0, -1), ('email.header.Header', 0, 0, -1), ('email.header', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1), ('cStringIO', 0, 0, -1), ('random', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
email.header: None -> <PyModule 'email.header' C:\Python26\lib\email\header.pyc imports=[('re', 0, 0, -1), ('email.quoprimime', 0, 0, -1), ('email.errors', 0, 0, -1), ('email.charset.Charset', 0, 0, -1), ('email.base64mime', 0, 0, -1), ('email.errors.HeaderParseError', 0, 0, -1), ('binascii', 0, 0, -1), ('email.charset', 0, 0, -1)] binaries=[] datas=[]>
email.iterators: None -> <PyModule 'email.iterators' C:\Python26\lib\email\iterators.pyc imports=[('cStringIO.StringIO', 0, 0, -1), ('cStringIO', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
email.message: None -> <PyModule 'email.message' C:\Python26\lib\email\message.pyc imports=[('re', 0, 0, -1), ('email.iterators', 1, 0, -1), ('email', 0, 0, -1), ('email.errors', 0, 0, -1), ('email.iterators.walk', 1, 0, -1), ('warnings', 0, 0, -1), ('email.generator.Generator', 1, 0, -1), ('cStringIO', 0, 0, -1), ('email.utils', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1), ('binascii', 0, 0, -1), ('email.charset', 0, 0, -1), ('uu', 0, 0, -1), ('email.generator', 1, 0, -1), ('email.iterators', 0, 0, -1), ('email.generator', 0, 0, -1)] binaries=[] datas=[]>
email.base64mime: None -> <PyModule 'email.base64mime' C:\Python26\lib\email\base64mime.pyc imports=[('email.utils.fix_eols', 0, 0, -1), ('binascii', 0, 0, -1), ('email.utils', 0, 0, -1), ('binascii.a2b_base64', 0, 0, -1), ('binascii.b2a_base64', 0, 0, -1)] binaries=[] datas=[]>
email.quoprimime: None -> <PyModule 'email.quoprimime' C:\Python26\lib\email\quoprimime.pyc imports=[('string.hexdigits', 0, 0, -1), ('re', 0, 0, -1), ('email.utils.fix_eols', 0, 0, -1), ('string', 0, 0, -1), ('email.utils', 0, 0, -1)] binaries=[] datas=[]>
email.mime.audio: None -> <PyModule 'email.mime.audio' C:\Python26\lib\email\mime\audio.pyc imports=[('email.encoders', 0, 0, -1), ('email', 0, 0, -1), ('sndhdr', 0, 0, -1), ('email.mime.nonmultipart.MIMENonMultipart', 0, 0, -1), ('cStringIO', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1)] binaries=[] datas=[]>
email.mime.base: None -> <PyModule 'email.mime.base' C:\Python26\lib\email\mime\base.pyc imports=[('email', 0, 0, -1), ('email.message', 0, 0, -1)] binaries=[] datas=[]>
email.mime.image: None -> <PyModule 'email.mime.image' C:\Python26\lib\email\mime\image.pyc imports=[('email.encoders', 0, 0, -1), ('email.mime.nonmultipart.MIMENonMultipart', 0, 0, -1), ('imghdr', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1), ('email', 0, 0, -1)] binaries=[] datas=[]>
email.mime.message: None -> <PyModule 'email.mime.message' C:\Python26\lib\email\mime\message.pyc imports=[('email.mime.nonmultipart.MIMENonMultipart', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1), ('email', 0, 0, -1), ('email.message', 0, 0, -1)] binaries=[] datas=[]>
email.mime.multipart: None -> <PyModule 'email.mime.multipart' C:\Python26\lib\email\mime\multipart.pyc imports=[('email.mime.base', 0, 0, -1), ('email.mime.base.MIMEBase', 0, 0, -1)] binaries=[] datas=[]>
email.mime.nonmultipart: None -> <PyModule 'email.mime.nonmultipart' C:\Python26\lib\email\mime\nonmultipart.pyc imports=[('email.errors', 0, 0, -1), ('email.mime.base', 0, 0, -1), ('email.mime.base.MIMEBase', 0, 0, -1), ('email', 0, 0, -1)] binaries=[] datas=[]>
email.mime.text: None -> <PyModule 'email.mime.text' C:\Python26\lib\email\mime\text.pyc imports=[('email.encoders', 0, 0, -1), ('email.mime.nonmultipart.MIMENonMultipart', 0, 0, -1), ('email.encoders.encode_7or8bit', 0, 0, -1), ('email.mime.nonmultipart', 0, 0, -1)] binaries=[] datas=[]>
email.warnings: None -> None
email.cStringIO: None -> None
email.re: None -> None
email.binascii: None -> None
email.uu: None -> None
email.random: None -> None
email.time: None -> None
email.string: None -> None
email._parseaddr: None -> <PyModule 'email._parseaddr' C:\Python26\lib\email\_parseaddr.pyc imports=[('time', 0, 0, -1)] binaries=[] datas=[]>
email.os: None -> None
email.urllib: None -> None
email.quopri: None -> None
email.socket: None -> None
email.base64: None -> None
email.mime.email: None -> None
email.mime.sndhdr: None -> None
sndhdr: None -> <PyModule 'sndhdr' C:\Python26\lib\sndhdr.pyc imports=[('sys', 1, 0, -1), ('aifc', 1, 0, -1), ('glob', 1, 1, -1), ('os', 1, 0, -1)] binaries=[] datas=[]>
email.mime.cStringIO: None -> None
aifc: None -> <PyModule 'aifc' C:\Python26\lib\aifc.pyc imports=[('cl', 1, 1, -1), ('struct', 0, 0, -1), ('audioop', 1, 0, -1), ('chunk.Chunk', 0, 0, -1), ('__builtin__', 0, 0, -1), ('sys', 0, 1, -1), ('cl', 1, 0, -1), ('math', 1, 0, -1), ('chunk', 0, 0, -1), ('audioop', 1, 1, -1)] binaries=[] datas=[]>
cl: None -> None
  DEL cl
audioop: None -> <BuiltinModule 'audioop' None imports=[] binaries=[] datas=[]>
chunk: None -> <PyModule 'chunk' C:\Python26\lib\chunk.pyc imports=[('struct', 1, 0, -1)] binaries=[] datas=[]>
cl: None -> None
  DEL cl
email.mime.imghdr: None -> None
imghdr: None -> <PyModule 'imghdr' C:\Python26\lib\imghdr.pyc imports=[('sys', 1, 0, -1), ('glob', 1, 1, -1), ('os', 1, 0, -1)] binaries=[] datas=[]>
SOCKS: None -> None
  DEL SOCKS
EasyDialogs: None -> None
  DEL EasyDialogs
EasyDialogs: None -> None
  DEL EasyDialogs
pwd: None -> None
  DEL pwd
termios: None -> None
  DEL termios
__main__: <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\_pyi_bootstrap.py imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1), ('site', 0, 0, -1), ('pyi_importers', 0, 0, -1), ('warnings', 0, 1, -1), ('encodings', 0, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\pyi_importers.py imports=[('pyi_archive.ZlibArchive', 0, 0, -1), ('imp', 0, 0, -1), ('sys', 0, 0, -1), ('pyi_archive.ArchiveReadError', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
pwd: None -> None
  DEL pwd
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
__main__: <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\pyi_importers.py imports=[('pyi_archive.ZlibArchive', 0, 0, -1), ('imp', 0, 0, -1), ('sys', 0, 0, -1), ('pyi_archive.ArchiveReadError', 0, 0, -1), ('pyi_archive', 0, 0, -1), ('pyi_os_path', 0, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\pyi_archive.py imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('marshal', 0, 0, -1), ('os', 1, 1, -1), ('struct', 0, 0, -1), ('imp', 1, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
pwd: None -> None
  DEL pwd
__main__: <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\pyi_archive.py imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('marshal', 0, 0, -1), ('os', 1, 1, -1), ('struct', 0, 0, -1), ('imp', 1, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\pyi_carchive.py imports=[('zlib', 0, 0, -1), ('os.path', 1, 0, -1), ('pyi_archive', 0, 0, -1), ('sys', 0, 0, -1), ('struct', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
pwd: None -> None
  DEL pwd
__main__: <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\pyi_carchive.py imports=[('zlib', 0, 0, -1), ('os.path', 1, 0, -1), ('pyi_archive', 0, 0, -1), ('sys', 0, 0, -1), ('struct', 0, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\pyi_os_path.py imports=[('sys', 0, 0, -1), ('posix.environ', 0, 1, -1), ('nt.listdir', 0, 1, -1), ('nt.environ', 0, 1, -1), ('posix', 0, 1, -1), ('posix.listdir', 0, 1, -1), ('nt', 0, 1, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
__main__: <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\pyi_os_path.py imports=[('sys', 0, 0, -1), ('posix.environ', 0, 1, -1), ('nt.listdir', 0, 1, -1), ('nt.environ', 0, 1, -1), ('posix', 0, 1, -1), ('posix.listdir', 0, 1, -1), ('nt', 0, 1, -1)] binaries=[] datas=[]> -> <PyScript '__main__' .\panic.py imports=[('tkMessageBox', 0, 0, -1), ('os', 0, 0, -1), ('guipart', 0, 0, -1), ('dialog.LoginDialog', 0, 0, -1), ('random', 0, 0, -1), ('threading', 0, 0, -1), ('Queue', 0, 0, -1), ('guipart.GuiPart', 0, 0, -1), ('multiListBox', 0, 0, -1), ('PIL', 0, 0, -1), ('tkFileDialog', 0, 0, -1), ('dialog', 0, 0, -1), ('winsound', 0, 0, -1), ('guardMultiListBox', 0, 0, -1), ('PIL.ImageTk', 0, 0, -1), ('sys', 1, 1, -1), ('dialog.ConfirmedPanicDialog', 0, 0, -1), ('d2xx', 0, 0, -1), ('customtkSimpleDialog', 0, 0, -1), ('dataset', 0, 0, -1), ('PIL.Image', 0, 0, -1), ('tkSimpleDialog', 0, 0, -1), ('sys', 0, 0, -1), ('re', 0, 0, -1), ('dialog.PanicDialog', 0, 0, -1), ('Tkinter', 0, 0, -1), ('time', 0, 0, -1), ('admin', 0, 0, -1), ('Tkinter.*', 0, 0, -1)] binaries=[] datas=[]>
tkMessageBox: None -> <PyModule 'tkMessageBox' C:\Python26\lib\lib-tk\tkMessageBox.pyc imports=[('tkCommonDialog', 0, 0, -1), ('tkCommonDialog.Dialog', 0, 0, -1)] binaries=[] datas=[]>
guipart: None -> <PyModule 'guipart' C:\code\ftdi-python\panic-alarm\carpark\guipart.pyc imports=[('tkMessageBox', 0, 0, -1), ('os', 0, 0, -1), ('schedule', 0, 0, -1), ('sqlite3', 0, 0, -1), ('dialog.healthSignalFailDialog', 0, 0, -1), ('dialog.LoginDialog', 0, 0, -1), ('random', 0, 0, -1), ('pygame', 0, 0, -1), ('os.listdir', 0, 0, -1), ('threading', 0, 0, -1), ('os.getcwd', 0, 0, -1), ('Queue', 0, 0, -1), ('dialog.HealthSignalDialog', 0, 0, -1), ('multiListBox', 0, 0, -1), ('PIL', 0, 0, -1), ('point.Point', 0, 0, -1), ('tkFileDialog', 0, 0, -1), ('dialog', 0, 0, -1), ('winsound', 0, 0, -1), ('guardMultiListBox', 0, 0, -1), ('PIL.ImageTk', 0, 0, -1), ('pygame.mixer', 0, 0, -1), ('os.path', 0, 0, -1), ('dialog.ConfirmedPanicDialog', 0, 0, -1), ('d2xx', 0, 0, -1), ('point', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('customtkSimpleDialog', 0, 0, -1), ('dataset', 0, 0, -1), ('PIL.Image', 0, 0, -1), ('tkSimpleDialog', 0, 0, -1), ('sys', 0, 0, -1), ('re', 0, 0, -1), ('dialog.PanicDialog', 0, 0, -1), ('Tkinter', 0, 0, -1), ('time', 0, 0, -1), ('point.ResizingCanvas', 0, 0, -1), ('admin', 0, 0, -1), ('math', 1, 0, -1), ('Tkinter.*', 0, 0, -1)] binaries=[] datas=[]>
dialog: None -> <PyModule 'dialog' C:\code\ftdi-python\panic-alarm\carpark\dialog.pyc imports=[('tkMessageBox', 0, 0, -1), ('os', 0, 0, -1), ('random', 0, 0, -1), ('threading', 0, 0, -1), ('Queue', 0, 0, -1), ('multiListBox', 0, 0, -1), ('PIL', 0, 0, -1), ('tkFileDialog', 0, 0, -1), ('winsound', 0, 0, -1), ('guardMultiListBox', 0, 0, -1), ('PIL.ImageTk', 0, 0, -1), ('d2xx', 0, 0, -1), ('customtkSimpleDialog', 0, 0, -1), ('dataset', 0, 0, -1), ('PIL.Image', 0, 0, -1), ('tkSimpleDialog', 0, 0, -1), ('sys', 0, 0, -1), ('re', 0, 0, -1), ('Tkinter', 0, 0, -1), ('time', 0, 0, -1), ('admin', 0, 0, -1), ('Tkinter.*', 0, 0, -1)] binaries=[] datas=[]>
Queue: None -> <PyModule 'Queue' C:\Python26\lib\Queue.pyc imports=[('collections', 0, 0, -1), ('collections.deque', 0, 0, -1), ('dummy_threading', 1, 1, -1), ('time.time', 0, 0, -1), ('threading', 1, 0, -1), ('heapq', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
multiListBox: None -> <PyModule 'multiListBox' C:\code\ftdi-python\panic-alarm\carpark\multiListBox.pyc imports=[('copy', 1, 1, -1), ('Tkinter', 0, 0, -1), ('Tkinter.*', 0, 0, -1)] binaries=[] datas=[]>
PIL: None -> <PkgModule 'PIL' C:\Python26\lib\site-packages\PIL\__init__.pyc imports=[] binaries=[] datas=[]>
tkFileDialog: None -> <PyModule 'tkFileDialog' C:\Python26\lib\lib-tk\tkFileDialog.pyc imports=[('sys', 0, 1, -1), ('locale', 0, 1, -1), ('tkCommonDialog', 0, 0, -1), ('tkCommonDialog.Dialog', 0, 0, -1), ('os', 1, 1, -1)] binaries=[] datas=[]>
winsound: None -> <ExtensionModule 'winsound' C:\Python26\DLLs\winsound.pyd imports=[] binaries=[] datas=[]>
guardMultiListBox: None -> <PyModule 'guardMultiListBox' C:\code\ftdi-python\panic-alarm\carpark\guardMultiListBox.pyc imports=[('copy', 1, 1, -1), ('Tkinter', 0, 0, -1), ('Tkinter.*', 0, 0, -1)] binaries=[] datas=[]>
PIL.ImageTk: None -> <PyModule 'PIL.ImageTk' C:\Python26\lib\site-packages\PIL\ImageTk.pyc imports=[('PIL._imagingtk', 1, 1, -1), ('Tkinter', 0, 1, -1), ('PIL', 1, 1, -1), ('PIL', 0, 0, -1), ('tkinter', 0, 0, -1), ('PIL.Image', 0, 0, -1), ('io.BytesIO', 1, 1, -1), ('io', 1, 1, -1)] binaries=[] datas=[]>
d2xx: None -> <PkgModule 'd2xx' C:\Python26\lib\site-packages\d2xx\__init__.pyc imports=[('_d2xx', 0, 0, -1), ('defines.*', 0, 0, -1), ('_d2xx.*', 0, 0, -1), ('defines', 0, 0, -1)] binaries=[] datas=[]>
customtkSimpleDialog: None -> <PyModule 'customtkSimpleDialog' C:\code\ftdi-python\panic-alarm\carpark\customtkSimpleDialog.pyc imports=[('os', 0, 0, -1), ('Tkinter', 0, 0, -1), ('Tkinter.*', 0, 0, -1)] binaries=[] datas=[]>
dataset: None -> <PkgModule 'dataset' C:\Python26\lib\site-packages\dataset\__init__.pyc imports=[('dataset.persistence.table', 0, 0, -1), ('os', 0, 0, -1), ('warnings', 0, 0, -1), ('dataset.persistence.database.Database', 0, 0, -1), ('dataset.persistence.util.row_type', 0, 0, -1), ('dataset.persistence.util', 0, 0, -1), ('dataset.persistence.table.Table', 0, 0, -1), ('dataset.persistence.database', 0, 0, -1), ('dataset.freeze.app.freeze', 0, 0, -1), ('dataset.freeze.app', 0, 0, -1)] binaries=[] datas=[]>
PIL.Image: None -> <PyModule 'PIL.Image' C:\Python26\lib\site-packages\PIL\Image.pyc imports=[('PIL._binary.i8', 0, 0, -1), ('PIL', 1, 0, -1), ('os', 0, 0, -1), ('warnings', 0, 0, -1), ('struct', 0, 0, -1), ('__future__', 0, 0, -1), ('cffi', 0, 0, -1), ('PIL._util.isStringType', 0, 0, -1), ('PIL.ImagePalette', 1, 0, -1), ('PIL._imaging', 0, 0, -1), ('PIL.ImageShow', 1, 0, -1), ('sys', 0, 0, -1), ('PIL.ImageColor', 1, 1, -1), ('PIL', 0, 0, -1), ('__builtin__', 0, 1, -1), ('PIL._util.isPath', 0, 0, -1), ('PIL.PILLOW_VERSION', 0, 0, -1), ('builtins', 0, 0, -1), ('PIL.ImageMode', 0, 0, -1), ('PIL.GifImagePlugin', 1, 0, -1), ('collections', 0, 0, -1), ('__future__.print_function', 0, 0, -1), ('math', 1, 1, -1), ('PIL.PngImagePlugin', 1, 0, -1), ('PIL._plugins', 0, 0, -1), ('PIL.PpmImagePlugin', 1, 0, -1), ('PIL', 1, 1, -1), ('io', 1, 0, -1), ('PIL.VERSION', 0, 0, -1), ('PIL._util', 0, 0, -1), ('tempfile', 1, 0, -1), ('io.BytesIO', 1, 0, -1), ('PIL.BmpImagePlugin', 1, 0, -1), ('PIL._util.deferred_error', 0, 0, -1), ('PIL.PyAccess', 1, 1, -1), ('PIL._binary', 0, 0, -1), ('PIL.ImageQt', 1, 0, -1), ('PIL.ImagePalette', 1, 1, -1), ('PIL.ImageChops', 1, 0, -1), ('PIL.JpegImagePlugin', 1, 0, -1), ('numbers', 0, 0, -1), ('io', 0, 0, -1)] binaries=[] datas=[]>
tkSimpleDialog: None -> <PyModule 'tkSimpleDialog' C:\Python26\lib\lib-tk\tkSimpleDialog.pyc imports=[('Tkinter', 0, 0, -1), ('Tkinter', 1, 1, -1), ('tkMessageBox', 1, 0, -1), ('Tkinter.*', 0, 0, -1)] binaries=[] datas=[]>
Tkinter: None -> <PyModule 'Tkinter' C:\Python26\lib\lib-tk\Tkinter.pyc imports=[('Tkconstants.*', 0, 0, -1), ('types.*', 0, 0, -1), ('sys', 1, 1, -1), ('types', 0, 0, -1), ('os', 1, 1, -1), ('_tkinter', 0, 0, -1), ('Tkconstants', 0, 0, -1), ('sys', 1, 0, -1), ('traceback', 1, 0, -1), ('os', 1, 0, -1), ('FixTk', 0, 1, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
admin: None -> <PyModule 'admin' C:\code\ftdi-python\panic-alarm\carpark\admin.pyc imports=[('tkMessageBox', 0, 0, -1), ('re', 0, 0, -1), ('sys', 0, 0, -1), ('shutil', 0, 0, -1), ('os', 0, 0, -1), ('sqlite3', 0, 0, -1), ('multiListBox', 0, 0, -1), ('Tkinter', 0, 0, -1), ('datetime.date', 0, 0, -1), ('dataset', 0, 0, -1), ('datetime', 0, 0, -1), ('tkFileDialog', 0, 0, -1), ('time', 0, 0, -1), ('Tkinter.*', 0, 0, -1)] binaries=[] datas=[]>
tkCommonDialog: None -> <PyModule 'tkCommonDialog' C:\Python26\lib\lib-tk\tkCommonDialog.pyc imports=[('Tkinter', 0, 0, -1), ('Tkinter.*', 0, 0, -1)] binaries=[] datas=[]>
Tkconstants: None -> <PyModule 'Tkconstants' C:\Python26\lib\lib-tk\Tkconstants.pyc imports=[] binaries=[] datas=[]>
_tkinter: None -> <ExtensionModule '_tkinter' C:\Python26\DLLs\_tkinter.pyd imports=[] binaries=[] datas=[('_MEI\\tcl\\auto.tcl', 'C:\\Python26\\tcl\\tcl8.5\\auto.tcl', 'DATA'), ('_MEI\\tcl\\clock.tcl', 'C:\\Python26\\tcl\\tcl8.5\\clock.tcl', 'DATA'), ('_MEI\\tcl\\history.tcl', 'C:\\Python26\\tcl\\tcl8.5\\history.tcl', 'DATA'), ('_MEI\\tcl\\init.tcl', 'C:\\Python26\\tcl\\tcl8.5\\init.tcl', 'DATA'), ('_MEI\\tcl\\package.tcl', 'C:\\Python26\\tcl\\tcl8.5\\package.tcl', 'DATA'), ('_MEI\\tcl\\parray.tcl', 'C:\\Python26\\tcl\\tcl8.5\\parray.tcl', 'DATA'), ('_MEI\\tcl\\safe.tcl', 'C:\\Python26\\tcl\\tcl8.5\\safe.tcl', 'DATA'), ('_MEI\\tcl\\tclIndex', 'C:\\Python26\\tcl\\tcl8.5\\tclIndex', 'DATA'), ('_MEI\\tcl\\tm.tcl', 'C:\\Python26\\tcl\\tcl8.5\\tm.tcl', 'DATA'), ('_MEI\\tcl\\word.tcl', 'C:\\Python26\\tcl\\tcl8.5\\word.tcl', 'DATA'), ('_MEI\\tcl\\tzdata\\CET', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\CET', 'DATA'), ('_MEI\\tcl\\tzdata\\CST6CDT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\CST6CDT', 'DATA'), ('_MEI\\tcl\\tzdata\\Cuba', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Cuba', 'DATA'), ('_MEI\\tcl\\tzdata\\EET', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\EET', 'DATA'), ('_MEI\\tcl\\tzdata\\Egypt', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Egypt', 'DATA'), ('_MEI\\tcl\\tzdata\\Eire', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Eire', 'DATA'), ('_MEI\\tcl\\tzdata\\EST', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\EST', 'DATA'), ('_MEI\\tcl\\tzdata\\EST5EDT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\EST5EDT', 'DATA'), ('_MEI\\tcl\\tzdata\\GB', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\GB', 'DATA'), ('_MEI\\tcl\\tzdata\\GB-Eire', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\GB-Eire', 'DATA'), ('_MEI\\tcl\\tzdata\\GMT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\GMT', 'DATA'), ('_MEI\\tcl\\tzdata\\GMT+0', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\GMT+0', 'DATA'), ('_MEI\\tcl\\tzdata\\GMT-0', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\GMT-0', 'DATA'), ('_MEI\\tcl\\tzdata\\GMT0', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\GMT0', 'DATA'), ('_MEI\\tcl\\tzdata\\Greenwich', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Greenwich', 'DATA'), ('_MEI\\tcl\\tzdata\\Hongkong', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Hongkong', 'DATA'), ('_MEI\\tcl\\tzdata\\HST', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\HST', 'DATA'), ('_MEI\\tcl\\tzdata\\Iceland', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Iceland', 'DATA'), ('_MEI\\tcl\\tzdata\\Iran', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Iran', 'DATA'), ('_MEI\\tcl\\tzdata\\Israel', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Israel', 'DATA'), ('_MEI\\tcl\\tzdata\\Jamaica', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Jamaica', 'DATA'), ('_MEI\\tcl\\tzdata\\Japan', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Japan', 'DATA'), ('_MEI\\tcl\\tzdata\\Kwajalein', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Kwajalein', 'DATA'), ('_MEI\\tcl\\tzdata\\Libya', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Libya', 'DATA'), ('_MEI\\tcl\\tzdata\\MET', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\MET', 'DATA'), ('_MEI\\tcl\\tzdata\\MST', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\MST', 'DATA'), ('_MEI\\tcl\\tzdata\\MST7MDT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\MST7MDT', 'DATA'), ('_MEI\\tcl\\tzdata\\Navajo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Navajo', 'DATA'), ('_MEI\\tcl\\tzdata\\NZ', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\NZ', 'DATA'), ('_MEI\\tcl\\tzdata\\NZ-CHAT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\NZ-CHAT', 'DATA'), ('_MEI\\tcl\\tzdata\\Poland', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Poland', 'DATA'), ('_MEI\\tcl\\tzdata\\Portugal', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Portugal', 'DATA'), ('_MEI\\tcl\\tzdata\\PRC', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\PRC', 'DATA'), ('_MEI\\tcl\\tzdata\\PST8PDT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\PST8PDT', 'DATA'), ('_MEI\\tcl\\tzdata\\ROC', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\ROC', 'DATA'), ('_MEI\\tcl\\tzdata\\ROK', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\ROK', 'DATA'), ('_MEI\\tcl\\tzdata\\Singapore', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Singapore', 'DATA'), ('_MEI\\tcl\\tzdata\\Turkey', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Turkey', 'DATA'), ('_MEI\\tcl\\tzdata\\UCT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\UCT', 'DATA'), ('_MEI\\tcl\\tzdata\\Universal', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Universal', 'DATA'), ('_MEI\\tcl\\tzdata\\UTC', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\UTC', 'DATA'), ('_MEI\\tcl\\tzdata\\W-SU', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\W-SU', 'DATA'), ('_MEI\\tcl\\tzdata\\WET', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\WET', 'DATA'), ('_MEI\\tcl\\tzdata\\Zulu', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Zulu', 'DATA'), ('_MEI\\tcl\\tzdata\\US\\Alaska', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\US\\Alaska', 'DATA'), ('_MEI\\tcl\\tzdata\\US\\Aleutian', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\US\\Aleutian', 'DATA'), ('_MEI\\tcl\\tzdata\\US\\Arizona', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\US\\Arizona', 'DATA'), ('_MEI\\tcl\\tzdata\\US\\Central', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\US\\Central', 'DATA'), ('_MEI\\tcl\\tzdata\\US\\East-Indiana', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\US\\East-Indiana', 'DATA'), ('_MEI\\tcl\\tzdata\\US\\Eastern', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\US\\Eastern', 'DATA'), ('_MEI\\tcl\\tzdata\\US\\Hawaii', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\US\\Hawaii', 'DATA'), ('_MEI\\tcl\\tzdata\\US\\Indiana-Starke', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\US\\Indiana-Starke', 'DATA'), ('_MEI\\tcl\\tzdata\\US\\Michigan', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\US\\Michigan', 'DATA'), ('_MEI\\tcl\\tzdata\\US\\Mountain', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\US\\Mountain', 'DATA'), ('_MEI\\tcl\\tzdata\\US\\Pacific', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\US\\Pacific', 'DATA'), ('_MEI\\tcl\\tzdata\\US\\Pacific-New', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\US\\Pacific-New', 'DATA'), ('_MEI\\tcl\\tzdata\\US\\Samoa', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\US\\Samoa', 'DATA'), ('_MEI\\tcl\\tzdata\\SystemV\\AST4', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\SystemV\\AST4', 'DATA'), ('_MEI\\tcl\\tzdata\\SystemV\\AST4ADT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\SystemV\\AST4ADT', 'DATA'), ('_MEI\\tcl\\tzdata\\SystemV\\CST6', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\SystemV\\CST6', 'DATA'), ('_MEI\\tcl\\tzdata\\SystemV\\CST6CDT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\SystemV\\CST6CDT', 'DATA'), ('_MEI\\tcl\\tzdata\\SystemV\\EST5', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\SystemV\\EST5', 'DATA'), ('_MEI\\tcl\\tzdata\\SystemV\\EST5EDT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\SystemV\\EST5EDT', 'DATA'), ('_MEI\\tcl\\tzdata\\SystemV\\HST10', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\SystemV\\HST10', 'DATA'), ('_MEI\\tcl\\tzdata\\SystemV\\MST7', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\SystemV\\MST7', 'DATA'), ('_MEI\\tcl\\tzdata\\SystemV\\MST7MDT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\SystemV\\MST7MDT', 'DATA'), ('_MEI\\tcl\\tzdata\\SystemV\\PST8', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\SystemV\\PST8', 'DATA'), ('_MEI\\tcl\\tzdata\\SystemV\\PST8PDT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\SystemV\\PST8PDT', 'DATA'), ('_MEI\\tcl\\tzdata\\SystemV\\YST9', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\SystemV\\YST9', 'DATA'), ('_MEI\\tcl\\tzdata\\SystemV\\YST9YDT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\SystemV\\YST9YDT', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Apia', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Apia', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Auckland', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Auckland', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Chatham', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Chatham', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Easter', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Easter', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Efate', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Efate', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Enderbury', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Enderbury', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Fakaofo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Fakaofo', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Fiji', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Fiji', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Funafuti', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Funafuti', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Galapagos', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Galapagos', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Gambier', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Gambier', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Guadalcanal', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Guadalcanal', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Guam', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Guam', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Honolulu', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Honolulu', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Johnston', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Johnston', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Kiritimati', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Kiritimati', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Kosrae', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Kosrae', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Kwajalein', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Kwajalein', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Majuro', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Majuro', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Marquesas', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Marquesas', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Midway', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Midway', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Nauru', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Nauru', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Niue', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Niue', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Norfolk', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Norfolk', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Noumea', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Noumea', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Pago_Pago', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Pago_Pago', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Palau', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Palau', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Pitcairn', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Pitcairn', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Ponape', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Ponape', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Port_Moresby', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Port_Moresby', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Rarotonga', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Rarotonga', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Saipan', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Saipan', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Samoa', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Samoa', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Tahiti', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Tahiti', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Tarawa', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Tarawa', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Tongatapu', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Tongatapu', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Truk', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Truk', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Wake', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Wake', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Wallis', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Wallis', 'DATA'), ('_MEI\\tcl\\tzdata\\Pacific\\Yap', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Pacific\\Yap', 'DATA'), ('_MEI\\tcl\\tzdata\\Mexico\\BajaNorte', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Mexico\\BajaNorte', 'DATA'), ('_MEI\\tcl\\tzdata\\Mexico\\BajaSur', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Mexico\\BajaSur', 'DATA'), ('_MEI\\tcl\\tzdata\\Mexico\\General', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Mexico\\General', 'DATA'), ('_MEI\\tcl\\tzdata\\Indian\\Antananarivo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Indian\\Antananarivo', 'DATA'), ('_MEI\\tcl\\tzdata\\Indian\\Chagos', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Indian\\Chagos', 'DATA'), ('_MEI\\tcl\\tzdata\\Indian\\Christmas', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Indian\\Christmas', 'DATA'), ('_MEI\\tcl\\tzdata\\Indian\\Cocos', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Indian\\Cocos', 'DATA'), ('_MEI\\tcl\\tzdata\\Indian\\Comoro', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Indian\\Comoro', 'DATA'), ('_MEI\\tcl\\tzdata\\Indian\\Kerguelen', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Indian\\Kerguelen', 'DATA'), ('_MEI\\tcl\\tzdata\\Indian\\Mahe', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Indian\\Mahe', 'DATA'), ('_MEI\\tcl\\tzdata\\Indian\\Maldives', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Indian\\Maldives', 'DATA'), ('_MEI\\tcl\\tzdata\\Indian\\Mauritius', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Indian\\Mauritius', 'DATA'), ('_MEI\\tcl\\tzdata\\Indian\\Mayotte', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Indian\\Mayotte', 'DATA'), ('_MEI\\tcl\\tzdata\\Indian\\Reunion', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Indian\\Reunion', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Amsterdam', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Amsterdam', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Andorra', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Andorra', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Athens', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Athens', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Belfast', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Belfast', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Belgrade', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Belgrade', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Berlin', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Berlin', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Bratislava', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Bratislava', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Brussels', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Brussels', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Bucharest', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Bucharest', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Budapest', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Budapest', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Chisinau', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Chisinau', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Copenhagen', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Copenhagen', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Dublin', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Dublin', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Gibraltar', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Gibraltar', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Guernsey', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Guernsey', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Helsinki', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Helsinki', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Isle_of_Man', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Isle_of_Man', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Istanbul', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Istanbul', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Jersey', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Jersey', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Kaliningrad', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Kaliningrad', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Kiev', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Kiev', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Lisbon', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Lisbon', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Ljubljana', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Ljubljana', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\London', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\London', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Luxembourg', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Luxembourg', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Madrid', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Madrid', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Malta', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Malta', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Mariehamn', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Mariehamn', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Minsk', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Minsk', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Monaco', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Monaco', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Moscow', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Moscow', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Nicosia', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Nicosia', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Oslo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Oslo', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Paris', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Paris', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Podgorica', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Podgorica', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Prague', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Prague', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Riga', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Riga', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Rome', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Rome', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Samara', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Samara', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\San_Marino', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\San_Marino', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Sarajevo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Sarajevo', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Simferopol', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Simferopol', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Skopje', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Skopje', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Sofia', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Sofia', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Stockholm', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Stockholm', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Tallinn', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Tallinn', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Tirane', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Tirane', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Tiraspol', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Tiraspol', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Uzhgorod', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Uzhgorod', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Vaduz', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Vaduz', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Vatican', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Vatican', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Vienna', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Vienna', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Vilnius', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Vilnius', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Volgograd', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Volgograd', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Warsaw', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Warsaw', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Zagreb', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Zagreb', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Zaporozhye', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Zaporozhye', 'DATA'), ('_MEI\\tcl\\tzdata\\Europe\\Zurich', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Europe\\Zurich', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT+0', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT+0', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT+1', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT+1', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT+10', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT+10', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT+11', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT+11', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT+12', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT+12', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT+2', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT+2', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT+3', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT+3', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT+4', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT+4', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT+5', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT+5', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT+6', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT+6', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT+7', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT+7', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT+8', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT+8', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT+9', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT+9', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-0', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-0', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-1', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-1', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-10', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-10', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-11', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-11', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-12', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-12', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-13', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-13', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-14', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-14', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-2', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-2', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-3', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-3', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-4', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-4', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-5', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-5', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-6', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-6', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-7', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-7', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-8', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-8', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT-9', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT-9', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\GMT0', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\GMT0', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\Greenwich', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\Greenwich', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\UCT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\UCT', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\Universal', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\Universal', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\UTC', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\UTC', 'DATA'), ('_MEI\\tcl\\tzdata\\Etc\\Zulu', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Etc\\Zulu', 'DATA'), ('_MEI\\tcl\\tzdata\\Chile\\Continental', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Chile\\Continental', 'DATA'), ('_MEI\\tcl\\tzdata\\Chile\\EasterIsland', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Chile\\EasterIsland', 'DATA'), ('_MEI\\tcl\\tzdata\\Canada\\Atlantic', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Canada\\Atlantic', 'DATA'), ('_MEI\\tcl\\tzdata\\Canada\\Central', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Canada\\Central', 'DATA'), ('_MEI\\tcl\\tzdata\\Canada\\East-Saskatchewan', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Canada\\East-Saskatchewan', 'DATA'), ('_MEI\\tcl\\tzdata\\Canada\\Eastern', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Canada\\Eastern', 'DATA'), ('_MEI\\tcl\\tzdata\\Canada\\Mountain', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Canada\\Mountain', 'DATA'), ('_MEI\\tcl\\tzdata\\Canada\\Newfoundland', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Canada\\Newfoundland', 'DATA'), ('_MEI\\tcl\\tzdata\\Canada\\Pacific', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Canada\\Pacific', 'DATA'), ('_MEI\\tcl\\tzdata\\Canada\\Saskatchewan', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Canada\\Saskatchewan', 'DATA'), ('_MEI\\tcl\\tzdata\\Canada\\Yukon', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Canada\\Yukon', 'DATA'), ('_MEI\\tcl\\tzdata\\Brazil\\Acre', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Brazil\\Acre', 'DATA'), ('_MEI\\tcl\\tzdata\\Brazil\\DeNoronha', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Brazil\\DeNoronha', 'DATA'), ('_MEI\\tcl\\tzdata\\Brazil\\East', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Brazil\\East', 'DATA'), ('_MEI\\tcl\\tzdata\\Brazil\\West', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Brazil\\West', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\ACT', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\ACT', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Adelaide', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Adelaide', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Brisbane', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Brisbane', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Broken_Hill', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Broken_Hill', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Canberra', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Canberra', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Currie', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Currie', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Darwin', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Darwin', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Eucla', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Eucla', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Hobart', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Hobart', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\LHI', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\LHI', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Lindeman', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Lindeman', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Lord_Howe', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Lord_Howe', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Melbourne', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Melbourne', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\North', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\North', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\NSW', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\NSW', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Perth', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Perth', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Queensland', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Queensland', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\South', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\South', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Sydney', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Sydney', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Tasmania', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Tasmania', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Victoria', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Victoria', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\West', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\West', 'DATA'), ('_MEI\\tcl\\tzdata\\Australia\\Yancowinna', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Australia\\Yancowinna', 'DATA'), ('_MEI\\tcl\\tzdata\\Atlantic\\Azores', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Atlantic\\Azores', 'DATA'), ('_MEI\\tcl\\tzdata\\Atlantic\\Bermuda', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Atlantic\\Bermuda', 'DATA'), ('_MEI\\tcl\\tzdata\\Atlantic\\Canary', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Atlantic\\Canary', 'DATA'), ('_MEI\\tcl\\tzdata\\Atlantic\\Cape_Verde', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Atlantic\\Cape_Verde', 'DATA'), ('_MEI\\tcl\\tzdata\\Atlantic\\Faeroe', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Atlantic\\Faeroe', 'DATA'), ('_MEI\\tcl\\tzdata\\Atlantic\\Faroe', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Atlantic\\Faroe', 'DATA'), ('_MEI\\tcl\\tzdata\\Atlantic\\Jan_Mayen', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Atlantic\\Jan_Mayen', 'DATA'), ('_MEI\\tcl\\tzdata\\Atlantic\\Madeira', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Atlantic\\Madeira', 'DATA'), ('_MEI\\tcl\\tzdata\\Atlantic\\Reykjavik', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Atlantic\\Reykjavik', 'DATA'), ('_MEI\\tcl\\tzdata\\Atlantic\\South_Georgia', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Atlantic\\South_Georgia', 'DATA'), ('_MEI\\tcl\\tzdata\\Atlantic\\Stanley', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Atlantic\\Stanley', 'DATA'), ('_MEI\\tcl\\tzdata\\Atlantic\\St_Helena', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Atlantic\\St_Helena', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Aden', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Aden', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Almaty', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Almaty', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Amman', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Amman', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Anadyr', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Anadyr', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Aqtau', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Aqtau', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Aqtobe', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Aqtobe', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Ashgabat', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Ashgabat', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Ashkhabad', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Ashkhabad', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Baghdad', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Baghdad', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Bahrain', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Bahrain', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Baku', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Baku', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Bangkok', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Bangkok', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Beirut', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Beirut', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Bishkek', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Bishkek', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Brunei', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Brunei', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Calcutta', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Calcutta', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Choibalsan', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Choibalsan', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Chongqing', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Chongqing', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Chungking', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Chungking', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Colombo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Colombo', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Dacca', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Dacca', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Damascus', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Damascus', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Dhaka', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Dhaka', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Dili', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Dili', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Dubai', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Dubai', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Dushanbe', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Dushanbe', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Gaza', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Gaza', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Harbin', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Harbin', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Hong_Kong', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Hong_Kong', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Hovd', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Hovd', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Ho_Chi_Minh', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Ho_Chi_Minh', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Irkutsk', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Irkutsk', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Istanbul', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Istanbul', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Jakarta', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Jakarta', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Jayapura', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Jayapura', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Jerusalem', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Jerusalem', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Kabul', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Kabul', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Kamchatka', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Kamchatka', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Karachi', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Karachi', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Kashgar', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Kashgar', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Katmandu', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Katmandu', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Kolkata', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Kolkata', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Krasnoyarsk', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Krasnoyarsk', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Kuala_Lumpur', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Kuala_Lumpur', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Kuching', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Kuching', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Kuwait', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Kuwait', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Macao', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Macao', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Macau', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Macau', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Magadan', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Magadan', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Makassar', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Makassar', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Manila', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Manila', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Muscat', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Muscat', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Nicosia', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Nicosia', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Novosibirsk', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Novosibirsk', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Omsk', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Omsk', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Oral', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Oral', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Phnom_Penh', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Phnom_Penh', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Pontianak', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Pontianak', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Pyongyang', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Pyongyang', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Qatar', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Qatar', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Qyzylorda', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Qyzylorda', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Rangoon', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Rangoon', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Riyadh', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Riyadh', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Saigon', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Saigon', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Sakhalin', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Sakhalin', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Samarkand', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Samarkand', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Seoul', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Seoul', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Shanghai', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Shanghai', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Singapore', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Singapore', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Taipei', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Taipei', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Tashkent', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Tashkent', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Tbilisi', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Tbilisi', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Tehran', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Tehran', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Tel_Aviv', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Tel_Aviv', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Thimbu', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Thimbu', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Thimphu', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Thimphu', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Tokyo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Tokyo', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Ujung_Pandang', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Ujung_Pandang', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Ulaanbaatar', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Ulaanbaatar', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Ulan_Bator', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Ulan_Bator', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Urumqi', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Urumqi', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Vientiane', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Vientiane', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Vladivostok', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Vladivostok', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Yakutsk', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Yakutsk', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Yekaterinburg', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Yekaterinburg', 'DATA'), ('_MEI\\tcl\\tzdata\\Asia\\Yerevan', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Asia\\Yerevan', 'DATA'), ('_MEI\\tcl\\tzdata\\Arctic\\Longyearbyen', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Arctic\\Longyearbyen', 'DATA'), ('_MEI\\tcl\\tzdata\\Antarctica\\Casey', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Antarctica\\Casey', 'DATA'), ('_MEI\\tcl\\tzdata\\Antarctica\\Davis', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Antarctica\\Davis', 'DATA'), ('_MEI\\tcl\\tzdata\\Antarctica\\DumontDUrville', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Antarctica\\DumontDUrville', 'DATA'), ('_MEI\\tcl\\tzdata\\Antarctica\\Mawson', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Antarctica\\Mawson', 'DATA'), ('_MEI\\tcl\\tzdata\\Antarctica\\McMurdo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Antarctica\\McMurdo', 'DATA'), ('_MEI\\tcl\\tzdata\\Antarctica\\Palmer', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Antarctica\\Palmer', 'DATA'), ('_MEI\\tcl\\tzdata\\Antarctica\\Rothera', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Antarctica\\Rothera', 'DATA'), ('_MEI\\tcl\\tzdata\\Antarctica\\South_Pole', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Antarctica\\South_Pole', 'DATA'), ('_MEI\\tcl\\tzdata\\Antarctica\\Syowa', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Antarctica\\Syowa', 'DATA'), ('_MEI\\tcl\\tzdata\\Antarctica\\Vostok', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Antarctica\\Vostok', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Adak', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Adak', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Anchorage', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Anchorage', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Anguilla', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Anguilla', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Antigua', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Antigua', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Araguaina', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Araguaina', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Aruba', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Aruba', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Asuncion', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Asuncion', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Atikokan', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Atikokan', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Atka', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Atka', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Bahia', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Bahia', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Barbados', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Barbados', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Belem', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Belem', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Belize', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Belize', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Blanc-Sablon', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Blanc-Sablon', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Boa_Vista', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Boa_Vista', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Bogota', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Bogota', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Boise', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Boise', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Buenos_Aires', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Buenos_Aires', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Cambridge_Bay', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Cambridge_Bay', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Campo_Grande', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Campo_Grande', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Cancun', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Cancun', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Caracas', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Caracas', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Catamarca', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Catamarca', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Cayenne', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Cayenne', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Cayman', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Cayman', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Chicago', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Chicago', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Chihuahua', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Chihuahua', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Coral_Harbour', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Coral_Harbour', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Cordoba', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Cordoba', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Costa_Rica', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Costa_Rica', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Cuiaba', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Cuiaba', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Curacao', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Curacao', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Danmarkshavn', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Danmarkshavn', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Dawson', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Dawson', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Dawson_Creek', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Dawson_Creek', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Denver', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Denver', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Detroit', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Detroit', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Dominica', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Dominica', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Edmonton', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Edmonton', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Eirunepe', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Eirunepe', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\El_Salvador', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\El_Salvador', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Ensenada', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Ensenada', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Fortaleza', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Fortaleza', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Fort_Wayne', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Fort_Wayne', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Glace_Bay', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Glace_Bay', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Godthab', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Godthab', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Goose_Bay', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Goose_Bay', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Grand_Turk', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Grand_Turk', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Grenada', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Grenada', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Guadeloupe', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Guadeloupe', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Guatemala', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Guatemala', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Guayaquil', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Guayaquil', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Guyana', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Guyana', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Halifax', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Halifax', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Havana', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Havana', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Hermosillo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Hermosillo', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Indianapolis', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Indianapolis', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Inuvik', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Inuvik', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Iqaluit', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Iqaluit', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Jamaica', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Jamaica', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Jujuy', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Jujuy', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Juneau', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Juneau', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Knox_IN', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Knox_IN', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\La_Paz', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\La_Paz', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Lima', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Lima', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Los_Angeles', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Los_Angeles', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Louisville', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Louisville', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Maceio', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Maceio', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Managua', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Managua', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Manaus', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Manaus', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Marigot', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Marigot', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Martinique', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Martinique', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Mazatlan', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Mazatlan', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Mendoza', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Mendoza', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Menominee', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Menominee', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Merida', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Merida', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Mexico_City', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Mexico_City', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Miquelon', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Miquelon', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Moncton', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Moncton', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Monterrey', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Monterrey', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Montevideo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Montevideo', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Montreal', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Montreal', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Montserrat', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Montserrat', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Nassau', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Nassau', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\New_York', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\New_York', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Nipigon', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Nipigon', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Nome', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Nome', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Noronha', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Noronha', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Panama', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Panama', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Pangnirtung', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Pangnirtung', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Paramaribo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Paramaribo', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Phoenix', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Phoenix', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Port-au-Prince', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Port-au-Prince', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Porto_Acre', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Porto_Acre', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Porto_Velho', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Porto_Velho', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Port_of_Spain', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Port_of_Spain', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Puerto_Rico', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Puerto_Rico', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Rainy_River', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Rainy_River', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Rankin_Inlet', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Rankin_Inlet', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Recife', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Recife', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Regina', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Regina', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Resolute', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Resolute', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Rio_Branco', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Rio_Branco', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Rosario', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Rosario', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Santiago', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Santiago', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Santo_Domingo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Santo_Domingo', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Sao_Paulo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Sao_Paulo', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Scoresbysund', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Scoresbysund', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Shiprock', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Shiprock', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\St_Barthelemy', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\St_Barthelemy', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\St_Johns', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\St_Johns', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\St_Kitts', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\St_Kitts', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\St_Lucia', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\St_Lucia', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\St_Thomas', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\St_Thomas', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\St_Vincent', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\St_Vincent', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Swift_Current', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Swift_Current', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Tegucigalpa', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Tegucigalpa', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Thule', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Thule', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Thunder_Bay', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Thunder_Bay', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Tijuana', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Tijuana', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Toronto', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Toronto', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Tortola', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Tortola', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Vancouver', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Vancouver', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Virgin', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Virgin', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Whitehorse', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Whitehorse', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Winnipeg', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Winnipeg', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Yakutat', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Yakutat', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Yellowknife', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Yellowknife', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\North_Dakota\\Center', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\North_Dakota\\Center', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\North_Dakota\\New_Salem', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\North_Dakota\\New_Salem', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Kentucky\\Louisville', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Kentucky\\Louisville', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Kentucky\\Monticello', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Kentucky\\Monticello', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Indiana\\Indianapolis', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Indiana\\Indianapolis', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Indiana\\Knox', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Indiana\\Knox', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Indiana\\Marengo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Indiana\\Marengo', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Indiana\\Petersburg', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Indiana\\Petersburg', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Indiana\\Tell_City', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Indiana\\Tell_City', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Indiana\\Vevay', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Indiana\\Vevay', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Indiana\\Vincennes', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Indiana\\Vincennes', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Indiana\\Winamac', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Indiana\\Winamac', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Argentina\\Buenos_Aires', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Argentina\\Buenos_Aires', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Argentina\\Catamarca', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Argentina\\Catamarca', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Argentina\\ComodRivadavia', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Argentina\\ComodRivadavia', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Argentina\\Cordoba', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Argentina\\Cordoba', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Argentina\\Jujuy', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Argentina\\Jujuy', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Argentina\\La_Rioja', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Argentina\\La_Rioja', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Argentina\\Mendoza', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Argentina\\Mendoza', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Argentina\\Rio_Gallegos', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Argentina\\Rio_Gallegos', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Argentina\\San_Juan', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Argentina\\San_Juan', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Argentina\\San_Luis', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Argentina\\San_Luis', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Argentina\\Tucuman', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Argentina\\Tucuman', 'DATA'), ('_MEI\\tcl\\tzdata\\America\\Argentina\\Ushuaia', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\America\\Argentina\\Ushuaia', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Abidjan', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Abidjan', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Accra', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Accra', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Addis_Ababa', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Addis_Ababa', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Algiers', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Algiers', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Asmara', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Asmara', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Asmera', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Asmera', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Bamako', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Bamako', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Bangui', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Bangui', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Banjul', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Banjul', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Bissau', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Bissau', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Blantyre', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Blantyre', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Brazzaville', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Brazzaville', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Bujumbura', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Bujumbura', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Cairo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Cairo', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Casablanca', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Casablanca', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Ceuta', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Ceuta', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Conakry', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Conakry', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Dakar', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Dakar', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Dar_es_Salaam', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Dar_es_Salaam', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Djibouti', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Djibouti', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Douala', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Douala', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\El_Aaiun', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\El_Aaiun', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Freetown', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Freetown', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Gaborone', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Gaborone', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Harare', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Harare', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Johannesburg', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Johannesburg', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Kampala', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Kampala', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Khartoum', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Khartoum', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Kigali', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Kigali', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Kinshasa', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Kinshasa', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Lagos', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Lagos', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Libreville', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Libreville', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Lome', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Lome', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Luanda', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Luanda', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Lubumbashi', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Lubumbashi', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Lusaka', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Lusaka', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Malabo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Malabo', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Maputo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Maputo', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Maseru', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Maseru', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Mbabane', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Mbabane', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Mogadishu', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Mogadishu', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Monrovia', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Monrovia', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Nairobi', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Nairobi', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Ndjamena', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Ndjamena', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Niamey', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Niamey', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Nouakchott', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Nouakchott', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Ouagadougou', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Ouagadougou', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Porto-Novo', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Porto-Novo', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Sao_Tome', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Sao_Tome', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Timbuktu', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Timbuktu', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Tripoli', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Tripoli', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Tunis', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Tunis', 'DATA'), ('_MEI\\tcl\\tzdata\\Africa\\Windhoek', 'C:\\Python26\\tcl\\tcl8.5\\tzdata\\Africa\\Windhoek', 'DATA'), ('_MEI\\tcl\\opt0.4\\optparse.tcl', 'C:\\Python26\\tcl\\tcl8.5\\opt0.4\\optparse.tcl', 'DATA'), ('_MEI\\tcl\\opt0.4\\pkgIndex.tcl', 'C:\\Python26\\tcl\\tcl8.5\\opt0.4\\pkgIndex.tcl', 'DATA'), ('_MEI\\tcl\\msgs\\af.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\af.msg', 'DATA'), ('_MEI\\tcl\\msgs\\af_za.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\af_za.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ar.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ar.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ar_in.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ar_in.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ar_jo.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ar_jo.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ar_lb.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ar_lb.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ar_sy.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ar_sy.msg', 'DATA'), ('_MEI\\tcl\\msgs\\be.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\be.msg', 'DATA'), ('_MEI\\tcl\\msgs\\bg.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\bg.msg', 'DATA'), ('_MEI\\tcl\\msgs\\bn.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\bn.msg', 'DATA'), ('_MEI\\tcl\\msgs\\bn_in.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\bn_in.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ca.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ca.msg', 'DATA'), ('_MEI\\tcl\\msgs\\cs.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\cs.msg', 'DATA'), ('_MEI\\tcl\\msgs\\da.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\da.msg', 'DATA'), ('_MEI\\tcl\\msgs\\de.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\de.msg', 'DATA'), ('_MEI\\tcl\\msgs\\de_at.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\de_at.msg', 'DATA'), ('_MEI\\tcl\\msgs\\de_be.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\de_be.msg', 'DATA'), ('_MEI\\tcl\\msgs\\el.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\el.msg', 'DATA'), ('_MEI\\tcl\\msgs\\en_au.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\en_au.msg', 'DATA'), ('_MEI\\tcl\\msgs\\en_be.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\en_be.msg', 'DATA'), ('_MEI\\tcl\\msgs\\en_bw.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\en_bw.msg', 'DATA'), ('_MEI\\tcl\\msgs\\en_ca.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\en_ca.msg', 'DATA'), ('_MEI\\tcl\\msgs\\en_gb.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\en_gb.msg', 'DATA'), ('_MEI\\tcl\\msgs\\en_hk.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\en_hk.msg', 'DATA'), ('_MEI\\tcl\\msgs\\en_ie.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\en_ie.msg', 'DATA'), ('_MEI\\tcl\\msgs\\en_in.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\en_in.msg', 'DATA'), ('_MEI\\tcl\\msgs\\en_nz.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\en_nz.msg', 'DATA'), ('_MEI\\tcl\\msgs\\en_ph.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\en_ph.msg', 'DATA'), ('_MEI\\tcl\\msgs\\en_sg.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\en_sg.msg', 'DATA'), ('_MEI\\tcl\\msgs\\en_za.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\en_za.msg', 'DATA'), ('_MEI\\tcl\\msgs\\en_zw.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\en_zw.msg', 'DATA'), ('_MEI\\tcl\\msgs\\eo.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\eo.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_ar.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_ar.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_bo.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_bo.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_cl.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_cl.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_co.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_co.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_cr.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_cr.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_do.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_do.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_ec.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_ec.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_gt.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_gt.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_hn.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_hn.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_mx.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_mx.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_ni.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_ni.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_pa.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_pa.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_pe.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_pe.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_pr.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_pr.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_py.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_py.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_sv.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_sv.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_uy.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_uy.msg', 'DATA'), ('_MEI\\tcl\\msgs\\es_ve.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\es_ve.msg', 'DATA'), ('_MEI\\tcl\\msgs\\et.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\et.msg', 'DATA'), ('_MEI\\tcl\\msgs\\eu.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\eu.msg', 'DATA'), ('_MEI\\tcl\\msgs\\eu_es.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\eu_es.msg', 'DATA'), ('_MEI\\tcl\\msgs\\fa.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\fa.msg', 'DATA'), ('_MEI\\tcl\\msgs\\fa_in.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\fa_in.msg', 'DATA'), ('_MEI\\tcl\\msgs\\fa_ir.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\fa_ir.msg', 'DATA'), ('_MEI\\tcl\\msgs\\fi.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\fi.msg', 'DATA'), ('_MEI\\tcl\\msgs\\fo.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\fo.msg', 'DATA'), ('_MEI\\tcl\\msgs\\fo_fo.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\fo_fo.msg', 'DATA'), ('_MEI\\tcl\\msgs\\fr.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\fr.msg', 'DATA'), ('_MEI\\tcl\\msgs\\fr_be.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\fr_be.msg', 'DATA'), ('_MEI\\tcl\\msgs\\fr_ca.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\fr_ca.msg', 'DATA'), ('_MEI\\tcl\\msgs\\fr_ch.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\fr_ch.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ga.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ga.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ga_ie.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ga_ie.msg', 'DATA'), ('_MEI\\tcl\\msgs\\gl.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\gl.msg', 'DATA'), ('_MEI\\tcl\\msgs\\gl_es.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\gl_es.msg', 'DATA'), ('_MEI\\tcl\\msgs\\gv.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\gv.msg', 'DATA'), ('_MEI\\tcl\\msgs\\gv_gb.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\gv_gb.msg', 'DATA'), ('_MEI\\tcl\\msgs\\he.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\he.msg', 'DATA'), ('_MEI\\tcl\\msgs\\hi.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\hi.msg', 'DATA'), ('_MEI\\tcl\\msgs\\hi_in.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\hi_in.msg', 'DATA'), ('_MEI\\tcl\\msgs\\hr.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\hr.msg', 'DATA'), ('_MEI\\tcl\\msgs\\hu.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\hu.msg', 'DATA'), ('_MEI\\tcl\\msgs\\id.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\id.msg', 'DATA'), ('_MEI\\tcl\\msgs\\id_id.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\id_id.msg', 'DATA'), ('_MEI\\tcl\\msgs\\is.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\is.msg', 'DATA'), ('_MEI\\tcl\\msgs\\it.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\it.msg', 'DATA'), ('_MEI\\tcl\\msgs\\it_ch.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\it_ch.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ja.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ja.msg', 'DATA'), ('_MEI\\tcl\\msgs\\kl.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\kl.msg', 'DATA'), ('_MEI\\tcl\\msgs\\kl_gl.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\kl_gl.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ko.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ko.msg', 'DATA'), ('_MEI\\tcl\\msgs\\kok.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\kok.msg', 'DATA'), ('_MEI\\tcl\\msgs\\kok_in.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\kok_in.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ko_kr.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ko_kr.msg', 'DATA'), ('_MEI\\tcl\\msgs\\kw.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\kw.msg', 'DATA'), ('_MEI\\tcl\\msgs\\kw_gb.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\kw_gb.msg', 'DATA'), ('_MEI\\tcl\\msgs\\lt.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\lt.msg', 'DATA'), ('_MEI\\tcl\\msgs\\lv.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\lv.msg', 'DATA'), ('_MEI\\tcl\\msgs\\mk.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\mk.msg', 'DATA'), ('_MEI\\tcl\\msgs\\mr.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\mr.msg', 'DATA'), ('_MEI\\tcl\\msgs\\mr_in.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\mr_in.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ms.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ms.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ms_my.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ms_my.msg', 'DATA'), ('_MEI\\tcl\\msgs\\mt.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\mt.msg', 'DATA'), ('_MEI\\tcl\\msgs\\nb.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\nb.msg', 'DATA'), ('_MEI\\tcl\\msgs\\nl.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\nl.msg', 'DATA'), ('_MEI\\tcl\\msgs\\nl_be.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\nl_be.msg', 'DATA'), ('_MEI\\tcl\\msgs\\nn.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\nn.msg', 'DATA'), ('_MEI\\tcl\\msgs\\pl.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\pl.msg', 'DATA'), ('_MEI\\tcl\\msgs\\pt.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\pt.msg', 'DATA'), ('_MEI\\tcl\\msgs\\pt_br.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\pt_br.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ro.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ro.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ru.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ru.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ru_ua.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ru_ua.msg', 'DATA'), ('_MEI\\tcl\\msgs\\sh.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\sh.msg', 'DATA'), ('_MEI\\tcl\\msgs\\sk.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\sk.msg', 'DATA'), ('_MEI\\tcl\\msgs\\sl.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\sl.msg', 'DATA'), ('_MEI\\tcl\\msgs\\sq.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\sq.msg', 'DATA'), ('_MEI\\tcl\\msgs\\sr.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\sr.msg', 'DATA'), ('_MEI\\tcl\\msgs\\sv.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\sv.msg', 'DATA'), ('_MEI\\tcl\\msgs\\sw.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\sw.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ta.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ta.msg', 'DATA'), ('_MEI\\tcl\\msgs\\ta_in.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\ta_in.msg', 'DATA'), ('_MEI\\tcl\\msgs\\te.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\te.msg', 'DATA'), ('_MEI\\tcl\\msgs\\te_in.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\te_in.msg', 'DATA'), ('_MEI\\tcl\\msgs\\th.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\th.msg', 'DATA'), ('_MEI\\tcl\\msgs\\tr.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\tr.msg', 'DATA'), ('_MEI\\tcl\\msgs\\uk.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\uk.msg', 'DATA'), ('_MEI\\tcl\\msgs\\vi.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\vi.msg', 'DATA'), ('_MEI\\tcl\\msgs\\zh.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\zh.msg', 'DATA'), ('_MEI\\tcl\\msgs\\zh_cn.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\zh_cn.msg', 'DATA'), ('_MEI\\tcl\\msgs\\zh_hk.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\zh_hk.msg', 'DATA'), ('_MEI\\tcl\\msgs\\zh_sg.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\zh_sg.msg', 'DATA'), ('_MEI\\tcl\\msgs\\zh_tw.msg', 'C:\\Python26\\tcl\\tcl8.5\\msgs\\zh_tw.msg', 'DATA'), ('_MEI\\tcl\\http1.0\\http.tcl', 'C:\\Python26\\tcl\\tcl8.5\\http1.0\\http.tcl', 'DATA'), ('_MEI\\tcl\\http1.0\\pkgIndex.tcl', 'C:\\Python26\\tcl\\tcl8.5\\http1.0\\pkgIndex.tcl', 'DATA'), ('_MEI\\tcl\\encoding\\ascii.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\ascii.enc', 'DATA'), ('_MEI\\tcl\\encoding\\big5.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\big5.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp1250.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp1250.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp1251.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp1251.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp1252.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp1252.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp1253.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp1253.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp1254.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp1254.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp1255.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp1255.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp1256.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp1256.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp1257.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp1257.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp1258.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp1258.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp437.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp437.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp737.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp737.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp775.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp775.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp850.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp850.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp852.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp852.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp855.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp855.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp857.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp857.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp860.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp860.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp861.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp861.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp862.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp862.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp863.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp863.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp864.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp864.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp865.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp865.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp866.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp866.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp869.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp869.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp874.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp874.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp932.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp932.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp936.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp936.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp949.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp949.enc', 'DATA'), ('_MEI\\tcl\\encoding\\cp950.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\cp950.enc', 'DATA'), ('_MEI\\tcl\\encoding\\dingbats.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\dingbats.enc', 'DATA'), ('_MEI\\tcl\\encoding\\ebcdic.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\ebcdic.enc', 'DATA'), ('_MEI\\tcl\\encoding\\euc-cn.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\euc-cn.enc', 'DATA'), ('_MEI\\tcl\\encoding\\euc-jp.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\euc-jp.enc', 'DATA'), ('_MEI\\tcl\\encoding\\euc-kr.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\euc-kr.enc', 'DATA'), ('_MEI\\tcl\\encoding\\gb12345.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\gb12345.enc', 'DATA'), ('_MEI\\tcl\\encoding\\gb1988.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\gb1988.enc', 'DATA'), ('_MEI\\tcl\\encoding\\gb2312-raw.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\gb2312-raw.enc', 'DATA'), ('_MEI\\tcl\\encoding\\gb2312.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\gb2312.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso2022-jp.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso2022-jp.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso2022-kr.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso2022-kr.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso2022.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso2022.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso8859-1.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso8859-1.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso8859-10.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso8859-10.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso8859-13.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso8859-13.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso8859-14.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso8859-14.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso8859-15.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso8859-15.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso8859-16.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso8859-16.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso8859-2.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso8859-2.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso8859-3.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso8859-3.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso8859-4.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso8859-4.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso8859-5.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso8859-5.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso8859-6.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso8859-6.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso8859-7.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso8859-7.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso8859-8.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso8859-8.enc', 'DATA'), ('_MEI\\tcl\\encoding\\iso8859-9.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\iso8859-9.enc', 'DATA'), ('_MEI\\tcl\\encoding\\jis0201.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\jis0201.enc', 'DATA'), ('_MEI\\tcl\\encoding\\jis0208.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\jis0208.enc', 'DATA'), ('_MEI\\tcl\\encoding\\jis0212.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\jis0212.enc', 'DATA'), ('_MEI\\tcl\\encoding\\koi8-r.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\koi8-r.enc', 'DATA'), ('_MEI\\tcl\\encoding\\koi8-u.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\koi8-u.enc', 'DATA'), ('_MEI\\tcl\\encoding\\ksc5601.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\ksc5601.enc', 'DATA'), ('_MEI\\tcl\\encoding\\macCentEuro.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\macCentEuro.enc', 'DATA'), ('_MEI\\tcl\\encoding\\macCroatian.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\macCroatian.enc', 'DATA'), ('_MEI\\tcl\\encoding\\macCyrillic.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\macCyrillic.enc', 'DATA'), ('_MEI\\tcl\\encoding\\macDingbats.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\macDingbats.enc', 'DATA'), ('_MEI\\tcl\\encoding\\macGreek.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\macGreek.enc', 'DATA'), ('_MEI\\tcl\\encoding\\macIceland.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\macIceland.enc', 'DATA'), ('_MEI\\tcl\\encoding\\macJapan.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\macJapan.enc', 'DATA'), ('_MEI\\tcl\\encoding\\macRoman.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\macRoman.enc', 'DATA'), ('_MEI\\tcl\\encoding\\macRomania.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\macRomania.enc', 'DATA'), ('_MEI\\tcl\\encoding\\macThai.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\macThai.enc', 'DATA'), ('_MEI\\tcl\\encoding\\macTurkish.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\macTurkish.enc', 'DATA'), ('_MEI\\tcl\\encoding\\macUkraine.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\macUkraine.enc', 'DATA'), ('_MEI\\tcl\\encoding\\shiftjis.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\shiftjis.enc', 'DATA'), ('_MEI\\tcl\\encoding\\symbol.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\symbol.enc', 'DATA'), ('_MEI\\tcl\\encoding\\tis-620.enc', 'C:\\Python26\\tcl\\tcl8.5\\encoding\\tis-620.enc', 'DATA'), ('_MEI\\tk\\bgerror.tcl', 'C:\\Python26\\tcl\\tk8.5\\bgerror.tcl', 'DATA'), ('_MEI\\tk\\button.tcl', 'C:\\Python26\\tcl\\tk8.5\\button.tcl', 'DATA'), ('_MEI\\tk\\choosedir.tcl', 'C:\\Python26\\tcl\\tk8.5\\choosedir.tcl', 'DATA'), ('_MEI\\tk\\clrpick.tcl', 'C:\\Python26\\tcl\\tk8.5\\clrpick.tcl', 'DATA'), ('_MEI\\tk\\comdlg.tcl', 'C:\\Python26\\tcl\\tk8.5\\comdlg.tcl', 'DATA'), ('_MEI\\tk\\console.tcl', 'C:\\Python26\\tcl\\tk8.5\\console.tcl', 'DATA'), ('_MEI\\tk\\dialog.tcl', 'C:\\Python26\\tcl\\tk8.5\\dialog.tcl', 'DATA'), ('_MEI\\tk\\entry.tcl', 'C:\\Python26\\tcl\\tk8.5\\entry.tcl', 'DATA'), ('_MEI\\tk\\focus.tcl', 'C:\\Python26\\tcl\\tk8.5\\focus.tcl', 'DATA'), ('_MEI\\tk\\license.terms', 'C:\\Python26\\tcl\\tk8.5\\license.terms', 'DATA'), ('_MEI\\tk\\listbox.tcl', 'C:\\Python26\\tcl\\tk8.5\\listbox.tcl', 'DATA'), ('_MEI\\tk\\menu.tcl', 'C:\\Python26\\tcl\\tk8.5\\menu.tcl', 'DATA'), ('_MEI\\tk\\mkpsenc.tcl', 'C:\\Python26\\tcl\\tk8.5\\mkpsenc.tcl', 'DATA'), ('_MEI\\tk\\msgbox.tcl', 'C:\\Python26\\tcl\\tk8.5\\msgbox.tcl', 'DATA'), ('_MEI\\tk\\obsolete.tcl', 'C:\\Python26\\tcl\\tk8.5\\obsolete.tcl', 'DATA'), ('_MEI\\tk\\optMenu.tcl', 'C:\\Python26\\tcl\\tk8.5\\optMenu.tcl', 'DATA'), ('_MEI\\tk\\palette.tcl', 'C:\\Python26\\tcl\\tk8.5\\palette.tcl', 'DATA'), ('_MEI\\tk\\panedwindow.tcl', 'C:\\Python26\\tcl\\tk8.5\\panedwindow.tcl', 'DATA'), ('_MEI\\tk\\pkgIndex.tcl', 'C:\\Python26\\tcl\\tk8.5\\pkgIndex.tcl', 'DATA'), ('_MEI\\tk\\safetk.tcl', 'C:\\Python26\\tcl\\tk8.5\\safetk.tcl', 'DATA'), ('_MEI\\tk\\scale.tcl', 'C:\\Python26\\tcl\\tk8.5\\scale.tcl', 'DATA'), ('_MEI\\tk\\scrlbar.tcl', 'C:\\Python26\\tcl\\tk8.5\\scrlbar.tcl', 'DATA'), ('_MEI\\tk\\spinbox.tcl', 'C:\\Python26\\tcl\\tk8.5\\spinbox.tcl', 'DATA'), ('_MEI\\tk\\tclIndex', 'C:\\Python26\\tcl\\tk8.5\\tclIndex', 'DATA'), ('_MEI\\tk\\tearoff.tcl', 'C:\\Python26\\tcl\\tk8.5\\tearoff.tcl', 'DATA'), ('_MEI\\tk\\text.tcl', 'C:\\Python26\\tcl\\tk8.5\\text.tcl', 'DATA'), ('_MEI\\tk\\tk.tcl', 'C:\\Python26\\tcl\\tk8.5\\tk.tcl', 'DATA'), ('_MEI\\tk\\tkfbox.tcl', 'C:\\Python26\\tcl\\tk8.5\\tkfbox.tcl', 'DATA'), ('_MEI\\tk\\unsupported.tcl', 'C:\\Python26\\tcl\\tk8.5\\unsupported.tcl', 'DATA'), ('_MEI\\tk\\xmfbox.tcl', 'C:\\Python26\\tcl\\tk8.5\\xmfbox.tcl', 'DATA'), ('_MEI\\tk\\ttk\\altTheme.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\altTheme.tcl', 'DATA'), ('_MEI\\tk\\ttk\\aquaTheme.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\aquaTheme.tcl', 'DATA'), ('_MEI\\tk\\ttk\\button.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\button.tcl', 'DATA'), ('_MEI\\tk\\ttk\\clamTheme.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\clamTheme.tcl', 'DATA'), ('_MEI\\tk\\ttk\\classicTheme.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\classicTheme.tcl', 'DATA'), ('_MEI\\tk\\ttk\\combobox.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\combobox.tcl', 'DATA'), ('_MEI\\tk\\ttk\\cursors.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\cursors.tcl', 'DATA'), ('_MEI\\tk\\ttk\\defaults.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\defaults.tcl', 'DATA'), ('_MEI\\tk\\ttk\\entry.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\entry.tcl', 'DATA'), ('_MEI\\tk\\ttk\\fonts.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\fonts.tcl', 'DATA'), ('_MEI\\tk\\ttk\\menubutton.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\menubutton.tcl', 'DATA'), ('_MEI\\tk\\ttk\\notebook.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\notebook.tcl', 'DATA'), ('_MEI\\tk\\ttk\\panedwindow.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\panedwindow.tcl', 'DATA'), ('_MEI\\tk\\ttk\\progress.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\progress.tcl', 'DATA'), ('_MEI\\tk\\ttk\\scale.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\scale.tcl', 'DATA'), ('_MEI\\tk\\ttk\\scrollbar.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\scrollbar.tcl', 'DATA'), ('_MEI\\tk\\ttk\\sizegrip.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\sizegrip.tcl', 'DATA'), ('_MEI\\tk\\ttk\\treeview.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\treeview.tcl', 'DATA'), ('_MEI\\tk\\ttk\\ttk.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\ttk.tcl', 'DATA'), ('_MEI\\tk\\ttk\\utils.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\utils.tcl', 'DATA'), ('_MEI\\tk\\ttk\\winTheme.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\winTheme.tcl', 'DATA'), ('_MEI\\tk\\ttk\\xpTheme.tcl', 'C:\\Python26\\tcl\\tk8.5\\ttk\\xpTheme.tcl', 'DATA'), ('_MEI\\tk\\msgs\\cs.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\cs.msg', 'DATA'), ('_MEI\\tk\\msgs\\da.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\da.msg', 'DATA'), ('_MEI\\tk\\msgs\\de.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\de.msg', 'DATA'), ('_MEI\\tk\\msgs\\el.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\el.msg', 'DATA'), ('_MEI\\tk\\msgs\\en.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\en.msg', 'DATA'), ('_MEI\\tk\\msgs\\en_gb.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\en_gb.msg', 'DATA'), ('_MEI\\tk\\msgs\\eo.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\eo.msg', 'DATA'), ('_MEI\\tk\\msgs\\es.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\es.msg', 'DATA'), ('_MEI\\tk\\msgs\\fr.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\fr.msg', 'DATA'), ('_MEI\\tk\\msgs\\hu.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\hu.msg', 'DATA'), ('_MEI\\tk\\msgs\\it.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\it.msg', 'DATA'), ('_MEI\\tk\\msgs\\nl.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\nl.msg', 'DATA'), ('_MEI\\tk\\msgs\\pl.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\pl.msg', 'DATA'), ('_MEI\\tk\\msgs\\pt.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\pt.msg', 'DATA'), ('_MEI\\tk\\msgs\\ru.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\ru.msg', 'DATA'), ('_MEI\\tk\\msgs\\sv.msg', 'C:\\Python26\\tcl\\tk8.5\\msgs\\sv.msg', 'DATA'), ('_MEI\\tk\\images\\logo.eps', 'C:\\Python26\\tcl\\tk8.5\\images\\logo.eps', 'DATA'), ('_MEI\\tk\\images\\logo100.gif', 'C:\\Python26\\tcl\\tk8.5\\images\\logo100.gif', 'DATA'), ('_MEI\\tk\\images\\logo64.gif', 'C:\\Python26\\tcl\\tk8.5\\images\\logo64.gif', 'DATA'), ('_MEI\\tk\\images\\logoLarge.gif', 'C:\\Python26\\tcl\\tk8.5\\images\\logoLarge.gif', 'DATA'), ('_MEI\\tk\\images\\logoMed.gif', 'C:\\Python26\\tcl\\tk8.5\\images\\logoMed.gif', 'DATA'), ('_MEI\\tk\\images\\pwrdLogo.eps', 'C:\\Python26\\tcl\\tk8.5\\images\\pwrdLogo.eps', 'DATA'), ('_MEI\\tk\\images\\pwrdLogo100.gif', 'C:\\Python26\\tcl\\tk8.5\\images\\pwrdLogo100.gif', 'DATA'), ('_MEI\\tk\\images\\pwrdLogo150.gif', 'C:\\Python26\\tcl\\tk8.5\\images\\pwrdLogo150.gif', 'DATA'), ('_MEI\\tk\\images\\pwrdLogo175.gif', 'C:\\Python26\\tcl\\tk8.5\\images\\pwrdLogo175.gif', 'DATA'), ('_MEI\\tk\\images\\pwrdLogo200.gif', 'C:\\Python26\\tcl\\tk8.5\\images\\pwrdLogo200.gif', 'DATA'), ('_MEI\\tk\\images\\pwrdLogo75.gif', 'C:\\Python26\\tcl\\tk8.5\\images\\pwrdLogo75.gif', 'DATA'), ('_MEI\\tk\\images\\README', 'C:\\Python26\\tcl\\tk8.5\\images\\README', 'DATA'), ('_MEI\\tk\\images\\tai-ku.gif', 'C:\\Python26\\tcl\\tk8.5\\images\\tai-ku.gif', 'DATA')]>
FixTk: None -> <PyModule 'FixTk' C:\Python26\lib\lib-tk\FixTk.pyc imports=[('os', 0, 0, -1), ('_tkinter', 0, 1, -1), ('sys', 0, 0, -1), ('ctypes', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
pwd: None -> None
  DEL pwd
ctypes: None -> <PkgModule 'ctypes' C:\Python26\lib\ctypes\__init__.pyc imports=[('_ctypes.set_errno', 0, 0, -1), ('_ctypes._cast_addr', 0, 0, -1), ('_ctypes.FUNCFLAG_USE_ERRNO', 0, 0, -1), ('_ctypes._memmove_addr', 0, 0, -1), ('os', 0, 0, -1), ('struct', 0, 0, -1), ('_ctypes.get_last_error', 0, 1, -1), ('ctypes._endian.BigEndianStructure', 0, 0, -1), ('_ctypes._memset_addr', 0, 0, -1), ('_ctypes._wstring_at_addr', 0, 0, -1), ('_ctypes.set_conversion_mode', 0, 0, -1), ('_ctypes.alignment', 0, 0, -1), ('sys', 0, 0, -1), ('_ctypes.Structure', 0, 0, -1), ('_ctypes._string_at_addr', 0, 0, -1), ('_ctypes._SimpleCData', 0, 1, -1), ('_ctypes.FUNCFLAG_USE_LASTERROR', 0, 0, -1), ('_ctypes.CFuncPtr', 0, 0, -1), ('_ctypes.Union', 0, 0, -1), ('struct.calcsize', 1, 0, -1), ('_ctypes', 0, 0, -1), ('_ctypes.ArgumentError', 0, 0, -1), ('_ctypes.dlopen', 0, 1, -1), ('struct', 1, 0, -1), ('_ctypes.RTLD_GLOBAL', 0, 0, -1), ('_ctypes.LoadLibrary', 0, 1, -1), ('_ctypes.get_errno', 0, 0, -1), ('_ctypes.resize', 0, 0, -1), ('_ctypes.POINTER', 0, 0, -1), ('_ctypes.set_last_error', 0, 1, -1), ('_ctypes.FUNCFLAG_CDECL', 0, 0, -1), ('_ctypes.FormatError', 0, 1, -1), ('_ctypes.pointer', 0, 0, -1), ('_ctypes.RTLD_LOCAL', 0, 0, -1), ('_ctypes._pointer_type_cache', 0, 0, -1), ('_ctypes._check_HRESULT', 0, 1, -1), ('_ctypes._SimpleCData', 0, 0, -1), ('struct.calcsize', 0, 0, -1), ('ctypes._endian.LittleEndianStructure', 0, 0, -1), ('_ctypes.FUNCFLAG_PYTHONAPI', 0, 0, -1), ('_ctypes.FUNCFLAG_STDCALL', 0, 1, -1), ('_ctypes', 0, 1, -1), ('ctypes._endian', 0, 0, -1), ('_ctypes.sizeof', 0, 0, -1), ('_ctypes.addressof', 0, 0, -1), ('_ctypes.__version__', 0, 0, -1), ('_ctypes._Pointer', 0, 0, -1), ('_ctypes.byref', 0, 0, -1), ('_ctypes.Array', 0, 0, -1)] binaries=[] datas=[]>
ctypes._ctypes: None -> None
_ctypes: None -> <ExtensionModule '_ctypes' C:\Python26\DLLs\_ctypes.pyd imports=[] binaries=[] datas=[]>
ctypes.os: None -> None
ctypes.struct: None -> None
ctypes.ctypes: None -> None
ctypes._endian: None -> <PyModule 'ctypes._endian' C:\Python26\lib\ctypes\_endian.pyc imports=[('ctypes', 0, 0, -1), ('ctypes.*', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
ctypes.sys: None -> None
schedule: None -> <PkgModule 'schedule' C:\Python26\lib\site-packages\schedule\__init__.pyc imports=[('logging', 0, 0, -1), ('functools', 0, 0, -1), ('datetime', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
sqlite3: None -> <PkgModule 'sqlite3' C:\Python26\lib\sqlite3\__init__.pyc imports=[('dbapi2.*', 0, 0, -1), ('dbapi2', 0, 0, -1), ('sqlite3.test.transactions', 0, 0, -1), ('sqlite3.test.factory', 0, 0, -1), ('sqlite3.test.types', 0, 0, -1), ('sqlite3.test', 0, 0, -1), ('sqlite3.test.userfunctions', 0, 0, -1), ('sqlite3.test.dbapi', 0, 0, -1), ('sqlite3.test.hooks', 0, 0, -1), ('sqlite3.test.dump', 0, 0, -1), ('sqlite3.test.py25tests', 0, 0, -1), ('sqlite3', 0, 0, -1), ('sqlite3.dbapi2', 0, 0, -1), ('sqlite3.dump', 0, 0, -1), ('sqlite3.test.regression', 0, 0, -1)] binaries=[] datas=[]>
pygame: None -> <PkgModule 'pygame' C:\Python26\lib\site-packages\pygame\__init__.pyc imports=[('pygame.mac_scrap', 1, 0, -1), ('pygame.cursors', 0, 0, -1), ('pygame.fastevent', 0, 0, -1), ('pygame.pixelarray', 0, 0, -1), ('pygame.key', 0, 0, -1), ('os', 0, 0, -1), ('pygame.movie', 0, 0, -1), ('pygame.bufferproxy', 1, 0, -1), ('pygame.rwobject', 0, 0, -1), ('pygame.base.*', 0, 0, -1), ('pygame.color', 0, 0, -1), ('pygame.surface.*', 0, 0, -1), ('atexit', 1, 0, -1), ('numpy', 1, 0, -1), ('pygame.rect', 0, 0, -1), ('copyreg', 0, 1, -1), ('pygame.mask.Mask', 0, 0, -1), ('pygame.image', 0, 0, -1), ('pygame.rect.Rect', 0, 0, -1), ('sys', 0, 0, -1), ('pygame.overlay.*', 0, 0, -1), ('pygame.display', 0, 0, -1), ('string', 0, 0, -1), ('pygame.base', 0, 0, -1), ('pygame.mouse', 0, 0, -1), ('pygame.cdrom', 0, 0, -1), ('pygame.sndarray', 0, 0, -1), ('warnings', 1, 0, -1), ('pygame.transform', 0, 0, -1), ('pygame.joystick', 0, 0, -1), ('pygame.constants', 0, 0, -1), ('pygame.sysfont', 0, 0, -1), ('pygame.colordict', 1, 0, -1), ('pygame.version.*', 0, 0, -1), ('pygame.mixer', 0, 0, -1), ('pygame.imageext', 0, 0, -1), ('pygame.threads', 0, 0, -1), ('pygame.sprite', 0, 0, -1), ('pygame.surface', 0, 0, -1), ('pygame.time', 0, 0, -1), ('pygame.surfarray', 0, 0, -1), ('Numeric', 1, 0, -1), ('pygame.overlay', 0, 0, -1), ('pygame.compat.geterror', 0, 0, -1), ('pygame.surflock', 0, 0, -1), ('pygame.constants.*', 0, 0, -1), ('pygame.draw', 0, 0, -1), ('pygame.version', 0, 0, -1), ('pygame.mixer_music', 0, 0, -1), ('OpenGL.GL', 1, 0, -1), ('copy_reg', 0, 0, -1), ('pygame.macosx', 1, 0, -1), ('warnings', 1, 1, -1), ('pygame.mask', 0, 0, -1), ('pygame.font', 0, 0, -1), ('pygame.event', 0, 0, -1), ('pygame.scrap', 0, 0, -1), ('pygame.pixelarray.*', 0, 0, -1), ('pygame.compat', 0, 0, -1), ('pygame._view', 0, 0, -1)] binaries=[] datas=[]>
point: None -> <PyModule 'point' C:\code\ftdi-python\panic-alarm\carpark\point.pyc imports=[('tkMessageBox', 0, 0, -1), ('os', 0, 0, -1), ('random', 0, 0, -1), ('threading', 0, 0, -1), ('Queue', 0, 0, -1), ('multiListBox', 0, 0, -1), ('PIL', 0, 0, -1), ('tkFileDialog', 0, 0, -1), ('winsound', 0, 0, -1), ('guardMultiListBox', 0, 0, -1), ('PIL.ImageTk', 0, 0, -1), ('d2xx', 0, 0, -1), ('customtkSimpleDialog', 0, 0, -1), ('dataset', 0, 0, -1), ('PIL.Image', 0, 0, -1), ('tkSimpleDialog', 0, 0, -1), ('sys', 0, 0, -1), ('re', 0, 0, -1), ('Tkinter', 0, 0, -1), ('time', 0, 0, -1), ('admin', 0, 0, -1), ('Tkinter.*', 0, 0, -1)] binaries=[] datas=[]>
pygame.mixer: None -> <ExtensionModule 'pygame.mixer' C:\Python26\lib\site-packages\pygame\mixer.pyd imports=[] binaries=[] datas=[]>
sqlalchemy: None -> <PkgModule 'sqlalchemy' C:\Python26\lib\site-packages\sqlalchemy\__init__.pyc imports=[('types.DATETIME', 0, 0, 1), ('sql.modifier', 0, 0, 1), ('sql', 0, 0, 1), ('sql.bindparam', 0, 0, 1), ('schema.ColumnDefault', 0, 0, 1), ('types.Float', 0, 0, 1), ('sql.alias', 0, 0, 1), ('schema.FetchedValue', 0, 0, 1), ('util', 1, 0, 1), ('schema.Constraint', 0, 0, 1), ('types.BigInteger', 0, 0, 1), ('types.FLOAT', 0, 0, 1), ('types.BLOB', 0, 0, 1), ('sql.update', 0, 0, 1), ('schema.Column', 0, 0, 1), ('sql.not_', 0, 0, 1), ('sql.null', 0, 0, 1), ('schema.DDL', 0, 0, 1), ('inspection.inspect', 0, 0, 1), ('types.NVARCHAR', 0, 0, 1), ('types.Numeric', 0, 0, 1), ('types.DECIMAL', 0, 0, 1), ('types.BIGINT', 0, 0, 1), ('schema.CheckConstraint', 0, 0, 1), ('types.REAL', 0, 0, 1), ('sql.intersect_all', 0, 0, 1), ('types.DateTime', 0, 0, 1), ('sql.insert', 0, 0, 1), ('sql.union_all', 0, 0, 1), ('schema.Index', 0, 0, 1), ('sql.join', 0, 0, 1), ('engine.create_engine', 0, 0, 1), ('sql.cast', 0, 0, 1), ('types.CHAR', 0, 0, 1), ('sql.extract', 0, 0, 1), ('schema.PrimaryKeyConstraint', 0, 0, 1), ('types.UnicodeText', 0, 0, 1), ('types.BOOLEAN', 0, 0, 1), ('sql.literal_column', 0, 0, 1), ('sql.outparam', 0, 0, 1), ('sql.table', 0, 0, 1), ('types.PickleType', 0, 0, 1), ('sql.except_', 0, 0, 1), ('sql.select', 0, 0, 1), ('types.Enum', 0, 0, 1), ('types.Date', 0, 0, 1), ('schema.DefaultClause', 0, 0, 1), ('sql.true', 0, 0, 1), ('sql.funcfilter', 0, 0, 1), ('types.VARBINARY', 0, 0, 1), ('types.String', 0, 0, 1), ('schema.Sequence', 0, 0, 1), ('types.Boolean', 0, 0, 1), ('types.DATE', 0, 0, 1), ('sql.desc', 0, 0, 1), ('sql.over', 0, 0, 1), ('schema.ForeignKey', 0, 0, 1), ('engine', 0, 0, 1), ('types.CLOB', 0, 0, 1), ('sql.subquery', 0, 0, 1), ('types.TIME', 0, 0, 1), ('schema', 0, 0, 1), ('sql.or_', 0, 0, 1), ('types.TypeDecorator', 0, 0, 1), ('types.INT', 0, 0, 1), ('types.NCHAR', 0, 0, 1), ('sql.except_all', 0, 0, 1), ('sql.false', 0, 0, 1), ('schema.UniqueConstraint', 0, 0, 1), ('engine.engine_from_config', 0, 0, 1), ('types.Integer', 0, 0, 1), ('types.VARCHAR', 0, 0, 1), ('sql.tuple_', 0, 0, 1), ('sql.type_coerce', 0, 0, 1), ('sql.text', 0, 0, 1), ('sql.literal', 0, 0, 1), ('types.TIMESTAMP', 0, 0, 1), ('types.SmallInteger', 0, 0, 1), ('schema.ForeignKeyConstraint', 0, 0, 1), ('sql.between', 0, 0, 1), ('types.BINARY', 0, 0, 1), ('types.SMALLINT', 0, 0, 1), ('sql.union', 0, 0, 1), ('sql.collate', 0, 0, 1), ('schema.Table', 0, 0, 1), ('', 1, 0, 1), ('types.Time', 0, 0, 1), ('types.INTEGER', 0, 0, 1), ('schema.ThreadLocalMetaData', 0, 0, 1), ('sql.intersect', 0, 0, 1), ('inspect', 1, 0, -1), ('sql.and_', 0, 0, 1), ('inspection', 0, 0, 1), ('types.NUMERIC', 0, 0, 1), ('sql.distinct', 0, 0, 1), ('schema.MetaData', 0, 0, 1), ('types.LargeBinary', 0, 0, 1), ('sql.asc', 0, 0, 1), ('types.Text', 0, 0, 1), ('types.Binary', 0, 0, 1), ('sql.func', 0, 0, 1), ('schema.PassiveDefault', 0, 0, 1), ('sql.exists', 0, 0, 1), ('events', 1, 0, 1), ('types.TEXT', 0, 0, 1), ('types', 0, 0, 1), ('sql.case', 0, 0, 1), ('types.Unicode', 0, 0, 1), ('sql.column', 0, 0, 1), ('sql.delete', 0, 0, 1), ('sql.outerjoin', 0, 0, 1), ('types.Interval', 0, 0, 1), ('pysqlite2', 0, 0, -1), ('MySQLdb', 0, 0, -1), ('psycopg2', 0, 0, -1), ('sqlalchemy.databases.firebird', 0, 0, -1), ('sqlalchemy.databases.mssql', 0, 0, -1), ('sqlalchemy.databases.mysql', 0, 0, -1), ('sqlalchemy.databases.postgresql', 0, 0, -1), ('sqlalchemy.databases.sqlite', 0, 0, -1), ('sqlalchemy.databases.oracle', 0, 0, -1), ('sqlalchemy.databases.sybase', 0, 0, -1), ('sqlalchemy.dialects.firebird', 0, 0, -1), ('sqlalchemy.dialects.mssql', 0, 0, -1), ('sqlalchemy.dialects.mysql', 0, 0, -1), ('sqlalchemy.dialects.postgresql', 0, 0, -1), ('sqlalchemy.dialects.sqlite', 0, 0, -1), ('sqlalchemy.dialects.oracle', 0, 0, -1), ('sqlalchemy.dialects.sybase', 0, 0, -1)] binaries=[] datas=[]>
schedule.logging: None -> None
logging: None -> <PkgModule 'logging' C:\Python26\lib\logging\__init__.pyc imports=[('threading', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('atexit', 0, 0, -1), ('string', 0, 0, -1), ('thread', 0, 0, -1), ('cStringIO', 0, 0, -1), ('traceback', 0, 0, -1), ('codecs', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
schedule.functools: None -> None
schedule.datetime: None -> None
schedule.time: None -> None
logging.threading: None -> None
logging.sys: None -> None
logging.types: None -> None
logging.os: None -> None
logging.atexit: None -> None
atexit: None -> <PyModule 'atexit' C:\Python26\lib\atexit.pyc imports=[('traceback', 1, 1, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
logging.string: None -> None
logging.thread: None -> None
logging.cStringIO: None -> None
logging.traceback: None -> None
logging.codecs: None -> None
logging.time: None -> None
sqlite3.dbapi2: None -> <PyModule 'sqlite3.dbapi2' C:\Python26\lib\sqlite3\dbapi2.pyc imports=[('time', 0, 0, -1), ('datetime', 0, 0, -1), ('_sqlite3.*', 0, 0, -1), ('_sqlite3', 0, 0, -1)] binaries=[] datas=[]>
sqlite3.sqlite3: None -> None
sqlite3.test: None -> <PkgModule 'sqlite3.test' C:\Python26\lib\sqlite3\test\__init__.pyc imports=[] binaries=[] datas=[]>
sqlite3.test.transactions: None -> <PyModule 'sqlite3.test.transactions' C:\Python26\lib\sqlite3\test\transactions.pyc imports=[('os', 0, 0, -1), ('unittest', 0, 0, -1), ('sys', 0, 0, -1), ('sqlite3', 0, 0, -1)] binaries=[] datas=[]>
sqlite3.test.factory: None -> <PyModule 'sqlite3.test.factory' C:\Python26\lib\sqlite3\test\factory.pyc imports=[('unittest', 0, 0, -1), ('sqlite3', 0, 0, -1)] binaries=[] datas=[]>
sqlite3.test.types: None -> <PyModule 'sqlite3.test.types' C:\Python26\lib\sqlite3\test\types.pyc imports=[('zlib', 0, 0, -1), ('unittest', 0, 0, -1), ('datetime', 0, 0, -1), ('sqlite3', 0, 0, -1)] binaries=[] datas=[]>
sqlite3.test.userfunctions: None -> <PyModule 'sqlite3.test.userfunctions' C:\Python26\lib\sqlite3\test\userfunctions.pyc imports=[('unittest', 0, 0, -1), ('sqlite3', 0, 0, -1)] binaries=[] datas=[]>
sqlite3.test.dbapi: None -> <PyModule 'sqlite3.test.dbapi' C:\Python26\lib\sqlite3\test\dbapi.pyc imports=[('threading', 0, 0, -1), ('unittest', 0, 0, -1), ('sys', 0, 0, -1), ('sqlite3', 0, 0, -1)] binaries=[] datas=[]>
sqlite3.test.hooks: None -> <PyModule 'sqlite3.test.hooks' C:\Python26\lib\sqlite3\test\hooks.pyc imports=[('os', 0, 0, -1), ('unittest', 0, 0, -1), ('sqlite3', 0, 0, -1)] binaries=[] datas=[]>
sqlite3.test.dump: None -> <PyModule 'sqlite3.test.dump' C:\Python26\lib\sqlite3\test\dump.pyc imports=[('unittest', 0, 0, -1), ('sqlite3', 0, 0, -1)] binaries=[] datas=[]>
sqlite3.test.py25tests: None -> <PyModule 'sqlite3.test.py25tests' C:\Python26\lib\sqlite3\test\py25tests.pyc imports=[('__future__', 0, 0, -1), ('unittest', 0, 0, -1), ('sqlite3', 0, 0, -1), ('__future__.with_statement', 0, 0, -1)] binaries=[] datas=[]>
sqlite3.dump: None -> <PyModule 'sqlite3.dump' C:\Python26\lib\sqlite3\dump.pyc imports=[] binaries=[] datas=[]>
sqlite3.test.regression: None -> <PyModule 'sqlite3.test.regression' C:\Python26\lib\sqlite3\test\regression.pyc imports=[('unittest', 0, 0, -1), ('datetime', 0, 0, -1), ('sqlite3', 0, 0, -1)] binaries=[] datas=[]>
sqlite3.time: None -> None
sqlite3.datetime: None -> None
sqlite3._sqlite3: None -> None
_sqlite3: None -> <ExtensionModule '_sqlite3' C:\Python26\DLLs\_sqlite3.pyd imports=[] binaries=[] datas=[]>
sqlite3.test.os: None -> None
sqlite3.test.unittest: None -> None
sqlite3.test.sys: None -> None
sqlite3.test.sqlite3: None -> None
sqlite3.test.zlib: None -> None
sqlite3.test.datetime: None -> None
sqlite3.test.threading: None -> None
sqlite3.test.__future__: None -> None
_dummy_threading: None -> None
  DEL _dummy_threading
_dummy_threading: None -> None
  DEL _dummy_threading
_dummy_threading: None -> None
  DEL _dummy_threading
PIL.PIL: None -> None
PIL._imagingtk: None -> <ExtensionModule 'PIL._imagingtk' C:\Python26\lib\site-packages\PIL\_imagingtk.pyd imports=[] binaries=[] datas=[]>
PIL.Tkinter: None -> None
PIL.tkinter: None -> None
tkinter: None -> None
  DEL tkinter
PIL.io: None -> None
io: None -> <PyModule 'io' C:\Python26\lib\io.pyc imports=[('abc', 0, 0, -1), ('threading', 0, 0, -1), ('__future__.print_function', 0, 0, -1), ('_fileio', 0, 0, -1), ('os', 0, 0, -1), ('array', 1, 1, -1), ('_bytesio', 0, 0, -1), ('__future__.unicode_literals', 0, 0, -1), ('__future__', 0, 0, -1), ('codecs', 0, 0, -1), ('locale', 1, 1, -1)] binaries=[] datas=[]>
PIL._binary: None -> <PyModule 'PIL._binary' C:\Python26\lib\site-packages\PIL\_binary.pyc imports=[('struct.pack', 0, 0, -1), ('struct.unpack', 0, 0, -1), ('struct', 0, 0, -1)] binaries=[] datas=[]>
PIL.os: None -> None
PIL.warnings: None -> None
PIL.struct: None -> None
PIL.__future__: None -> None
PIL.cffi: None -> None
cffi: None -> None
  DEL cffi
PIL._util: None -> <PyModule 'PIL._util' C:\Python26\lib\site-packages\PIL\_util.pyc imports=[('os', 0, 0, -1)] binaries=[] datas=[]>
PIL.ImagePalette: None -> <PyModule 'PIL.ImagePalette' C:\Python26\lib\site-packages\PIL\ImagePalette.pyc imports=[('PIL.GimpPaletteFile', 1, 1, -1), ('random', 1, 0, -1), ('PIL.ImageColor', 0, 0, -1), ('PIL', 1, 1, -1), ('array', 0, 0, -1), ('warnings', 0, 0, -1), ('PIL', 0, 0, -1), ('PIL.PaletteFile', 1, 1, -1), ('PIL.GimpGradientFile', 1, 1, -1), ('random.randint', 1, 0, -1)] binaries=[] datas=[]>
PIL._imaging: None -> <ExtensionModule 'PIL._imaging' C:\Python26\lib\site-packages\PIL\_imaging.pyd imports=[] binaries=[] datas=[]>
PIL.ImageShow: None -> <PyModule 'PIL.ImageShow' C:\Python26\lib\site-packages\PIL\ImageShow.pyc imports=[('__future__.print_function', 0, 0, -1), ('shlex.quote', 0, 1, -1), ('os', 0, 0, -1), ('shlex', 0, 1, -1), ('pipes', 0, 1, -1), ('__future__', 0, 0, -1), ('PIL', 0, 0, -1), ('PIL.Image', 0, 0, -1), ('pipes.quote', 0, 1, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
PIL.sys: None -> None
PIL.ImageColor: None -> <PyModule 'PIL.ImageColor' C:\Python26\lib\site-packages\PIL\ImageColor.pyc imports=[('PIL.Image', 0, 0, -1), ('PIL', 0, 0, -1), ('re', 0, 0, -1), ('colorsys.hls_to_rgb', 1, 1, -1), ('colorsys', 1, 1, -1)] binaries=[] datas=[]>
PIL.__builtin__: None -> None
PIL.PILLOW_VERSION: None -> None
  DEL PIL.PILLOW_VERSION
PIL.builtins: None -> None
builtins: None -> None
  DEL builtins
PIL.ImageMode: None -> <PyModule 'PIL.ImageMode' C:\Python26\lib\site-packages\PIL\ImageMode.pyc imports=[('PIL.Image', 1, 1, -1), ('PIL', 1, 1, -1)] binaries=[] datas=[]>
PIL.GifImagePlugin: None -> <PyModule 'PIL.GifImagePlugin' C:\Python26\lib\site-packages\PIL\GifImagePlugin.pyc imports=[('subprocess.CalledProcessError', 1, 0, -1), ('subprocess', 1, 0, -1), ('copy.copy', 1, 0, -1), ('PIL.ImageChops', 0, 0, -1), ('subprocess.PIPE', 1, 0, -1), ('subprocess.Popen', 1, 0, -1), ('tempfile', 1, 0, -1), ('PIL', 0, 0, -1), ('PIL.ImagePalette', 0, 0, -1), ('PIL._binary', 0, 0, -1), ('copy', 1, 0, -1), ('PIL.ImageFile', 0, 0, -1), ('_imaging_gif', 0, 0, -1), ('PIL.Image', 0, 0, -1), ('PIL.ImageSequence', 0, 0, -1), ('math', 1, 0, -1), ('os', 1, 0, -1), ('subprocess.check_call', 1, 0, -1)] binaries=[] datas=[]>
PIL.collections: None -> None
PIL.math: None -> None
PIL.PngImagePlugin: None -> <PyModule 'PIL.PngImagePlugin' C:\Python26\lib\site-packages\PIL\PngImagePlugin.pyc imports=[('re', 0, 0, -1), ('__future__.print_function', 0, 0, -1), ('zlib', 0, 0, -1), ('__future__', 0, 0, -1), ('PIL', 0, 0, -1), ('PIL.ImagePalette', 0, 0, -1), ('PIL._binary', 0, 0, -1), ('PIL.ImageFile', 0, 0, -1), ('PIL.Image', 0, 0, -1)] binaries=[] datas=[]>
PIL._plugins: None -> None
  DEL PIL._plugins
PIL.PpmImagePlugin: None -> <PyModule 'PIL.PpmImagePlugin' C:\Python26\lib\site-packages\PIL\PpmImagePlugin.pyc imports=[('PIL.Image', 0, 0, -1), ('PIL', 0, 0, -1), ('PIL.ImageFile', 0, 0, -1), ('string', 0, 0, -1), ('locale', 0, 0, -1)] binaries=[] datas=[]>
PIL.VERSION: None -> None
  DEL PIL.VERSION
PIL.tempfile: None -> None
PIL.BmpImagePlugin: None -> <PyModule 'PIL.BmpImagePlugin' C:\Python26\lib\site-packages\PIL\BmpImagePlugin.pyc imports=[('math', 0, 0, -1), ('PIL', 0, 0, -1), ('PIL.ImagePalette', 0, 0, -1), ('PIL._binary', 0, 0, -1), ('PIL.ImageFile', 0, 0, -1), ('PIL.Image', 0, 0, -1)] binaries=[] datas=[]>
PIL.PyAccess: None -> <PyModule 'PIL.PyAccess' C:\Python26\lib\site-packages\PIL\PyAccess.pyc imports=[('__future__', 0, 0, -1), ('cffi', 0, 0, -1), ('cffi.FFI', 0, 0, -1), ('__future__.print_function', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
PIL.ImageQt: None -> <PyModule 'PIL.ImageQt' C:\Python26\lib\site-packages\PIL\ImageQt.pyc imports=[('PyQt4.QtCore.QBuffer', 0, 1, -1), ('PySide.QtGui.QPixmap', 0, 1, -1), ('PyQt5.QtGui.QImage', 0, 0, -1), ('PyQt4.QtGui.qRgba', 0, 1, -1), ('PyQt5.QtCore.QIODevice', 0, 0, -1), ('PIL._util.isPath', 0, 0, -1), ('PIL', 0, 0, -1), ('PyQt4.QtGui', 0, 1, -1), ('PySide.QtGui.QImage', 0, 1, -1), ('io.BytesIO', 0, 0, -1), ('PyQt4.QtGui.QImage', 0, 1, -1), ('PyQt5.QtCore.QBuffer', 0, 0, -1), ('PySide.QtGui.qRgba', 0, 1, -1), ('PySide.QtCore.QBuffer', 0, 1, -1), ('PyQt5.QtCore', 0, 0, -1), ('PIL._util', 0, 0, -1), ('PyQt4.QtCore', 0, 1, -1), ('PyQt5.QtGui.qRgba', 0, 0, -1), ('PySide.QtGui', 0, 1, -1), ('PyQt5.QtGui.QPixmap', 0, 0, -1), ('PyQt4.QtCore.QIODevice', 0, 1, -1), ('PySide.QtCore', 0, 1, -1), ('PyQt5.QtGui', 0, 0, -1), ('PyQt4.QtGui.QPixmap', 0, 1, -1), ('PySide.QtCore.QIODevice', 0, 1, -1), ('io', 0, 0, -1)] binaries=[] datas=[]>
PIL.ImageChops: None -> <PyModule 'PIL.ImageChops' C:\Python26\lib\site-packages\PIL\ImageChops.pyc imports=[('PIL.Image', 0, 0, -1), ('PIL', 0, 0, -1)] binaries=[] datas=[]>
PIL.JpegImagePlugin: None -> <PyModule 'PIL.JpegImagePlugin' C:\Python26\lib\site-packages\PIL\JpegImagePlugin.pyc imports=[('PIL._util', 0, 0, -1), ('subprocess', 1, 0, -1), ('MpoImagePlugin', 1, 1, 1), ('PIL.JpegPresets.presets', 0, 0, -1), ('PIL.JpegPresets', 0, 0, -1), ('array', 0, 0, -1), ('struct', 0, 0, -1), ('tempfile', 1, 0, -1), ('PIL', 0, 0, -1), ('PIL._binary', 0, 0, -1), ('MpoImagePlugin.MpoImageFile', 1, 1, 1), ('PIL.ImageFile', 0, 0, -1), ('PIL.Image', 0, 0, -1), ('struct.unpack', 0, 0, -1), ('os', 1, 0, -1), ('PIL.TiffImagePlugin', 0, 0, -1), ('PIL._util.isStringType', 0, 0, -1), ('io', 0, 0, -1)] binaries=[] datas=[]>
PIL.numbers: None -> None
numbers: None -> <PyModule 'numbers' C:\Python26\lib\numbers.pyc imports=[('__future__.division', 0, 0, -1), ('abc', 0, 0, -1), ('abc.abstractproperty', 0, 0, -1), ('__future__', 0, 0, -1), ('abc.abstractmethod', 0, 0, -1), ('abc.ABCMeta', 0, 0, -1)] binaries=[] datas=[]>
PIL.GimpPaletteFile: None -> <PyModule 'PIL.GimpPaletteFile' C:\Python26\lib\site-packages\PIL\GimpPaletteFile.pyc imports=[('re', 0, 0, -1), ('PIL._binary', 0, 0, -1), ('PIL._binary.o8', 0, 0, -1)] binaries=[] datas=[]>
PIL.random: None -> None
PIL.array: None -> None
PIL.PaletteFile: None -> <PyModule 'PIL.PaletteFile' C:\Python26\lib\site-packages\PIL\PaletteFile.pyc imports=[('PIL._binary', 0, 0, -1), ('PIL._binary.o8', 0, 0, -1)] binaries=[] datas=[]>
PIL.GimpGradientFile: None -> <PyModule 'PIL.GimpGradientFile' C:\Python26\lib\site-packages\PIL\GimpGradientFile.pyc imports=[('math.pi', 0, 0, -1), ('math', 0, 0, -1), ('PIL._binary.o8', 0, 0, -1), ('math.sqrt', 0, 0, -1), ('PIL._binary', 0, 0, -1), ('math.log', 0, 0, -1), ('math.sin', 0, 0, -1)] binaries=[] datas=[]>
PIL.re: None -> None
PIL.colorsys: None -> None
colorsys: None -> <PyModule 'colorsys' C:\Python26\lib\colorsys.pyc imports=[] binaries=[] datas=[]>
PIL.shlex: None -> None
PIL.pipes: None -> None
pipes: None -> <PyModule 'pipes' C:\Python26\lib\pipes.pyc imports=[('os', 0, 0, -1), ('re', 0, 0, -1), ('tempfile', 0, 0, -1), ('string', 0, 0, -1)] binaries=[] datas=[]>
PIL.subprocess: None -> None
PIL.copy: None -> None
PIL.ImageFile: None -> <PyModule 'PIL.ImageFile' C:\Python26\lib\site-packages\PIL\ImageFile.pyc imports=[('PIL._util', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('PIL._util.isPath', 0, 0, -1), ('PIL', 0, 0, -1), ('PIL.Image', 0, 0, -1), ('traceback', 0, 0, -1), ('mmap', 1, 1, -1), ('io', 0, 0, -1)] binaries=[] datas=[]>
PIL._imaging_gif: None -> None
_imaging_gif: None -> None
  DEL _imaging_gif
PIL.ImageSequence: None -> <PyModule 'PIL.ImageSequence' C:\Python26\lib\site-packages\PIL\ImageSequence.pyc imports=[] binaries=[] datas=[]>
PIL.traceback: None -> None
PIL.mmap: None -> None
mmap: None -> <BuiltinModule 'mmap' None imports=[] binaries=[] datas=[]>
_fileio: None -> <BuiltinModule '_fileio' None imports=[] binaries=[] datas=[]>
_bytesio: None -> <BuiltinModule '_bytesio' None imports=[] binaries=[] datas=[]>
PIL.zlib: None -> None
PIL.string: None -> None
PIL.locale: None -> None
cffi: None -> None
  DEL cffi
cffi: None -> None
  DEL cffi
PIL.PyQt4: None -> None
PyQt4: None -> None
  DEL PyQt4
PIL.PySide: None -> None
PySide: None -> None
  DEL PySide
PIL.PyQt5: None -> None
PyQt5: None -> None
  DEL PyQt5
PyQt4: None -> None
  DEL PyQt4
PyQt5: None -> None
  DEL PyQt5
PyQt4: None -> None
  DEL PyQt4
PySide: None -> None
  DEL PySide
PyQt4: None -> None
  DEL PyQt4
PyQt5: None -> None
  DEL PyQt5
PySide: None -> None
  DEL PySide
PySide: None -> None
  DEL PySide
PyQt5: None -> None
  DEL PyQt5
PyQt4: None -> None
  DEL PyQt4
PyQt5: None -> None
  DEL PyQt5
PySide: None -> None
  DEL PySide
PyQt5: None -> None
  DEL PyQt5
PyQt4: None -> None
  DEL PyQt4
PySide: None -> None
  DEL PySide
PyQt5: None -> None
  DEL PyQt5
PyQt4: None -> None
  DEL PyQt4
PySide: None -> None
  DEL PySide
PIL.MpoImagePlugin: None -> <PyModule 'PIL.MpoImagePlugin' C:\Python26\lib\site-packages\PIL\MpoImagePlugin.pyc imports=[('PIL.Image', 0, 0, -1), ('PIL', 0, 0, -1), ('PIL.JpegImagePlugin', 0, 0, -1)] binaries=[] datas=[]>
PIL.JpegPresets: None -> <PyModule 'PIL.JpegPresets' C:\Python26\lib\site-packages\PIL\JpegPresets.pyc imports=[] binaries=[] datas=[]>
PIL.TiffImagePlugin: None -> <PyModule 'PIL.TiffImagePlugin' C:\Python26\lib\site-packages\PIL\TiffImagePlugin.pyc imports=[('PIL._util', 0, 0, -1), ('collections', 0, 0, -1), ('itertools', 0, 0, -1), ('PIL', 1, 0, -1), ('__future__.print_function', 0, 0, -1), ('PIL', 1, 1, -1), ('os', 0, 0, -1), ('array', 0, 0, -1), ('warnings', 0, 0, -1), ('PIL.TiffTags', 1, 1, -1), ('__future__', 0, 0, -1), ('PIL', 0, 0, -1), ('PIL.ImagePalette', 0, 0, -1), ('PIL._binary', 0, 0, -1), ('PIL.ImageFile', 0, 0, -1), ('PIL.TiffTags', 1, 0, -1), ('PIL.Image', 0, 0, -1), ('io', 0, 0, -1), ('PIL._util.isStringType', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
PIL.itertools: None -> None
PIL.TiffTags: None -> <PyModule 'PIL.TiffTags' C:\Python26\lib\site-packages\PIL\TiffTags.pyc imports=[] binaries=[] datas=[]>
d2xx._d2xx: None -> <ExtensionModule 'd2xx._d2xx' C:\Python26\lib\site-packages\d2xx\_d2xx.pyd imports=[] binaries=[] datas=[]>
d2xx.defines: None -> <PyModule 'd2xx.defines' C:\Python26\lib\site-packages\d2xx\defines.pyc imports=[] binaries=[] datas=[]>
dataset.dataset: None -> None
dataset.persistence: None -> <PkgModule 'dataset.persistence' C:\Python26\lib\site-packages\dataset\persistence\__init__.pyc imports=[] binaries=[] datas=[]>
dataset.persistence.table: None -> <PyModule 'dataset.persistence.table' C:\Python26\lib\site-packages\dataset\persistence\table.pyc imports=[('dataset.persistence.util.normalize_column_name', 0, 0, -1), ('sqlalchemy.alias', 0, 0, -1), ('itertools', 0, 0, -1), ('sqlalchemy.schema.Index', 0, 0, -1), ('sqlalchemy.sql', 0, 0, -1), ('dataset.persistence.util.guess_type', 0, 0, -1), ('dataset.persistence.util', 0, 0, -1), ('hashlib.sha1', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('logging', 0, 0, -1), ('sqlalchemy.schema', 0, 0, -1), ('hashlib', 0, 0, -1), ('sqlalchemy.sql.expression', 0, 0, -1), ('dataset.persistence.util.ResultIter', 0, 0, -1), ('dataset.util', 0, 0, -1), ('itertools.count', 0, 0, -1), ('sqlalchemy.sql.and_', 0, 0, -1), ('dataset.util.DatasetException', 0, 0, -1), ('sqlalchemy.schema.Column', 0, 0, -1)] binaries=[] datas=[]>
dataset.os: None -> None
dataset.warnings: None -> None
dataset.persistence.database: None -> <PyModule 'dataset.persistence.database' C:\Python26\lib\site-packages\dataset\persistence\database.pyc imports=[('sqlalchemy.schema.Table', 0, 0, -1), ('sqlalchemy.Integer', 0, 0, -1), ('dataset.persistence.util.row_type', 0, 0, -1), ('dataset.persistence.table.Table', 0, 0, -1), ('six.moves.urllib.parse', 0, 0, -1), ('alembic.migration', 0, 0, -1), ('threading', 0, 0, -1), ('six.moves.urllib.parse.parse_qs', 0, 0, -1), ('sqlalchemy.util', 0, 0, -1), ('alembic.operations.Operations', 0, 0, -1), ('sqlalchemy.schema', 0, 0, -1), ('sqlalchemy.schema.Column', 0, 0, -1), ('dataset.persistence.util.ResultIter', 0, 0, -1), ('dataset.util', 0, 0, -1), ('six', 0, 0, -1), ('six.moves.urllib.parse.urlencode', 0, 0, -1), ('sqlalchemy.create_engine', 0, 0, -1), ('alembic.operations', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.schema.MetaData', 0, 0, -1), ('alembic.migration.MigrationContext', 0, 0, -1), ('dataset.persistence.table', 0, 0, -1), ('re', 0, 0, -1), ('sqlalchemy.util.safe_reraise', 0, 0, -1), ('sqlalchemy.String', 0, 0, -1), ('sqlalchemy.sql', 0, 0, -1), ('dataset.persistence.util', 0, 0, -1), ('logging', 0, 0, -1), ('sqlalchemy.sql.text', 0, 0, -1), ('dataset.util.DatasetException', 0, 0, -1)] binaries=[] datas=[]>
dataset.persistence.util: None -> <PyModule 'dataset.persistence.util' C:\Python26\lib\site-packages\dataset\persistence\util.pyc imports=[('collections', 0, 0, -1), ('ordereddict.OrderedDict', 0, 1, -1), ('ordereddict', 0, 1, -1), ('sqlalchemy.Boolean', 0, 0, -1), ('collections.OrderedDict', 0, 0, -1), ('six.string_types', 0, 0, -1), ('sqlalchemy.DateTime', 0, 0, -1), ('sqlalchemy.Integer', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('six', 0, 0, -1), ('datetime', 0, 0, -1), ('sqlalchemy.UnicodeText', 0, 0, -1), ('inspect', 0, 0, -1), ('sqlalchemy.Float', 0, 0, -1), ('datetime.datetime', 0, 0, -1), ('inspect.isgenerator', 0, 0, -1)] binaries=[] datas=[]>
dataset.freeze: None -> <PkgModule 'dataset.freeze' C:\Python26\lib\site-packages\dataset\freeze\__init__.pyc imports=[] binaries=[] datas=[]>
dataset.freeze.app: None -> <PyModule 'dataset.freeze.app' C:\Python26\lib\site-packages\dataset\freeze\app.pyc imports=[('dataset.freeze.format', 0, 0, -1), ('dataset.persistence.table', 0, 0, -1), ('sqlalchemy.exc.OperationalError', 0, 0, -1), ('dataset.persistence.database', 0, 0, -1), ('dataset.freeze.config', 0, 0, -1), ('sqlalchemy.exc.ProgrammingError', 0, 0, -1), ('dataset.persistence.database.Database', 0, 0, -1), ('logging', 0, 0, -1), ('argparse', 0, 0, -1), ('dataset.freeze.config.Configuration', 0, 0, -1), ('sqlalchemy.exc', 0, 0, -1), ('dataset.persistence.table.Table', 0, 0, -1), ('dataset.util', 0, 0, -1), ('dataset.freeze.format.get_serializer', 0, 0, -1), ('dataset.freeze.config.Export', 0, 0, -1), ('dataset.util.FreezeException', 0, 0, -1)] binaries=[] datas=[]>
dataset.persistence.dataset: None -> None
dataset.persistence.sqlalchemy: None -> None
sqlalchemy.alias: None -> None
  DEL sqlalchemy.alias
dataset.persistence.itertools: None -> None
sqlalchemy.schema: None -> <PyModule 'sqlalchemy.schema' C:\Python26\lib\site-packages\sqlalchemy\schema.pyc imports=[('sql.ddl.CreateSequence', 0, 0, 1), ('sql.ddl.DropSchema', 0, 0, 1), ('sql.schema.ColumnCollectionConstraint', 0, 0, 1), ('sql.ddl.sort_tables_and_constraints', 0, 0, 1), ('sql.ddl.DropSequence', 0, 0, 1), ('sql.schema', 0, 0, 1), ('sql.ddl.CreateColumn', 0, 0, 1), ('sql.schema._get_table_key', 0, 0, 1), ('sql.schema.UniqueConstraint', 0, 0, 1), ('sql.schema.MetaData', 0, 0, 1), ('sql.ddl', 0, 0, 1), ('sql.ddl.DropConstraint', 0, 0, 1), ('sql.schema.Column', 0, 0, 1), ('sql.ddl.sort_tables', 0, 0, 1), ('sql.base.SchemaVisitor', 0, 0, 1), ('sql.schema.PrimaryKeyConstraint', 0, 0, 1), ('sql.ddl.DDLBase', 0, 0, 1), ('sql.ddl.CreateTable', 0, 0, 1), ('sql.ddl.DDLElement', 0, 0, 1), ('sql.schema.DefaultClause', 0, 0, 1), ('sql.schema.ForeignKeyConstraint', 0, 0, 1), ('sql.ddl.CreateIndex', 0, 0, 1), ('sql.schema.FetchedValue', 0, 0, 1), ('sql.ddl._CreateDropBase', 0, 0, 1), ('sql.ddl.DropTable', 0, 0, 1), ('sql.schema.Table', 0, 0, 1), ('sql.schema.PassiveDefault', 0, 0, 1), ('sql.schema.ForeignKey', 0, 0, 1), ('sql.schema.CheckConstraint', 0, 0, 1), ('sql.ddl._DDLCompiles', 0, 0, 1), ('sql.ddl.DropIndex', 0, 0, 1), ('sql.schema.SchemaItem', 0, 0, 1), ('sql.schema.DefaultGenerator', 0, 0, 1), ('sql.schema.Index', 0, 0, 1), ('sql.ddl._DropView', 0, 0, 1), ('sql.schema.ThreadLocalMetaData', 0, 0, 1), ('sql.schema.ColumnDefault', 0, 0, 1), ('sql.ddl.DDL', 0, 0, 1), ('sql.ddl.AddConstraint', 0, 0, 1), ('sql.naming', 0, 0, 1), ('sql.base', 0, 0, 1), ('sql.schema.Sequence', 0, 0, 1), ('sql.schema.ColumnCollectionMixin', 0, 0, 1), ('sql.naming.conv', 0, 0, 1), ('sql.ddl.CreateSchema', 0, 0, 1), ('sql.schema.Constraint', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.sql: None -> <PkgModule 'sqlalchemy.sql' C:\Python26\lib\site-packages\sqlalchemy\sql\__init__.pyc imports=[('elements.AnnotatedColumnElement', 1, 0, 1), ('naming', 1, 0, 1), ('expression.intersect', 0, 0, 1), ('expression.outerjoin', 0, 0, 1), ('expression.collate', 0, 0, 1), ('expression.exists', 0, 0, 1), ('expression.alias', 0, 0, 1), ('expression.modifier', 0, 0, 1), ('expression.literal_column', 0, 0, 1), ('expression.Select', 0, 0, 1), ('expression.desc', 0, 0, 1), ('expression.asc', 0, 0, 1), ('expression', 0, 0, 1), ('expression.FromClause', 0, 0, 1), ('expression.false', 0, 0, 1), ('expression.column', 0, 0, 1), ('expression.ColumnElement', 0, 0, 1), ('expression.ColumnCollection', 0, 0, 1), ('expression.Join', 0, 0, 1), ('expression.label', 0, 0, 1), ('expression.or_', 0, 0, 1), ('expression.CompoundSelect', 0, 0, 1), ('expression.Selectable', 0, 0, 1), ('expression.true', 0, 0, 1), ('expression.extract', 0, 0, 1), ('expression.outparam', 0, 0, 1), ('util', 1, 0, 2), ('expression.funcfilter', 0, 0, 1), ('expression.null', 0, 0, 1), ('expression.ClauseElement', 0, 0, 1), ('expression.Update', 0, 0, 1), ('expression.select', 0, 0, 1), ('elements', 1, 0, 1), ('expression.True_', 0, 0, 1), ('expression.subquery', 0, 0, 1), ('expression.intersect_all', 0, 0, 1), ('expression.except_', 0, 0, 1), ('expression.join', 0, 0, 1), ('expression.cast', 0, 0, 1), ('selectable', 1, 0, 1), ('expression.Insert', 0, 0, 1), ('expression.tuple_', 0, 0, 1), ('expression.literal', 0, 0, 1), ('expression.text', 0, 0, 1), ('', 1, 0, 1), ('visitors', 0, 0, 1), ('expression.TableClause', 0, 0, 1), ('expression.Delete', 0, 0, 1), ('expression.between', 0, 0, 1), ('inspect', 1, 0, -1), ('expression.type_coerce', 0, 0, 1), ('annotation._prepare_annotations', 1, 0, 1), ('expression.over', 0, 0, 1), ('expression.table', 0, 0, 1), ('expression.func', 0, 0, 1), ('expression.update', 0, 0, 1), ('expression.insert', 0, 0, 1), ('expression.False_', 0, 0, 1), ('expression.bindparam', 0, 0, 1), ('expression.not_', 0, 0, 1), ('expression.Alias', 0, 0, 1), ('expression.distinct', 0, 0, 1), ('expression.except_all', 0, 0, 1), ('expression.union', 0, 0, 1), ('expression.delete', 0, 0, 1), ('expression.union_all', 0, 0, 1), ('visitors.ClauseVisitor', 0, 0, 1), ('expression.and_', 0, 0, 1), ('expression.case', 0, 0, 1), ('selectable.AnnotatedFromClause', 1, 0, 1), ('annotation.Annotated', 1, 0, 1), ('annotation', 1, 0, 1), ('', 1, 0, 2), ('elements.ClauseList', 1, 0, 1)] binaries=[] datas=[]>
dataset.persistence.hashlib: None -> None
hashlib: None -> <PyModule 'hashlib' C:\Python26\lib\hashlib.pyc imports=[('_sha', 1, 1, -1), ('_sha256', 1, 1, -1), ('_hashlib', 0, 0, -1), ('_md5', 1, 1, -1), ('_sha512', 1, 1, -1)] binaries=[] datas=[]>
dataset.persistence.logging: None -> None
sqlalchemy.sql.expression: None -> <PyModule 'sqlalchemy.sql.expression' C:\Python26\lib\site-packages\sqlalchemy\sql\expression.pyc imports=[('selectable._interpret_as_from', 0, 0, 1), ('selectable.CompoundSelect', 0, 0, 1), ('elements.outparam', 0, 0, 1), ('util.langhelpers', 0, 0, 2), ('elements._string_or_unprintable', 0, 0, 1), ('functions.func', 0, 0, 1), ('visitors', 0, 0, 1), ('selectable.Exists', 0, 0, 1), ('elements.not_', 0, 0, 1), ('elements.ReleaseSavepointClause', 0, 0, 1), ('elements.TextClause', 0, 0, 1), ('util.langhelpers.public_factory', 0, 0, 2), ('elements.Grouping', 0, 0, 1), ('functions', 0, 0, 1), ('elements.literal', 0, 0, 1), ('elements.literal_column', 0, 0, 1), ('functions.Function', 0, 0, 1), ('selectable.FromGrouping', 0, 0, 1), ('base.PARSE_AUTOCOMMIT', 0, 0, 1), ('selectable.CTE', 0, 0, 1), ('elements.Case', 0, 0, 1), ('elements.UnaryExpression', 0, 0, 1), ('elements._truncated_label', 0, 0, 1), ('functions.FunctionElement', 0, 0, 1), ('selectable.ScalarSelect', 0, 0, 1), ('elements._column_as_key', 0, 0, 1), ('selectable.GenerativeSelect', 0, 0, 1), ('visitors.Visitable', 0, 0, 1), ('elements._cloned_difference', 0, 0, 1), ('elements._corresponding_column_or_error', 0, 0, 1), ('elements.ColumnClause', 0, 0, 1), ('elements._clone', 0, 0, 1), ('elements.between', 0, 0, 1), ('elements._clause_element_as_expr', 0, 0, 1), ('elements.Over', 0, 0, 1), ('selectable.TableClause', 0, 0, 1), ('elements._cloned_intersection', 0, 0, 1), ('elements._labeled', 0, 0, 1), ('elements.False_', 0, 0, 1), ('elements.type_coerce', 0, 0, 1), ('selectable.Selectable', 0, 0, 1), ('selectable.Alias', 0, 0, 1), ('dml.Delete', 0, 0, 1), ('elements.Cast', 0, 0, 1), ('elements._expression_literal_as_text', 0, 0, 1), ('elements.Label', 0, 0, 1), ('elements.ClauseElement', 0, 0, 1), ('elements.TypeClause', 0, 0, 1), ('elements.collate', 0, 0, 1), ('selectable.TextAsFrom', 0, 0, 1), ('elements.Null', 0, 0, 1), ('dml.Insert', 0, 0, 1), ('elements._literal_as_binds', 0, 0, 1), ('dml.UpdateBase', 0, 0, 1), ('base.Generative', 0, 0, 1), ('selectable.Select', 0, 0, 1), ('base._from_objects', 0, 0, 1), ('selectable.Join', 0, 0, 1), ('elements._select_iterables', 0, 0, 1), ('selectable.SelectBase', 0, 0, 1), ('selectable.FromClause', 0, 0, 1), ('base.Executable', 0, 0, 1), ('elements._only_column_elements', 0, 0, 1), ('selectable', 0, 0, 1), ('elements._literal_as_text', 0, 0, 1), ('elements._is_column', 0, 0, 1), ('elements.ClauseList', 0, 0, 1), ('elements.RollbackToSavepointClause', 0, 0, 1), ('dml', 0, 0, 1), ('elements.BinaryExpression', 0, 0, 1), ('elements.Extract', 0, 0, 1), ('selectable.HasSuffixes', 0, 0, 1), ('selectable.alias', 0, 0, 1), ('elements.SavepointClause', 0, 0, 1), ('base', 0, 0, 1), ('elements.True_', 0, 0, 1), ('elements.BindParameter', 0, 0, 1), ('base.ColumnCollection', 0, 0, 1), ('elements', 0, 0, 1), ('elements.Tuple', 0, 0, 1), ('dml.Update', 0, 0, 1), ('elements.FunctionFilter', 0, 0, 1), ('dml.ValuesBase', 0, 0, 1), ('selectable.subquery', 0, 0, 1), ('functions.modifier', 0, 0, 1), ('selectable.HasPrefixes', 0, 0, 1), ('elements._literal_as_label_reference', 0, 0, 1), ('elements.ColumnElement', 0, 0, 1), ('elements.BooleanClauseList', 0, 0, 1)] binaries=[] datas=[]>
dataset.util: None -> <PyModule 'dataset.util' C:\Python26\lib\site-packages\dataset\util.pyc imports=[('re', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.sql.and_: None -> None
  DEL sqlalchemy.sql.and_
dataset.persistence.collections: None -> None
dataset.persistence.ordereddict: None -> None
ordereddict: None -> <PyModule 'ordereddict' C:\Python26\lib\site-packages\ordereddict.pyc imports=[('UserDict', 0, 0, -1), ('UserDict.DictMixin', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.Boolean: None -> None
  DEL sqlalchemy.Boolean
dataset.persistence.six: None -> None
six: None -> <PyModule 'six' C:\Python26\lib\site-packages\six.pyc imports=[('types', 0, 0, 0), ('sys', 0, 0, 0), ('io', 0, 1, 0), ('itertools', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('functools', 0, 0, 0), ('StringIO', 0, 1, 0), ('operator', 0, 0, 0)] binaries=[] datas=[]>
sqlalchemy.DateTime: None -> None
  DEL sqlalchemy.DateTime
sqlalchemy.Integer: None -> None
  DEL sqlalchemy.Integer
dataset.persistence.datetime: None -> None
sqlalchemy.UnicodeText: None -> None
  DEL sqlalchemy.UnicodeText
dataset.persistence.inspect: None -> None
sqlalchemy.Float: None -> None
  DEL sqlalchemy.Float
sqlalchemy.types: None -> <PyModule 'sqlalchemy.types' C:\Python26\lib\site-packages\sqlalchemy\types.pyc imports=[('sql.type_api.TypeEngine', 0, 0, 1), ('sql.sqltypes.INT', 0, 0, 1), ('sql.sqltypes.Unicode', 0, 0, 1), ('sql.sqltypes.SmallInteger', 0, 0, 1), ('sql.sqltypes.MatchType', 0, 0, 1), ('sql.type_api.adapt_type', 0, 0, 1), ('sql.sqltypes.BLOB', 0, 0, 1), ('sql.sqltypes.Text', 0, 0, 1), ('sql.type_api.Variant', 0, 0, 1), ('sql.sqltypes.SchemaType', 0, 0, 1), ('sql.sqltypes.Integer', 0, 0, 1), ('sql.sqltypes.Date', 0, 0, 1), ('sql.sqltypes.BIGINT', 0, 0, 1), ('sql.sqltypes.INTEGER', 0, 0, 1), ('sql.sqltypes.VARCHAR', 0, 0, 1), ('sql.type_api.UserDefinedType', 0, 0, 1), ('sql.sqltypes.NULLTYPE', 0, 0, 1), ('sql.sqltypes.NVARCHAR', 0, 0, 1), ('sql.sqltypes.Boolean', 0, 0, 1), ('sql.sqltypes.TIME', 0, 0, 1), ('sql.sqltypes.BINARY', 0, 0, 1), ('sql.sqltypes.UnicodeText', 0, 0, 1), ('sql.sqltypes.BOOLEAN', 0, 0, 1), ('sql.sqltypes.FLOAT', 0, 0, 1), ('sql.sqltypes._type_map', 0, 0, 1), ('sql.sqltypes.PickleType', 0, 0, 1), ('sql.sqltypes.Concatenable', 0, 0, 1), ('sql.sqltypes.NullType', 0, 0, 1), ('sql.sqltypes', 0, 0, 1), ('sql.type_api', 0, 0, 1), ('sql.sqltypes.TEXT', 0, 0, 1), ('sql.sqltypes.CHAR', 0, 0, 1), ('sql.sqltypes.STRINGTYPE', 0, 0, 1), ('sql.sqltypes.NUMERIC', 0, 0, 1), ('sql.sqltypes.LargeBinary', 0, 0, 1), ('sql.sqltypes.Enum', 0, 0, 1), ('sql.sqltypes.CLOB', 0, 0, 1), ('sql.sqltypes.REAL', 0, 0, 1), ('sql.sqltypes.Time', 0, 0, 1), ('sql.type_api.to_instance', 0, 0, 1), ('sql.sqltypes.Binary', 0, 0, 1), ('sql.sqltypes.String', 0, 0, 1), ('sql.sqltypes.SMALLINT', 0, 0, 1), ('sql.sqltypes.Interval', 0, 0, 1), ('sql.sqltypes.DATETIME', 0, 0, 1), ('sql.sqltypes.DateTime', 0, 0, 1), ('sql.sqltypes.BigInteger', 0, 0, 1), ('sql.sqltypes.NCHAR', 0, 0, 1), ('sql.sqltypes.DECIMAL', 0, 0, 1), ('sql.sqltypes.VARBINARY', 0, 0, 1), ('sql.type_api.TypeDecorator', 0, 0, 1), ('sql.sqltypes._Binary', 0, 0, 1), ('sql.sqltypes.Numeric', 0, 0, 1), ('sql.sqltypes.DATE', 0, 0, 1), ('sql.sqltypes.TIMESTAMP', 0, 0, 1), ('sql.sqltypes.Float', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.sql.modifier: None -> None
  DEL sqlalchemy.sql.modifier
sqlalchemy.sql.bindparam: None -> None
  DEL sqlalchemy.sql.bindparam
sqlalchemy.sql.alias: None -> None
  DEL sqlalchemy.sql.alias
sqlalchemy.util: None -> <PkgModule 'sqlalchemy.util' C:\Python26\lib\site-packages\sqlalchemy\util\__init__.pyc imports=[('compat.jython', 0, 0, 1), ('compat.u', 0, 0, 1), ('compat.reduce', 0, 0, 1), ('langhelpers.decode_slice', 0, 0, 1), ('compat.print_', 0, 0, 1), ('_collections.PopulateDict', 0, 0, 1), ('_collections.ImmutableContainer', 0, 0, 1), ('langhelpers.attrsetter', 0, 0, 1), ('deprecations.inject_docstring_text', 0, 0, 1), ('compat.itertools_filter', 0, 0, 1), ('compat.safe_kwarg', 0, 0, 1), ('langhelpers', 0, 0, 1), ('langhelpers.constructor_copy', 0, 0, 1), ('compat.namedtuple', 0, 0, 1), ('_collections.to_set', 0, 0, 1), ('langhelpers.MemoizedSlots', 0, 0, 1), ('langhelpers.class_hierarchy', 0, 0, 1), ('functools', 0, 0, -1), ('langhelpers.chop_traceback', 0, 0, 1), ('_collections.to_list', 0, 0, 1), ('langhelpers.warn_limited', 0, 0, 1), ('compat.quote_plus', 0, 0, 1), ('langhelpers.warn', 0, 0, 1), ('langhelpers.only_once', 0, 0, 1), ('langhelpers.get_callable_argspec', 0, 0, 1), ('compat.b64encode', 0, 0, 1), ('compat.unquote', 0, 0, 1), ('functools.update_wrapper', 0, 0, -1), ('langhelpers.md5_hex', 0, 0, 1), ('langhelpers.format_argspec_plus', 0, 0, 1), ('langhelpers.monkeypatch_proxied_specials', 0, 0, 1), ('_collections.OrderedProperties', 0, 0, 1), ('_collections.KeyedTuple', 0, 0, 1), ('_collections.coerce_generator_arg', 0, 0, 1), ('langhelpers.memoized_property', 0, 0, 1), ('langhelpers.PluginLoader', 0, 0, 1), ('compat.nested', 0, 0, 1), ('deprecations.warn_deprecated', 0, 0, 1), ('langhelpers.get_func_kwargs', 0, 0, 1), ('_collections.update_copy', 0, 0, 1), ('_collections.lightweight_named_tuple', 0, 0, 1), ('_collections.column_dict', 0, 0, 1), ('langhelpers.getargspec_init', 0, 0, 1), ('_collections.OrderedSet', 0, 0, 1), ('compat.next', 0, 0, 1), ('compat.win32', 0, 0, 1), ('langhelpers.classproperty', 0, 0, 1), ('collections.defaultdict', 0, 0, -1), ('compat.callable', 0, 0, 1), ('compat', 0, 0, 1), ('compat.raise_from_cause', 0, 0, 1), ('langhelpers.decorator', 0, 0, 1), ('deprecations.pending_deprecation', 0, 0, 1), ('langhelpers.safe_reraise', 0, 0, 1), ('langhelpers.iterate_attributes', 0, 0, 1), ('langhelpers.counter', 0, 0, 1), ('compat.int_types', 0, 0, 1), ('langhelpers.dictlike_iteritems', 0, 0, 1), ('langhelpers.coerce_kw_type', 0, 0, 1), ('deprecations', 0, 0, 1), ('langhelpers.format_argspec_init', 0, 0, 1), ('langhelpers.map_bits', 0, 0, 1), ('langhelpers.get_cls_kwargs', 0, 0, 1), ('langhelpers.bool_or_str', 0, 0, 1), ('_collections.Properties', 0, 0, 1), ('langhelpers.hybridmethod', 0, 0, 1), ('compat.zip_longest', 0, 0, 1), ('langhelpers.assert_arg_type', 0, 0, 1), ('compat.inspect_getargspec', 0, 0, 1), ('langhelpers.hybridproperty', 0, 0, 1), ('compat.text_type', 0, 0, 1), ('compat.iterbytes', 0, 0, 1), ('contextlib.contextmanager', 0, 0, -1), ('compat.unquote_plus', 0, 0, 1), ('langhelpers.generic_repr', 0, 0, 1), ('_collections.IdentitySet', 0, 0, 1), ('compat.reraise', 0, 0, 1), ('_collections.to_column_set', 0, 0, 1), ('_collections.ScopedRegistry', 0, 0, 1), ('compat.dottedgetter', 0, 0, 1), ('langhelpers.ellipses_string', 0, 0, 1), ('_collections.OrderedIdentitySet', 0, 0, 1), ('langhelpers.asint', 0, 0, 1), ('deprecations.deprecated', 0, 0, 1), ('_collections', 0, 0, 1), ('compat.binary_type', 0, 0, 1), ('compat.b', 0, 0, 1), ('_collections.populate_column_dict', 0, 0, 1), ('langhelpers.EnsureKWArgType', 0, 0, 1), ('_collections.has_intersection', 0, 0, 1), ('compat.pickle', 0, 0, 1), ('compat.ue', 0, 0, 1), ('compat.cmp', 0, 0, 1), ('compat.py3k', 0, 0, 1), ('langhelpers.as_interface', 0, 0, 1), ('_collections.immutabledict', 0, 0, 1), ('_collections.column_set', 0, 0, 1), ('langhelpers.symbol', 0, 0, 1), ('compat.parse_qsl', 0, 0, 1), ('langhelpers.unbound_method_to_callable', 0, 0, 1), ('langhelpers.methods_equivalent', 0, 0, 1), ('_collections.unique_list', 0, 0, 1), ('_collections.OrderedDict', 0, 0, 1), ('compat.pypy', 0, 0, 1), ('functools.partial', 0, 0, -1), ('collections', 0, 0, -1), ('langhelpers.portable_instancemethod', 0, 0, 1), ('langhelpers.NoneType', 0, 0, 1), ('langhelpers.set_creation_order', 0, 0, 1), ('deprecations.warn_pending_deprecation', 0, 0, 1), ('compat.byte_buffer', 0, 0, 1), ('langhelpers.duck_type_collection', 0, 0, 1), ('langhelpers.memoized_instancemethod', 0, 0, 1), ('_collections.WeakSequence', 0, 0, 1), ('_collections.LRUCache', 0, 0, 1), ('compat.threading', 0, 0, 1), ('_collections.UniqueAppender', 0, 0, 1), ('langhelpers.dependencies', 0, 0, 1), ('contextlib', 0, 0, -1), ('compat.cpython', 0, 0, 1), ('_collections.ordered_column_set', 0, 0, 1), ('_collections.EMPTY_SET', 0, 0, 1), ('compat.py2k', 0, 0, 1), ('_collections.ThreadLocalRegistry', 0, 0, 1), ('_collections.ImmutableProperties', 0, 0, 1), ('compat.string_types', 0, 0, 1), ('_collections.flatten_iterator', 0, 0, 1), ('langhelpers.group_expirable_memoized_property', 0, 0, 1), ('compat.b64decode', 0, 0, 1), ('compat.with_metaclass', 0, 0, 1), ('compat.py33', 0, 0, 1), ('langhelpers.warn_exception', 0, 0, 1), ('compat.itertools_filterfalse', 0, 0, 1), ('langhelpers.asbool', 0, 0, 1), ('compat.StringIO', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.sql.update: None -> None
  DEL sqlalchemy.sql.update
sqlalchemy.sql.not_: None -> None
  DEL sqlalchemy.sql.not_
sqlalchemy.sql.null: None -> None
  DEL sqlalchemy.sql.null
sqlalchemy.inspection: None -> <PyModule 'sqlalchemy.inspection' C:\Python26\lib\site-packages\sqlalchemy\inspection.pyc imports=[('exc', 0, 0, 1), ('', 0, 0, 1), ('util', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.sql.intersect_all: None -> None
  DEL sqlalchemy.sql.intersect_all
sqlalchemy.sql.insert: None -> None
  DEL sqlalchemy.sql.insert
sqlalchemy.sql.union_all: None -> None
  DEL sqlalchemy.sql.union_all
sqlalchemy.sql.join: None -> None
  DEL sqlalchemy.sql.join
sqlalchemy.engine: None -> <PkgModule 'sqlalchemy.engine' C:\Python26\lib\site-packages\sqlalchemy\engine\__init__.pyc imports=[('sql', 0, 0, 2), ('interfaces.Dialect', 0, 0, 1), ('result.FullyBufferedResultProxy', 0, 0, 1), ('interfaces.ExceptionContext', 0, 0, 1), ('interfaces', 0, 0, 1), ('result.ResultProxy', 0, 0, 1), ('result.BufferedColumnResultProxy', 0, 0, 1), ('base.Connection', 0, 0, 1), ('interfaces.TypeCompiler', 0, 0, 1), ('result.RowProxy', 0, 0, 1), ('result.BufferedColumnRow', 0, 0, 1), ('interfaces.Compiled', 0, 0, 1), ('base', 0, 0, 1), ('sql.ddl', 0, 0, 2), ('result', 0, 0, 1), ('', 0, 0, 1), ('interfaces.ExecutionContext', 0, 0, 1), ('interfaces.Connectable', 0, 0, 1), ('base.Engine', 0, 0, 1), ('base.Transaction', 0, 0, 1), ('base.TwoPhaseTransaction', 0, 0, 1), ('base.RootTransaction', 0, 0, 1), ('base.NestedTransaction', 0, 0, 1), ('result.BaseRowProxy', 0, 0, 1), ('strategies', 0, 0, 1), ('result.BufferedRowResultProxy', 0, 0, 1), ('util', 0, 0, 1), ('util.connection_memoize', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.engine.create_engine: None -> None
  DEL sqlalchemy.engine.create_engine
sqlalchemy.sql.cast: None -> None
  DEL sqlalchemy.sql.cast
sqlalchemy.sql.extract: None -> None
  DEL sqlalchemy.sql.extract
sqlalchemy.sql.literal_column: None -> None
  DEL sqlalchemy.sql.literal_column
sqlalchemy.sql.outparam: None -> None
  DEL sqlalchemy.sql.outparam
sqlalchemy.sql.table: None -> None
  DEL sqlalchemy.sql.table
sqlalchemy.sql.except_: None -> None
  DEL sqlalchemy.sql.except_
sqlalchemy.sql.select: None -> None
  DEL sqlalchemy.sql.select
sqlalchemy.sql.true: None -> None
  DEL sqlalchemy.sql.true
sqlalchemy.sql.funcfilter: None -> None
  DEL sqlalchemy.sql.funcfilter
sqlalchemy.sql.desc: None -> None
  DEL sqlalchemy.sql.desc
sqlalchemy.sql.over: None -> None
  DEL sqlalchemy.sql.over
sqlalchemy.sql.subquery: None -> None
  DEL sqlalchemy.sql.subquery
sqlalchemy.sql.or_: None -> None
  DEL sqlalchemy.sql.or_
sqlalchemy.sql.except_all: None -> None
  DEL sqlalchemy.sql.except_all
sqlalchemy.sql.false: None -> None
  DEL sqlalchemy.sql.false
sqlalchemy.engine.engine_from_config: None -> None
  DEL sqlalchemy.engine.engine_from_config
sqlalchemy.sql.tuple_: None -> None
  DEL sqlalchemy.sql.tuple_
sqlalchemy.sql.type_coerce: None -> None
  DEL sqlalchemy.sql.type_coerce
sqlalchemy.sql.text: None -> None
  DEL sqlalchemy.sql.text
sqlalchemy.sql.literal: None -> None
  DEL sqlalchemy.sql.literal
sqlalchemy.sql.between: None -> None
  DEL sqlalchemy.sql.between
sqlalchemy.sql.union: None -> None
  DEL sqlalchemy.sql.union
sqlalchemy.sql.collate: None -> None
  DEL sqlalchemy.sql.collate
sqlalchemy.sql.intersect: None -> None
  DEL sqlalchemy.sql.intersect
sqlalchemy.inspect: None -> None
sqlalchemy.sql.and_: None -> None
  DEL sqlalchemy.sql.and_
sqlalchemy.sql.distinct: None -> None
  DEL sqlalchemy.sql.distinct
sqlalchemy.sql.asc: None -> None
  DEL sqlalchemy.sql.asc
sqlalchemy.sql.func: None -> None
  DEL sqlalchemy.sql.func
sqlalchemy.sql.exists: None -> None
  DEL sqlalchemy.sql.exists
sqlalchemy.events: None -> <PyModule 'sqlalchemy.events' C:\Python26\lib\site-packages\sqlalchemy\events.pyc imports=[('', 0, 0, 1), ('sql.base', 0, 0, 1), ('sql.base.SchemaEventTarget', 0, 0, 1), ('exc', 0, 0, 1), ('engine.Connectable', 0, 0, 1), ('engine.Engine', 0, 0, 1), ('pool', 0, 0, 1), ('event', 0, 0, 1), ('engine', 0, 0, 1), ('engine.Dialect', 0, 0, 1), ('pool.Pool', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.sql.case: None -> None
  DEL sqlalchemy.sql.case
sqlalchemy.sql.column: None -> None
  DEL sqlalchemy.sql.column
sqlalchemy.sql.delete: None -> None
  DEL sqlalchemy.sql.delete
sqlalchemy.sql.outerjoin: None -> None
  DEL sqlalchemy.sql.outerjoin
sqlalchemy.pysqlite2: None -> None
pysqlite2: None -> None
  DEL pysqlite2
sqlalchemy.MySQLdb: None -> None
MySQLdb: None -> None
  DEL MySQLdb
sqlalchemy.psycopg2: None -> None
psycopg2: None -> None
  DEL psycopg2
sqlalchemy.sqlalchemy: None -> None
sqlalchemy.databases: None -> <PkgModule 'sqlalchemy.databases' C:\Python26\lib\site-packages\sqlalchemy\databases\__init__.pyc imports=[('dialects.sybase.base', 0, 0, 2), ('dialects.oracle.base', 0, 0, 2), ('dialects.sqlite', 0, 0, 2), ('dialects.mssql.base', 0, 0, 2), ('dialects.firebird', 0, 0, 2), ('dialects.mysql', 0, 0, 2), ('dialects.mysql.base', 0, 0, 2), ('dialects.sqlite.base', 0, 0, 2), ('dialects.sybase', 0, 0, 2), ('dialects.postgresql', 0, 0, 2), ('dialects.postgresql.base', 0, 0, 2), ('dialects.mssql', 0, 0, 2), ('dialects.firebird.base', 0, 0, 2), ('dialects.oracle', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.databases.firebird: None -> None
  DEL sqlalchemy.databases.firebird
sqlalchemy.databases.mssql: None -> None
  DEL sqlalchemy.databases.mssql
sqlalchemy.databases.mysql: None -> None
  DEL sqlalchemy.databases.mysql
sqlalchemy.databases.postgresql: None -> None
  DEL sqlalchemy.databases.postgresql
sqlalchemy.databases.sqlite: None -> None
  DEL sqlalchemy.databases.sqlite
sqlalchemy.databases.oracle: None -> None
  DEL sqlalchemy.databases.oracle
sqlalchemy.databases.sybase: None -> None
  DEL sqlalchemy.databases.sybase
sqlalchemy.dialects: None -> <PkgModule 'sqlalchemy.dialects' C:\Python26\lib\site-packages\sqlalchemy\dialects\__init__.pyc imports=[('', 0, 0, 2), ('util', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.dialects.firebird: None -> <PkgModule 'sqlalchemy.dialects.firebird' C:\Python26\lib\site-packages\sqlalchemy\dialects\firebird\__init__.pyc imports=[('sqlalchemy.dialects.firebird.base.FLOAT', 0, 0, -1), ('sqlalchemy.dialects.firebird.kinterbasdb', 0, 0, -1), ('sqlalchemy.dialects.firebird.fdb', 0, 0, -1), ('sqlalchemy.dialects.firebird.base.VARCHAR', 0, 0, -1), ('sqlalchemy.dialects.firebird.base.dialect', 0, 0, -1), ('sqlalchemy.dialects.firebird.base.TIME', 0, 0, -1), ('sqlalchemy.dialects.firebird.base.TEXT', 0, 0, -1), ('sqlalchemy.dialects.firebird.base', 0, 0, -1), ('sqlalchemy.dialects.firebird.base.BIGINT', 0, 0, -1), ('sqlalchemy.dialects.firebird.base.TIMESTAMP', 0, 0, -1), ('sqlalchemy.dialects.firebird.base.SMALLINT', 0, 0, -1), ('sqlalchemy.dialects.firebird', 0, 0, -1), ('sqlalchemy.dialects.firebird.base.BLOB', 0, 0, -1), ('sqlalchemy.dialects.firebird.base.NUMERIC', 0, 0, -1), ('sqlalchemy.dialects.firebird.base.CHAR', 0, 0, -1), ('sqlalchemy.dialects.firebird.base.DATE', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.dialects.mssql: None -> <PkgModule 'sqlalchemy.dialects.mssql' C:\Python26\lib\site-packages\sqlalchemy\dialects\mssql\__init__.pyc imports=[('sqlalchemy.dialects.mssql.base.SMALLMONEY', 0, 0, -1), ('sqlalchemy.dialects.mssql.adodbapi', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.DATE', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.VARCHAR', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.BIGINT', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.TIMESTAMP', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.DATETIME2', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.SQL_VARIANT', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.MONEY', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.CHAR', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.IMAGE', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.INTEGER', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.DECIMAL', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.SMALLDATETIME', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.UNIQUEIDENTIFIER', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.NUMERIC', 0, 0, -1), ('sqlalchemy.dialects.mssql.pymssql', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.DATETIME', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.DATETIMEOFFSET', 0, 0, -1), ('sqlalchemy.dialects.mssql.base', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.REAL', 0, 0, -1), ('sqlalchemy.dialects.mssql', 0, 0, -1), ('sqlalchemy.dialects.mssql.pyodbc', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.NTEXT', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.TIME', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.NVARCHAR', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.TEXT', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.TINYINT', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.VARBINARY', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.dialect', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.BINARY', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.SMALLINT', 0, 0, -1), ('sqlalchemy.dialects.mssql.zxjdbc', 0, 0, -1), ('sqlalchemy.dialects.mssql.mxodbc', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.NCHAR', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.FLOAT', 0, 0, -1), ('sqlalchemy.dialects.mssql.base.BIT', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.dialects.mysql: None -> <PkgModule 'sqlalchemy.dialects.mysql' C:\Python26\lib\site-packages\sqlalchemy\dialects\mysql\__init__.pyc imports=[('base.YEAR', 0, 0, 1), ('base.BLOB', 0, 0, 1), ('base.TINYTEXT', 0, 0, 1), ('base.MEDIUMINT', 0, 0, 1), ('zxjdbc', 0, 0, 1), ('base.CHAR', 0, 0, 1), ('gaerdbms', 0, 0, 1), ('base.DOUBLE', 0, 0, 1), ('base.SET', 0, 0, 1), ('base.NUMERIC', 0, 0, 1), ('base.BINARY', 0, 0, 1), ('pymysql', 0, 0, 1), ('base.TINYBLOB', 0, 0, 1), ('base.TINYINT', 0, 0, 1), ('base.LONGBLOB', 0, 0, 1), ('base.SMALLINT', 0, 0, 1), ('base.ENUM', 0, 0, 1), ('base.dialect', 0, 0, 1), ('base.MEDIUMBLOB', 0, 0, 1), ('base', 0, 0, 1), ('base.DATE', 0, 0, 1), ('base.BOOLEAN', 0, 0, 1), ('base.DECIMAL', 0, 0, 1), ('', 0, 0, 1), ('base.TIMESTAMP', 0, 0, 1), ('cymysql', 0, 0, 1), ('oursql', 0, 0, 1), ('base.REAL', 0, 0, 1), ('base.DATETIME', 0, 0, 1), ('mysqlconnector', 0, 0, 1), ('base.TEXT', 0, 0, 1), ('base.BIGINT', 0, 0, 1), ('base.LONGTEXT', 0, 0, 1), ('base.VARBINARY', 0, 0, 1), ('base.NCHAR', 0, 0, 1), ('base.TIME', 0, 0, 1), ('base.NVARCHAR', 0, 0, 1), ('base.VARCHAR', 0, 0, 1), ('base.INTEGER', 0, 0, 1), ('base.FLOAT', 0, 0, 1), ('base.BIT', 0, 0, 1), ('pyodbc', 0, 0, 1), ('base.MEDIUMTEXT', 0, 0, 1), ('mysqldb', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.postgresql: None -> <PkgModule 'sqlalchemy.dialects.postgresql' C:\Python26\lib\site-packages\sqlalchemy\dialects\postgresql\__init__.pyc imports=[('ranges.INT4RANGE', 0, 0, 1), ('base.DOUBLE_PRECISION', 0, 0, 1), ('json.JSON', 0, 0, 1), ('ranges.TSTZRANGE', 0, 0, 1), ('ranges.TSRANGE', 0, 0, 1), ('base.INTEGER', 0, 0, 1), ('base.CHAR', 0, 0, 1), ('psycopg2cffi', 0, 0, 1), ('base.Any', 0, 0, 1), ('hstore.hstore', 0, 0, 1), ('constraints.ExcludeConstraint', 0, 0, 1), ('base.array', 0, 0, 1), ('pypostgresql', 0, 0, 1), ('base.NUMERIC', 0, 0, 1), ('constraints', 0, 0, 1), ('ranges.INT8RANGE', 0, 0, 1), ('pg8000', 0, 0, 1), ('base.TSVECTOR', 0, 0, 1), ('base.SMALLINT', 0, 0, 1), ('base.ENUM', 0, 0, 1), ('base.dialect', 0, 0, 1), ('json', 0, 0, 1), ('base.ARRAY', 0, 0, 1), ('base', 0, 0, 1), ('base.DATE', 0, 0, 1), ('base.BOOLEAN', 0, 0, 1), ('base.INET', 0, 0, 1), ('json.JSONElement', 0, 0, 1), ('psycopg2', 0, 0, 1), ('base.DropEnumType', 0, 0, 1), ('base.All', 0, 0, 1), ('', 0, 0, 1), ('base.TIMESTAMP', 0, 0, 1), ('base.OID', 0, 0, 1), ('ranges.DATERANGE', 0, 0, 1), ('base.REAL', 0, 0, 1), ('ranges.NUMRANGE', 0, 0, 1), ('hstore.HSTORE', 0, 0, 1), ('base.BYTEA', 0, 0, 1), ('base.TEXT', 0, 0, 1), ('base.BIGINT', 0, 0, 1), ('hstore', 0, 0, 1), ('json.JSONB', 0, 0, 1), ('base.CIDR', 0, 0, 1), ('base.TIME', 0, 0, 1), ('base.VARCHAR', 0, 0, 1), ('zxjdbc', 0, 0, 1), ('base.FLOAT', 0, 0, 1), ('base.BIT', 0, 0, 1), ('base.UUID', 0, 0, 1), ('ranges', 0, 0, 1), ('base.MACADDR', 0, 0, 1), ('base.INTERVAL', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.sqlite: None -> <PkgModule 'sqlalchemy.dialects.sqlite' C:\Python26\lib\site-packages\sqlalchemy\dialects\sqlite\__init__.pyc imports=[('sqlalchemy.dialects.sqlite.base.NUMERIC', 0, 0, -1), ('sqlalchemy.dialects.sqlite', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.VARCHAR', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.dialect', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.INTEGER', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.TIME', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.CHAR', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base', 0, 0, -1), ('sqlalchemy.dialects.sqlite.pysqlite', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.SMALLINT', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.TEXT', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.TIMESTAMP', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.BOOLEAN', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.DATE', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.DATETIME', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.REAL', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.FLOAT', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.DECIMAL', 0, 0, -1), ('sqlalchemy.dialects.sqlite.pysqlcipher', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.BLOB', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.dialects.oracle: None -> <PkgModule 'sqlalchemy.dialects.oracle' C:\Python26\lib\site-packages\sqlalchemy\dialects\oracle\__init__.pyc imports=[('sqlalchemy.dialects.oracle.base.NVARCHAR2', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.BFILE', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.FLOAT', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.VARCHAR2', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.LONG', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.NCLOB', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.CLOB', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.NVARCHAR', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.INTERVAL', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.BLOB', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.VARCHAR', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.TIMESTAMP', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.DOUBLE_PRECISION', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.DATE', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.CHAR', 0, 0, -1), ('sqlalchemy.dialects.oracle.zxjdbc', 0, 0, -1), ('sqlalchemy.dialects.oracle.cx_oracle', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.NUMBER', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.ROWID', 0, 0, -1), ('sqlalchemy.dialects.oracle', 0, 0, -1), ('sqlalchemy.dialects.oracle.base', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.dialect', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.RAW', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.dialects.sybase: None -> <PkgModule 'sqlalchemy.dialects.sybase' C:\Python26\lib\site-packages\sqlalchemy\dialects\sybase\__init__.pyc imports=[('base.INTEGER', 0, 0, 1), ('base.CHAR', 0, 0, 1), ('base.UNICHAR', 0, 0, 1), ('base.INT', 0, 0, 1), ('sqlalchemy.dialects.sybase.pysybase', 0, 0, -1), ('base.NUMERIC', 0, 0, 1), ('base.BINARY', 0, 0, 1), ('base.TINYINT', 0, 0, 1), ('base.SMALLMONEY', 0, 0, 1), ('base.SMALLINT', 0, 0, 1), ('base.dialect', 0, 0, 1), ('base', 0, 0, 1), ('base.DATE', 0, 0, 1), ('base.IMAGE', 0, 0, 1), ('base.DATETIME', 0, 0, 1), ('base.UNITEXT', 0, 0, 1), ('base.TEXT', 0, 0, 1), ('base.BIGINT', 0, 0, 1), ('base.VARBINARY', 0, 0, 1), ('sqlalchemy.dialects.sybase', 0, 0, -1), ('base.MONEY', 0, 0, 1), ('base.NCHAR', 0, 0, 1), ('base.TIME', 0, 0, 1), ('sqlalchemy.dialects.sybase.base', 0, 0, -1), ('base.NVARCHAR', 0, 0, 1), ('base.VARCHAR', 0, 0, 1), ('base.FLOAT', 0, 0, 1), ('base.BIT', 0, 0, 1), ('sqlalchemy.dialects.sybase.pyodbc', 0, 0, -1), ('base.UNIVARCHAR', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.sql.type_api: None -> <PyModule 'sqlalchemy.sql.type_api' C:\Python26\lib\site-packages\sqlalchemy\sql\type_api.pyc imports=[('', 0, 0, 2), ('operators', 0, 0, 1), ('', 0, 0, 1), ('visitors.Visitable', 0, 0, 1), ('visitors.VisitableType', 0, 0, 1), ('util', 0, 0, 2), ('exc', 0, 0, 2), ('visitors', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.sql.sqltypes: None -> <PyModule 'sqlalchemy.sql.sqltypes' C:\Python26\lib\site-packages\sqlalchemy\sql\sqltypes.pyc imports=[('util.pickle', 0, 0, 2), ('type_api.to_instance', 0, 0, 1), ('base.SchemaEventTarget', 0, 0, 1), ('elements._defer_name', 0, 0, 1), ('decimal', 0, 0, -1), ('codecs', 0, 0, -1), ('elements.type_coerce', 0, 0, 1), ('operators', 0, 0, 1), ('processors', 0, 0, 2), ('base', 0, 0, 1), ('event', 0, 0, 2), ('', 0, 0, 2), ('', 0, 0, 1), ('elements.quoted_name', 0, 0, 1), ('elements', 0, 0, 1), ('util', 0, 0, 2), ('datetime', 0, 0, -1), ('type_api', 0, 0, 1), ('base._bind_or_error', 0, 0, 1), ('type_api.TypeDecorator', 0, 0, 1), ('type_api.TypeEngine', 0, 0, 1), ('exc', 0, 0, 2), ('array', 0, 1, -1)] binaries=[] datas=[]>
sqlalchemy.sql.elements: None -> <PyModule 'sqlalchemy.sql.elements' C:\Python26\lib\site-packages\sqlalchemy\sql\elements.pyc imports=[('base._generative', 0, 0, 1), ('__future__.unicode_literals', 0, 0, -1), ('__future__', 0, 0, -1), ('annotation.Annotated', 0, 0, 1), ('base.Executable', 0, 0, 1), ('visitors', 0, 0, 1), ('', 0, 0, 2), ('itertools', 0, 0, -1), ('operators', 0, 0, 1), ('base.Immutable', 0, 0, 1), ('visitors.cloned_traverse', 0, 0, 1), ('base', 0, 0, 1), ('base.NO_ARG', 0, 0, 1), ('', 0, 0, 1), ('util', 0, 0, 2), ('visitors.traverse', 0, 0, 1), ('annotation', 0, 0, 1), ('exc', 0, 0, 2), ('base.PARSE_AUTOCOMMIT', 0, 0, 1), ('type_api', 0, 0, 1), ('re', 0, 0, -1), ('operator', 0, 0, -1), ('inspection', 0, 0, 2), ('visitors.Visitable', 0, 0, 1), ('numbers', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.sql.naming: None -> <PyModule 'sqlalchemy.sql.naming' C:\Python26\lib\site-packages\sqlalchemy\sql\naming.pyc imports=[('elements._defer_none_name', 0, 0, 1), ('', 0, 0, 2), ('event', 0, 0, 2), ('schema.CheckConstraint', 0, 0, 1), ('schema.Index', 0, 0, 1), ('schema.Constraint', 0, 0, 1), ('events', 0, 0, 2), ('elements', 0, 0, 1), ('elements._truncated_label', 0, 0, 1), ('elements.conv', 0, 0, 1), ('schema.Table', 0, 0, 1), ('schema.ForeignKeyConstraint', 0, 0, 1), ('elements._defer_name', 0, 0, 1), ('schema.UniqueConstraint', 0, 0, 1), ('exc', 0, 0, 2), ('schema', 0, 0, 1), ('schema.Column', 0, 0, 1), ('re', 0, 0, -1), ('schema.PrimaryKeyConstraint', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.sql.selectable: None -> <PyModule 'sqlalchemy.sql.selectable' C:\Python26\lib\site-packages\sqlalchemy\sql\selectable.pyc imports=[('elements.UnaryExpression', 0, 0, 1), ('elements._clause_element_as_expr', 0, 0, 1), ('elements.and_', 0, 0, 1), ('operator', 0, 0, -1), ('annotation.Annotated', 0, 0, 1), ('elements._anonymous_label', 0, 0, 1), ('elements._literal_as_text', 0, 0, 1), ('elements._cloned_intersection', 0, 0, 1), ('elements.ClauseList', 0, 0, 1), ('elements._literal_and_labels_as_label_reference', 0, 0, 1), ('', 0, 0, 2), ('itertools', 0, 0, -1), ('operators', 0, 0, 1), ('base.Executable', 0, 0, 1), ('elements._interpret_as_column_or_from', 0, 0, 1), ('elements.Grouping', 0, 0, 1), ('elements.ClauseElement', 0, 0, 1), ('base.Immutable', 0, 0, 1), ('base', 0, 0, 1), ('collections', 0, 0, -1), ('base._generative', 0, 0, 1), ('elements.TextClause', 0, 0, 1), ('elements.True_', 0, 0, 1), ('sqlalchemy.sql.visitors.Visitable', 0, 0, -1), ('elements.BindParameter', 0, 0, 1), ('', 0, 0, 1), ('base.ColumnCollection', 0, 0, 1), ('elements', 0, 0, 1), ('elements.literal_column', 0, 0, 1), ('util', 0, 0, 2), ('annotation', 0, 0, 1), ('exc', 0, 0, 2), ('elements._cloned_difference', 0, 0, 1), ('type_api', 0, 0, 1), ('elements._literal_as_label_reference', 0, 0, 1), ('elements._clone', 0, 0, 1), ('operator.attrgetter', 0, 0, -1), ('inspection', 0, 0, 2), ('sqlalchemy.sql.visitors', 0, 0, -1), ('base.Generative', 0, 0, 1), ('elements._expand_cloned', 0, 0, 1), ('base._from_objects', 0, 0, 1), ('base.ColumnSet', 0, 0, 1), ('elements._select_iterables', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.sql.visitors: None -> <PyModule 'sqlalchemy.sql.visitors' C:\Python26\lib\site-packages\sqlalchemy\sql\visitors.pyc imports=[('collections', 0, 0, -1), ('', 0, 0, 2), ('collections.deque', 0, 0, -1), ('operator', 0, 0, -1), ('util', 0, 0, 2), ('exc', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.sql.inspect: None -> None
sqlalchemy.sql.annotation: None -> <PyModule 'sqlalchemy.sql.annotation' C:\Python26\lib\site-packages\sqlalchemy\sql\annotation.pyc imports=[('', 0, 0, 2), ('', 0, 0, 1), ('operators', 0, 0, 1), ('util', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.sql.base: None -> <PyModule 'sqlalchemy.sql.base' C:\Python26\lib\site-packages\sqlalchemy\sql\base.pyc imports=[('', 0, 0, 2), ('re', 0, 0, -1), ('itertools', 0, 0, -1), ('collections', 0, 0, -1), ('visitors.ClauseVisitor', 0, 0, 1), ('util', 0, 0, 2), ('exc', 0, 0, 2), ('visitors', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.sql.__future__: None -> None
sqlalchemy.sql.itertools: None -> None
sqlalchemy.sql.operators: None -> <PyModule 'sqlalchemy.sql.operators' C:\Python26\lib\site-packages\sqlalchemy\sql\operators.pyc imports=[('operator.sub', 0, 0, -1), ('operator.neg', 0, 0, -1), ('operator.getitem', 0, 0, -1), ('operator.div', 0, 1, -1), ('operator', 0, 1, -1), ('', 0, 0, 2), ('operator.ne', 0, 0, -1), ('operator.mul', 0, 0, -1), ('operator.and_', 0, 0, -1), ('operator.rshift', 0, 0, -1), ('operator.lshift', 0, 0, -1), ('operator.lt', 0, 0, -1), ('operator.or_', 0, 0, -1), ('operator.ge', 0, 0, -1), ('operator.eq', 0, 0, -1), ('util', 0, 0, 2), ('operator.le', 0, 0, -1), ('operator.add', 0, 0, -1), ('operator.gt', 0, 0, -1), ('operator.mod', 0, 0, -1), ('operator.inv', 0, 0, -1), ('operator.truediv', 0, 0, -1), ('operator', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.exc: None -> <PyModule 'sqlalchemy.exc' C:\Python26\lib\site-packages\sqlalchemy\exc.pyc imports=[('sqlalchemy.sql.util', 1, 0, -1), ('sqlalchemy.sql', 1, 0, -1)] binaries=[] datas=[]>
sqlalchemy.sql.re: None -> None
sqlalchemy.sql.operator: None -> None
sqlalchemy.sql.numbers: None -> None
sqlalchemy.sql.collections: None -> None
sqlalchemy.util.compat: None -> <PyModule 'sqlalchemy.util.compat' C:\Python26\lib\site-packages\sqlalchemy\util\compat.pyc imports=[('base64', 0, 1, -1), ('io.BytesIO', 0, 1, -1), ('contextlib.contextmanager', 0, 0, -1), ('io.StringIO', 0, 1, -1), ('StringIO.StringIO', 0, 1, -1), ('urllib.quote_plus', 0, 1, -1), ('urllib.parse.unquote', 0, 1, -1), ('contextlib.nested', 0, 0, -1), ('itertools.izip_longest', 0, 1, -1), ('time', 0, 0, -1), ('dummy_threading', 0, 1, -1), ('contextlib', 0, 0, -1), ('threading', 0, 0, -1), ('sys', 0, 0, -1), ('cPickle', 0, 1, -1), ('urllib.parse.quote_plus', 0, 1, -1), ('configparser', 0, 1, -1), ('io', 0, 1, -1), ('functools.reduce', 0, 1, -1), ('urlparse.parse_qsl', 0, 1, -1), ('urllib.parse.quote', 0, 1, -1), ('urllib.parse.parse_qsl', 0, 1, -1), ('pickle', 0, 1, -1), ('collections', 0, 0, -1), ('cStringIO.StringIO', 0, 1, -1), ('urllib', 0, 1, -1), ('urllib.quote', 0, 1, -1), ('itertools', 0, 1, -1), ('StringIO', 0, 1, -1), ('collections.namedtuple', 0, 0, -1), ('inspect', 0, 1, -1), ('urllib.parse.unquote_plus', 0, 1, -1), ('inspect.getargspec', 0, 1, -1), ('builtins', 0, 1, -1), ('urllib.parse', 0, 1, -1), ('inspect.getfullargspec', 0, 1, -1), ('urllib.unquote', 0, 1, -1), ('itertools.zip_longest', 0, 1, -1), ('operator', 0, 0, -1), ('functools', 0, 1, -1), ('ConfigParser', 0, 1, -1), ('urlparse', 0, 1, -1), ('urllib.unquote_plus', 0, 1, -1), ('operator.attrgetter', 0, 0, -1), ('cStringIO', 0, 1, -1)] binaries=[] datas=[]>
sqlalchemy.util.langhelpers: None -> <PyModule 'sqlalchemy.util.langhelpers' C:\Python26\lib\site-packages\sqlalchemy\util\langhelpers.pyc imports=[('', 0, 0, 2), ('re', 0, 0, -1), ('itertools', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('pkg_resources', 1, 0, -1), ('', 0, 0, 1), ('warnings', 0, 0, -1), ('operator', 0, 0, -1), ('inspect.CO_VARKEYWORDS', 0, 0, -1), ('_collections', 0, 0, 1), ('hashlib', 0, 0, -1), ('inspect', 0, 0, -1), ('exc', 0, 0, 2), ('functools', 0, 0, -1), ('compat', 0, 0, 1), ('functools.update_wrapper', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.util._collections: None -> <PyModule 'sqlalchemy.util._collections' C:\Python26\lib\site-packages\sqlalchemy\util\_collections.pyc imports=[('types', 0, 0, 0), ('weakref', 0, 0, 0), ('__future__', 0, 0, 0), ('collections', 0, 0, 0), ('compat', 0, 0, 1), ('__future__.absolute_import', 0, 0, 0), ('compat.threading', 0, 0, 1), ('compat.string_types', 0, 0, 1), ('compat.itertools_filterfalse', 0, 0, 1), ('operator', 0, 0, 0), ('', 0, 0, 1), ('py2k', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.util.deprecations: None -> <PyModule 'sqlalchemy.util.deprecations' C:\Python26\lib\site-packages\sqlalchemy\util\deprecations.pyc imports=[('', 0, 0, 2), ('re', 0, 0, -1), ('langhelpers', 0, 0, 1), ('warnings', 0, 0, -1), ('textwrap', 0, 0, -1), ('langhelpers.decorator', 0, 0, 1), ('exc', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.util.functools: None -> None
sqlalchemy.util.collections: None -> None
sqlalchemy.util.contextlib: None -> None
contextlib: None -> <PyModule 'contextlib' C:\Python26\lib\contextlib.pyc imports=[('functools.wraps', 0, 0, -1), ('functools', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.util.base64: None -> None
sqlalchemy.util.io: None -> None
sqlalchemy.util.StringIO: None -> None
sqlalchemy.util.urllib: None -> None
sqlalchemy.util.itertools: None -> None
sqlalchemy.util.time: None -> None
sqlalchemy.util.dummy_threading: None -> None
sqlalchemy.util.threading: None -> None
sqlalchemy.util.sys: None -> None
sqlalchemy.util.cPickle: None -> None
sqlalchemy.util.configparser: None -> None
configparser: None -> None
  DEL configparser
sqlalchemy.util.urlparse: None -> None
sqlalchemy.util.pickle: None -> None
sqlalchemy.util.cStringIO: None -> None
sqlalchemy.util.inspect: None -> None
sqlalchemy.util.builtins: None -> None
builtins: None -> None
  DEL builtins
sqlalchemy.util.operator: None -> None
sqlalchemy.util.ConfigParser: None -> None
ConfigParser: None -> <PyModule 'ConfigParser' C:\Python26\lib\ConfigParser.pyc imports=[('re', 0, 0, -1)] binaries=[] datas=[]>
_scproxy: None -> None
  DEL _scproxy
_scproxy: None -> None
  DEL _scproxy
rourl2path: None -> None
  DEL rourl2path
rourl2path: None -> None
  DEL rourl2path
rourl2path: None -> None
  DEL rourl2path
_scproxy: None -> None
  DEL _scproxy
cl: None -> None
  DEL cl
cl: None -> None
  DEL cl
SOCKS: None -> None
  DEL SOCKS
EasyDialogs: None -> None
  DEL EasyDialogs
EasyDialogs: None -> None
  DEL EasyDialogs
pwd: None -> None
  DEL pwd
termios: None -> None
  DEL termios
sqlalchemy.util.re: None -> None
sqlalchemy.util.types: None -> None
sqlalchemy.util.pkg_resources: None -> None
pkg_resources: None -> <PkgModule 'pkg_resources' C:\Python26\lib\site-packages\pkg_resources\__init__.pyc imports=[('urllib.parse.urlparse', 0, 1, 0), ('types', 0, 0, 0), ('linecache.cache', 1, 1, 0), ('os.open', 0, 0, 0), ('collections', 0, 0, 0), ('os.path', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('functools', 0, 0, 0), ('email.parser', 0, 0, 0), ('os.mkdir', 0, 0, 0), ('re', 0, 0, 0), ('os.path.split', 0, 0, 0), ('os.rename', 0, 0, 0), ('imp', 0, 1, 0), ('os.unlink', 0, 0, 0), ('os.path.isdir', 0, 0, 0), ('packaging.version', 0, 1, 0), ('sys', 0, 0, 0), ('token', 0, 0, 0), ('zipimport', 0, 0, 0), ('pkg_resources._vendor.packaging.specifiers', 0, 0, 0), ('packaging.specifiers', 0, 1, 0), ('os.utime', 0, 0, 0), ('urlparse.urlunparse', 0, 1, 0), ('distutils.util.get_platform', 1, 1, 0), ('time', 0, 0, 0), ('_imp', 0, 0, 0), ('sysconfig', 1, 0, 0), ('os', 0, 0, 0), ('textwrap', 0, 0, 0), ('io', 0, 0, 0), ('pkgutil.get_importer', 0, 0, 0), ('tempfile', 0, 0, 0), ('distutils.util', 1, 1, 0), ('symbol', 0, 0, 0), ('sysconfig.get_platform', 1, 0, 0), ('urlparse.urlparse', 0, 1, 0), ('stat', 0, 0, 0), ('operator', 0, 0, 0), ('importlib.machinery', 0, 1, 0), ('parser', 0, 0, 0), ('pkg_resources._vendor.packaging.version', 0, 0, 0), ('urllib.parse', 0, 1, 0), ('_markerlib', 1, 0, 0), ('__future__', 0, 0, 0), ('urllib.parse.urlunparse', 0, 1, 0), ('pkgutil', 0, 0, 0), ('warnings', 0, 0, 0), ('zipfile', 0, 0, 0), ('plistlib', 0, 0, 0), ('linecache', 1, 1, 0), ('_markerlib.compile', 1, 0, 0), ('platform', 0, 0, 0), ('__main__', 1, 0, 0), ('__main__.__requires__', 1, 0, 0), ('urlparse', 0, 1, 0)] binaries=[] datas=[]>
sqlalchemy.util.warnings: None -> None
sqlalchemy.util.hashlib: None -> None
packaging: None -> None
  DEL packaging
pkg_resources._vendor: None -> <PkgModule 'pkg_resources._vendor' C:\Python26\lib\site-packages\pkg_resources\_vendor\__init__.pyc imports=[] binaries=[] datas=[]>
pkg_resources._vendor.packaging: None -> <PkgModule 'pkg_resources._vendor.packaging' C:\Python26\lib\site-packages\pkg_resources\_vendor\packaging\__init__.pyc imports=[('__about__', 0, 0, 1), ('__about__.__version__', 0, 0, 1), ('__future__.print_function', 0, 0, 0), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('__about__.__author__', 0, 0, 1), ('__about__.__summary__', 0, 0, 1), ('__future__.absolute_import', 0, 0, 0), ('__about__.__email__', 0, 0, 1), ('__about__.__title__', 0, 0, 1), ('__about__.__uri__', 0, 0, 1), ('__about__.__copyright__', 0, 0, 1), ('__about__.__license__', 0, 0, 1)] binaries=[] datas=[]>
pkg_resources._vendor.packaging.specifiers: None -> <PyModule 'pkg_resources._vendor.packaging.specifiers' C:\Python26\lib\site-packages\pkg_resources\_vendor\packaging\specifiers.pyc imports=[('version.LegacyVersion', 0, 0, 1), ('__future__.print_function', 0, 0, 0), ('_compat', 0, 0, 1), ('__future__', 0, 0, 0), ('__future__.division', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('abc', 0, 0, 0), ('functools', 0, 0, 0), ('version.Version', 0, 0, 1), ('re', 0, 0, 0), ('_compat.string_types', 0, 0, 1), ('_compat.with_metaclass', 0, 0, 1), ('version.parse', 0, 0, 1), ('version', 0, 0, 1), ('itertools', 0, 0, 0)] binaries=[] datas=[]>
packaging: None -> None
  DEL packaging
distutils: None -> <PkgModule 'distutils' C:\Python26\lib\distutils\__init__.pyc imports=[] binaries=[] datas=[('include\\pyconfig.h', 'C:\\Python26\\include\\pyconfig.h', 'DATA')]>
distutils.util: None -> <PyModule 'distutils.util' C:\Python26\lib\distutils\util.pyc imports=[('distutils.spawn', 0, 0, -1), ('re', 0, 0, -1), ('pwd', 1, 1, -1), ('tempfile.mkstemp', 1, 1, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('distutils.spawn.spawn', 0, 0, -1), ('tempfile', 1, 1, -1), ('distutils.errors.DistutilsByteCompileError', 0, 0, -1), ('string', 0, 0, -1), ('distutils', 0, 0, -1), ('distutils.dep_util', 0, 0, -1), ('distutils.errors.DistutilsPlatformError', 0, 0, -1), ('py_compile.compile', 1, 1, -1), ('distutils.errors', 0, 0, -1), ('distutils.sysconfig.get_config_vars', 1, 1, -1), ('tempfile.mktemp', 1, 1, -1), ('py_compile', 1, 1, -1), ('distutils.log', 0, 0, -1), ('distutils.sysconfig', 1, 1, -1), ('distutils.dep_util.newer', 0, 0, -1)] binaries=[] datas=[]>
_imp: None -> None
  DEL _imp
sysconfig: None -> None
  DEL sysconfig
symbol: None -> <PyModule 'symbol' C:\Python26\lib\symbol.pyc imports=[('sys', 1, 0, -1), ('token', 1, 0, -1)] binaries=[] datas=[]>
sysconfig: None -> None
  DEL sysconfig
importlib: None -> None
  DEL importlib
parser: None -> <BuiltinModule 'parser' None imports=[('copy_reg', 0, 0, -1)] binaries=[] datas=[]>
pkg_resources._vendor.packaging.version: None -> <PyModule 'pkg_resources._vendor.packaging.version' C:\Python26\lib\site-packages\pkg_resources\_vendor\packaging\version.pyc imports=[('__future__.print_function', 0, 0, 0), ('itertools', 0, 0, 0), ('__future__.division', 0, 0, 0), ('collections', 0, 0, 0), ('_structures.Infinity', 0, 0, 1), ('__future__.absolute_import', 0, 0, 0), ('_structures', 0, 0, 1), ('__future__', 0, 0, 0), ('re', 0, 0, 0)] binaries=[] datas=[]>
_markerlib: None -> <PkgModule '_markerlib' C:\Python26\lib\site-packages\_markerlib\__init__.pyc imports=[('_markerlib.markers', 0, 0, -1), ('_markerlib.markers.interpret', 0, 0, -1), ('ast', 0, 0, -1), ('_markerlib.markers.default_environment', 0, 0, -1), ('_markerlib.markers.compile', 0, 0, -1)] binaries=[] datas=[]>
zipfile: None -> <PyModule 'zipfile' C:\Python26\lib\zipfile.pyc imports=[('textwrap', 1, 0, -1), ('sys', 0, 0, -1), ('shutil', 0, 0, -1), ('os', 0, 0, -1), ('struct', 0, 0, -1), ('cStringIO', 0, 0, -1), ('stat', 0, 0, -1), ('zlib', 0, 0, -1), ('binascii', 0, 0, -1), ('py_compile', 1, 1, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
plistlib: None -> <PyModule 'plistlib' C:\Python26\lib\plistlib.pyc imports=[('Carbon.Files.fsRdWrPerm', 1, 0, -1), ('re', 0, 0, -1), ('xml.parsers.expat', 1, 0, -1), ('warnings', 1, 0, -1), ('Carbon.File.FSRef', 1, 0, -1), ('Carbon.File.FSGetResourceForkName', 1, 0, -1), ('Carbon.Files.fsRdPerm', 1, 0, -1), ('Carbon.Res', 1, 0, -1), ('warnings', 0, 0, -1), ('warnings.warn', 1, 0, -1), ('Carbon.Files', 1, 0, -1), ('cStringIO', 0, 0, -1), ('datetime', 0, 0, -1), ('xml.parsers.expat.ParserCreate', 1, 0, -1), ('Carbon', 1, 0, -1), ('cStringIO.StringIO', 0, 0, -1), ('binascii', 0, 0, -1), ('Carbon.File', 1, 0, -1)] binaries=[] datas=[]>
_markerlib.compile: None -> None
  DEL _markerlib.compile
platform: None -> <PyModule 'platform' C:\Python26\lib\platform.pyc imports=[('gestalt.gestalt', 1, 0, -1), ('java.lang', 1, 0, -1), ('MacOS', 1, 0, -1), ('os', 0, 0, -1), ('win32api.GetVersionEx', 1, 0, -1), ('win32con.HKEY_LOCAL_MACHINE', 1, 0, -1), ('gestalt', 1, 0, -1), ('java.lang.System', 1, 0, -1), ('sys', 0, 0, -1), ('string', 0, 0, -1), ('plistlib', 1, 0, -1), ('win32con.VER_PLATFORM_WIN32_NT', 1, 0, -1), ('_winreg', 1, 1, -1), ('win32api.RegOpenKeyEx', 1, 0, -1), ('vms_lib', 1, 1, -1), ('tempfile', 1, 0, -1), ('win32api.RegCloseKey', 1, 0, -1), ('re', 0, 0, -1), ('win32con.VER_PLATFORM_WIN32_WINDOWS', 1, 0, -1), ('win32con', 1, 0, -1), ('win32pipe', 1, 1, -1), ('struct', 1, 1, -1), ('win32api', 1, 0, -1), ('socket', 1, 0, -1), ('win32con.VER_NT_WORKSTATION', 1, 0, -1), ('win32api.RegQueryValueEx', 1, 0, -1)] binaries=[] datas=[]>
pkg_resources._vendor.packaging.__about__: None -> <PyModule 'pkg_resources._vendor.packaging.__about__' C:\Python26\lib\site-packages\pkg_resources\_vendor\packaging\__about__.pyc imports=[('__future__.absolute_import', 0, 0, 0), ('__future__.print_function', 0, 0, 0), ('__future__.division', 0, 0, 0), ('__future__', 0, 0, 0)] binaries=[] datas=[]>
pkg_resources._vendor.packaging._compat: None -> <PyModule 'pkg_resources._vendor.packaging._compat' C:\Python26\lib\site-packages\pkg_resources\_vendor\packaging\_compat.pyc imports=[('sys', 0, 0, 0), ('__future__.absolute_import', 0, 0, 0), ('__future__.print_function', 0, 0, 0), ('__future__.division', 0, 0, 0), ('__future__', 0, 0, 0)] binaries=[] datas=[]>
pkg_resources._vendor.packaging._structures: None -> <PyModule 'pkg_resources._vendor.packaging._structures' C:\Python26\lib\site-packages\pkg_resources\_vendor\packaging\_structures.pyc imports=[('__future__.absolute_import', 0, 0, 0), ('__future__.print_function', 0, 0, 0), ('__future__.division', 0, 0, 0), ('__future__', 0, 0, 0)] binaries=[] datas=[]>
distutils.distutils: None -> None
distutils.spawn: None -> <PyModule 'distutils.spawn' C:\Python26\lib\distutils\spawn.pyc imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('string', 0, 0, -1), ('distutils', 0, 0, -1), ('distutils.errors.*', 0, 0, -1), ('distutils.errors', 0, 0, -1), ('errno', 1, 1, -1), ('distutils.log', 0, 0, -1)] binaries=[] datas=[]>
distutils.re: None -> None
distutils.pwd: None -> None
pwd: None -> None
  DEL pwd
distutils.tempfile: None -> None
distutils.sys: None -> None
distutils.os: None -> None
distutils.errors: None -> <PyModule 'distutils.errors' C:\Python26\lib\distutils\errors.pyc imports=[] binaries=[] datas=[]>
distutils.string: None -> None
distutils.dep_util: None -> <PyModule 'distutils.dep_util' C:\Python26\lib\distutils\dep_util.pyc imports=[('os', 0, 0, -1), ('distutils.errors.DistutilsFileError', 0, 0, -1), ('stat.ST_MTIME', 1, 0, -1), ('stat', 1, 0, -1), ('distutils.errors', 0, 0, -1)] binaries=[] datas=[]>
distutils.py_compile: None -> None
py_compile: None -> <PyModule 'py_compile' C:\Python26\lib\py_compile.pyc imports=[('imp', 0, 0, -1), ('sys', 0, 0, -1), ('marshal', 0, 0, -1), ('os', 0, 0, -1), ('MacOS', 0, 1, -1), ('__builtin__', 0, 0, -1), ('traceback', 0, 0, -1)] binaries=[] datas=[]>
distutils.sysconfig: None -> <PyModule 'distutils.sysconfig' C:\Python26\lib\distutils\sysconfig.pyc imports=[('distutils.text_file', 1, 0, -1), ('re', 0, 0, -1), ('sys', 0, 0, -1), ('MacOS', 1, 0, -1), ('os', 0, 0, -1), ('string', 0, 0, -1), ('distutils.errors.DistutilsPlatformError', 0, 0, -1), ('distutils.errors', 0, 0, -1), ('distutils.text_file.TextFile', 1, 0, -1)] binaries=[] datas=[]>
distutils.log: None -> <PyModule 'distutils.log' C:\Python26\lib\distutils\log.pyc imports=[('sys', 0, 0, -1)] binaries=[] datas=[]>
distutils.errno: None -> None
distutils.stat: None -> None
MacOS: None -> None
  DEL MacOS
distutils.text_file: None -> <PyModule 'distutils.text_file' C:\Python26\lib\distutils\text_file.pyc imports=[('os', 0, 0, -1), ('string', 0, 0, -1), ('types.*', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1)] binaries=[] datas=[]>
distutils.MacOS: None -> None
MacOS: None -> None
  DEL MacOS
distutils.types: None -> None
_markerlib._markerlib: None -> None
_markerlib.markers: None -> <PyModule '_markerlib.markers' C:\Python26\lib\site-packages\_markerlib\markers.pyc imports=[('platform', 0, 0, -1), ('sys', 0, 0, -1), ('weakref', 0, 0, -1), ('os', 0, 0, -1), ('ast', 0, 0, -1), ('platform.python_implementation', 0, 0, -1)] binaries=[] datas=[]>
_markerlib.ast: None -> None
ast: None -> <PyModule 'ast' C:\Python26\lib\ast.pyc imports=[('_ast', 0, 0, -1), ('inspect', 1, 1, -1), ('collections.deque', 1, 0, -1), ('_ast.*', 0, 0, -1), ('collections', 1, 0, -1), ('_ast.__version__', 0, 0, -1)] binaries=[] datas=[]>
_markerlib.platform: None -> None
_markerlib.sys: None -> None
_markerlib.weakref: None -> None
weakref: None -> <PyModule 'weakref' C:\Python26\lib\weakref.pyc imports=[('exceptions.ReferenceError', 0, 0, -1), ('_weakref.ProxyType', 0, 0, -1), ('_weakref.getweakrefcount', 0, 0, -1), ('_weakref.ref', 0, 0, -1), ('_weakref.ReferenceType', 0, 0, -1), ('exceptions', 0, 0, -1), ('_weakref.getweakrefs', 0, 0, -1), ('_weakref.CallableProxyType', 0, 0, -1), ('UserDict', 0, 0, -1), ('_weakref', 0, 0, -1), ('_weakref.proxy', 0, 0, -1)] binaries=[] datas=[]>
_markerlib.os: None -> None
gestalt: None -> None
  DEL gestalt
java: None -> None
  DEL java
MacOS: None -> None
  DEL MacOS
win32api: None -> <ExtensionModule 'win32api' C:\Python26\lib\site-packages\win32\win32api.pyd imports=[] binaries=[] datas=[]>
win32con: None -> <PyModule 'win32con' C:\Python26\lib\site-packages\win32\lib\win32con.pyc imports=[] binaries=[] datas=[]>
gestalt: None -> None
  DEL gestalt
java: None -> None
  DEL java
vms_lib: None -> None
  DEL vms_lib
win32pipe: None -> <ExtensionModule 'win32pipe' C:\Python26\lib\site-packages\win32\win32pipe.pyd imports=[] binaries=[] datas=[]>
Carbon: None -> None
  DEL Carbon
xml: None -> <PkgModule 'xml' C:\Python26\lib\xml\__init__.pyc imports=[('sys', 0, 1, -1), ('_xmlplus', 0, 0, -1), ('xml.sax.xmlreader', 0, 0, -1), ('xml.sax.expatreader', 0, 0, -1)] binaries=[] datas=[]>
xml.parsers: None -> <PkgModule 'xml.parsers' C:\Python26\lib\xml\parsers\__init__.pyc imports=[] binaries=[] datas=[]>
xml.parsers.expat: None -> <PyModule 'xml.parsers.expat' C:\Python26\lib\xml\parsers\expat.pyc imports=[('pyexpat', 0, 0, -1), ('pyexpat.*', 0, 0, -1)] binaries=[] datas=[]>
Carbon: None -> None
  DEL Carbon
Carbon: None -> None
  DEL Carbon
Carbon: None -> None
  DEL Carbon
Carbon: None -> None
  DEL Carbon
Carbon: None -> None
  DEL Carbon
Carbon: None -> None
  DEL Carbon
Carbon: None -> None
  DEL Carbon
xml.sys: None -> None
xml._xmlplus: None -> None
_xmlplus: None -> None
  DEL _xmlplus
xml.xml: None -> None
xml.sax: None -> <PkgModule 'xml.sax' C:\Python26\lib\xml\sax\__init__.pyc imports=[('handler', 0, 0, -1), ('_exceptions.SAXNotSupportedException', 0, 0, -1), ('cStringIO', 1, 0, -1), ('handler.ErrorHandler', 0, 0, -1), ('handler.ContentHandler', 0, 0, -1), ('xml.sax.expatreader', 0, 1, -1), ('_exceptions.SAXReaderNotAvailable', 0, 0, -1), ('_exceptions.SAXNotRecognizedException', 0, 0, -1), ('StringIO', 1, 1, -1), ('cStringIO.StringIO', 1, 0, -1), ('_exceptions.SAXParseException', 0, 0, -1), ('_exceptions', 0, 0, -1), ('sys', 1, 1, -1), ('org.python.core', 1, 0, -1), ('xmlreader', 0, 0, -1), ('_exceptions.SAXException', 0, 0, -1), ('os', 0, 0, -1), ('org.python.core.imp', 1, 0, -1), ('xmlreader.InputSource', 0, 0, -1), ('StringIO.StringIO', 1, 1, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
xml.sax.xmlreader: None -> <PyModule 'xml.sax.xmlreader' C:\Python26\lib\xml\sax\xmlreader.pyc imports=[('handler', 0, 0, -1), ('_exceptions.SAXNotSupportedException', 0, 0, -1), ('saxutils', 1, 0, -1), ('_exceptions.SAXNotRecognizedException', 0, 0, -1), ('_exceptions', 0, 0, -1)] binaries=[] datas=[]>
xml.sax.expatreader: None -> <PyModule 'xml.sax.expatreader' C:\Python26\lib\xml\sax\expatreader.pyc imports=[('xml.sax.handler', 0, 0, -1), ('xml.sax.handler.property_xml_string', 0, 0, -1), ('xml.sax.handler.feature_external_pes', 0, 0, -1), ('sys', 0, 0, -1), ('xml.sax.xmlreader', 0, 0, -1), ('xml.sax.handler.feature_string_interning', 0, 0, -1), ('xml.sax._exceptions', 0, 0, -1), ('weakref', 0, 1, -1), ('xml.sax', 0, 0, -1), ('xml.sax.handler.feature_namespace_prefixes', 0, 0, -1), ('xml.sax.saxutils', 0, 0, -1), ('xml.parsers', 0, 0, -1), ('xml.sax._exceptions.*', 0, 0, -1), ('xml.sax.handler.feature_validation', 0, 0, -1), ('xml.sax', 0, 1, -1), ('xml.sax.handler.property_interning_dict', 0, 0, -1), ('xml.sax.handler.feature_namespaces', 0, 0, -1), ('_weakref', 0, 0, -1), ('xml.sax.handler.feature_external_ges', 0, 0, -1), ('xml.parsers.expat', 0, 0, -1)] binaries=[] datas=[]>
xml.sax.handler: None -> <PyModule 'xml.sax.handler' C:\Python26\lib\xml\sax\handler.pyc imports=[] binaries=[] datas=[]>
xml.sax._exceptions: None -> <PyModule 'xml.sax._exceptions' C:\Python26\lib\xml\sax\_exceptions.pyc imports=[('java.lang.Exception', 0, 1, -1), ('sys', 0, 0, -1), ('java.lang', 0, 1, -1)] binaries=[] datas=[]>
xml.sax.cStringIO: None -> None
xml.sax.xml: None -> None
xml.sax.StringIO: None -> None
xml.sax.sys: None -> None
xml.sax.org: None -> None
org: None -> None
  DEL org
xml.sax.os: None -> None
org: None -> None
  DEL org
xml.sax.java: None -> None
java: None -> None
  DEL java
java: None -> None
  DEL java
xml.sax.weakref: None -> None
xml.sax.saxutils: None -> <PyModule 'xml.sax.saxutils' C:\Python26\lib\xml\sax\saxutils.pyc imports=[('handler', 0, 0, -1), ('urlparse', 0, 0, -1), ('types', 0, 0, -1), ('os', 0, 0, -1), ('codecs.xmlcharrefreplace_errors', 0, 0, -1), ('xmlreader', 0, 0, -1), ('urllib', 0, 0, -1), ('codecs', 0, 0, -1), ('sys', 1, 1, -1)] binaries=[] datas=[]>
xml.sax._weakref: None -> None
_weakref: None -> <BuiltinModule '_weakref' None imports=[] binaries=[] datas=[]>
xml.sax.urlparse: None -> None
xml.sax.types: None -> None
xml.sax.codecs: None -> None
xml.sax.urllib: None -> None
exceptions: None -> <BuiltinModule 'exceptions' None imports=[] binaries=[] datas=[]>
xml.parsers.pyexpat: None -> None
pyexpat: None -> <ExtensionModule 'pyexpat' C:\Python26\DLLs\pyexpat.pyd imports=[('xmlparse', 0, 0, -1), ('xmltok', 0, 0, -1)] binaries=[] datas=[]>
xmlparse: None -> None
  DEL xmlparse
xmltok: None -> None
  DEL xmltok
_ast: None -> <BuiltinModule '_ast' None imports=[] binaries=[] datas=[]>
shutil: None -> <PyModule 'shutil' C:\Python26\lib\shutil.pyc imports=[('sys', 0, 0, -1), ('os.path', 0, 0, -1), ('os', 0, 0, -1), ('fnmatch', 0, 0, -1), ('os.path.abspath', 0, 0, -1), ('stat', 0, 0, -1), ('errno', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.util.py2k: None -> None
py2k: None -> None
  DEL py2k
_sha: None -> <BuiltinModule '_sha' None imports=[] binaries=[] datas=[]>
_sha256: None -> <BuiltinModule '_sha256' None imports=[] binaries=[] datas=[]>
_hashlib: None -> <ExtensionModule '_hashlib' C:\Python26\DLLs\_hashlib.pyd imports=[] binaries=[] datas=[]>
_md5: None -> <BuiltinModule '_md5' None imports=[] binaries=[] datas=[]>
_sha512: None -> <BuiltinModule '_sha512' None imports=[] binaries=[] datas=[]>
sqlalchemy.sql.util: None -> <PyModule 'sqlalchemy.sql.util' C:\Python26\lib\site-packages\sqlalchemy\sql\util.pyc imports=[('elements.UnaryExpression', 0, 0, 1), ('collections.deque', 0, 0, -1), ('elements._find_columns', 0, 0, 1), ('elements._textual_label_reference', 0, 0, 1), ('selectable', 0, 0, 1), ('selectable.Join', 0, 0, 1), ('annotation._shallow_annotate', 0, 0, 1), ('schema', 0, 0, 1), ('visitors', 0, 0, 1), ('', 0, 0, 2), ('itertools', 0, 0, -1), ('operators', 0, 0, 1), ('selectable.ScalarSelect', 0, 0, 1), ('elements.Label', 0, 0, 1), ('schema.Column', 0, 0, 1), ('annotation._deep_deannotate', 0, 0, 1), ('base', 0, 0, 1), ('collections', 0, 0, -1), ('elements.BindParameter', 0, 0, 1), ('', 0, 0, 1), ('itertools.chain', 0, 0, -1), ('elements', 0, 0, 1), ('elements.literal_column', 0, 0, 1), ('util', 0, 0, 2), ('ddl', 0, 0, 1), ('annotation._deep_annotate', 0, 0, 1), ('elements._label_reference', 0, 0, 1), ('annotation', 0, 0, 1), ('selectable.FromGrouping', 0, 0, 1), ('elements.Null', 0, 0, 1), ('elements.ColumnClause', 0, 0, 1), ('elements.ColumnElement', 0, 0, 1), ('base._from_objects', 0, 0, 1), ('base.ColumnSet', 0, 0, 1), ('exc', 0, 0, 2), ('ddl.sort_tables', 0, 0, 1), ('selectable.FromClause', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.sql.schema: None -> <PyModule 'sqlalchemy.sql.schema' C:\Python26\lib\site-packages\sqlalchemy\sql\schema.pyc imports=[('types', 0, 0, 0), ('collections', 0, 0, 0), ('elements._find_columns', 0, 0, 1), ('elements._as_truncated', 0, 0, 1), ('base.SchemaEventTarget', 0, 0, 1), ('elements._truncated_label', 0, 0, 1), ('selectable.TableClause', 0, 0, 1), ('selectable', 0, 0, 1), ('elements._literal_as_text', 0, 0, 1), ('visitors', 0, 0, 1), ('inspect', 0, 0, 0), ('', 0, 0, 2), ('ddl', 0, 0, 1), ('sqlalchemy', 0, 0, 0), ('base._bind_or_error', 0, 0, 1), ('elements.ClauseElement', 0, 0, 1), ('base', 0, 0, 1), ('event', 0, 0, 2), ('__future__.absolute_import', 0, 0, 0), ('elements.TextClause', 0, 0, 1), ('', 0, 0, 1), ('elements.quoted_name', 0, 0, 1), ('base.ColumnCollection', 0, 0, 1), ('elements', 0, 0, 1), ('util', 0, 0, 2), ('base.DialectKWArgs', 0, 0, 1), ('type_api', 0, 0, 1), ('__future__', 0, 0, 0), ('elements.ColumnClause', 0, 0, 1), ('elements.ColumnElement', 0, 0, 1), ('inspection', 0, 0, 2), ('exc', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.sql.ddl: None -> <PyModule 'sqlalchemy.sql.ddl' C:\Python26\lib\site-packages\sqlalchemy\sql\ddl.pyc imports=[('', 0, 0, 2), ('base._generative', 0, 0, 1), ('util.topological', 0, 0, 2), ('event', 0, 0, 2), ('base._bind_or_error', 0, 0, 1), ('elements', 0, 0, 1), ('util', 0, 0, 2), ('base.Executable', 0, 0, 1), ('elements.ClauseElement', 0, 0, 1), ('exc', 0, 0, 2), ('base.SchemaVisitor', 0, 0, 1), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.sql.sqlalchemy: None -> None
sqlalchemy.event: None -> <PkgModule 'sqlalchemy.event' C:\Python26\lib\site-packages\sqlalchemy\event\__init__.pyc imports=[('api.listen', 0, 0, 1), ('api.contains', 0, 0, 1), ('attr', 0, 0, 1), ('legacy', 0, 0, 1), ('legacy._legacy_signature', 0, 0, 1), ('api.listens_for', 0, 0, 1), ('base.Events', 0, 0, 1), ('base.dispatcher', 0, 0, 1), ('attr.RefCollection', 0, 0, 1), ('api.NO_RETVAL', 0, 0, 1), ('api.remove', 0, 0, 1), ('base', 0, 0, 1), ('api.CANCEL', 0, 0, 1), ('api', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.util.topological: None -> <PyModule 'sqlalchemy.util.topological' C:\Python26\lib\site-packages\sqlalchemy\util\topological.pyc imports=[('', 0, 0, 2), ('exc', 0, 0, 2), ('exc.CircularDependencyError', 0, 0, 2), ('util', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.event.api: None -> <PyModule 'sqlalchemy.event.api' C:\Python26\lib\site-packages\sqlalchemy\event\api.pyc imports=[('', 0, 0, 2), ('__future__', 0, 0, 0), ('registry', 0, 0, 1), ('__future__.absolute_import', 0, 0, 0), ('base._registrars', 0, 0, 1), ('registry._EventKey', 0, 0, 1), ('util', 0, 0, 2), ('exc', 0, 0, 2), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.event.attr: None -> <PyModule 'sqlalchemy.event.attr' C:\Python26\lib\site-packages\sqlalchemy\event\attr.pyc imports=[('collections', 0, 0, 0), ('', 0, 0, 2), ('weakref', 0, 0, 0), ('util.threading', 0, 0, 2), ('__future__', 0, 0, 0), ('util', 0, 0, 2), ('itertools.chain', 0, 0, 0), ('', 0, 0, 1), ('__future__.absolute_import', 0, 0, 0), ('registry', 0, 0, 1), ('__future__.with_statement', 0, 0, 0), ('itertools', 0, 0, 0), ('legacy', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.event.legacy: None -> <PyModule 'sqlalchemy.event.legacy' C:\Python26\lib\site-packages\sqlalchemy\event\legacy.pyc imports=[('', 0, 0, 2), ('util', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.event.base: None -> <PyModule 'sqlalchemy.event.base' C:\Python26\lib\site-packages\sqlalchemy\event\base.pyc imports=[('', 0, 0, 2), ('weakref', 0, 0, 0), ('attr._EmptyListener', 0, 0, 1), ('__future__', 0, 0, 0), ('util', 0, 0, 2), ('__future__.absolute_import', 0, 0, 0), ('attr._ClsLevelDispatch', 0, 0, 1), ('attr', 0, 0, 1), ('attr._JoinedListener', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.event.registry: None -> <PyModule 'sqlalchemy.event.registry' C:\Python26\lib\site-packages\sqlalchemy\event\registry.pyc imports=[('collections', 0, 0, 0), ('types', 0, 0, 0), ('weakref', 0, 0, 0), ('__future__', 0, 0, 0), ('', 0, 0, 2), ('__future__.absolute_import', 0, 0, 0), ('util', 0, 0, 2), ('exc', 0, 0, 2)] binaries=[] datas=[]>
  DEL sqlalchemy.util.threading
sqlalchemy.util.textwrap: None -> None
sqlalchemy.engine.Connectable: None -> None
  DEL sqlalchemy.engine.Connectable
sqlalchemy.engine.Engine: None -> None
  DEL sqlalchemy.engine.Engine
sqlalchemy.pool: None -> <PyModule 'sqlalchemy.pool' C:\Python26\lib\site-packages\sqlalchemy\pool.pyc imports=[('collections', 0, 0, -1), ('interfaces', 0, 0, 1), ('weakref', 0, 0, -1), ('log', 0, 0, 1), ('collections.deque', 0, 0, -1), ('', 0, 0, 1), ('util.queue', 0, 0, 1), ('util.threading', 0, 0, 1), ('exc', 0, 0, 1), ('util.chop_traceback', 0, 0, 1), ('traceback', 0, 0, -1), ('event', 0, 0, 1), ('util', 0, 0, 1), ('time', 0, 0, -1), ('util.memoized_property', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.engine.Dialect: None -> None
  DEL sqlalchemy.engine.Dialect
sqlalchemy.engine.interfaces: None -> <PyModule 'sqlalchemy.engine.interfaces' C:\Python26\lib\site-packages\sqlalchemy\engine\interfaces.pyc imports=[('', 0, 0, 2), ('event', 0, 0, 2), ('sql.compiler.Compiled', 0, 0, 2), ('util', 0, 0, 2), ('sql.compiler.TypeCompiler', 0, 0, 2), ('sql.compiler', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.engine.result: None -> <PyModule 'sqlalchemy.engine.result' C:\Python26\lib\site-packages\sqlalchemy\engine\result.pyc imports=[('', 0, 0, 2), ('collections.Sequence', 0, 0, -1), ('collections', 0, 0, -1), ('sql', 0, 0, 2), ('sqlalchemy.cresultproxy.safe_rowproxy_reconstructor', 0, 0, -1), ('operator', 0, 0, -1), ('sqlalchemy.cresultproxy', 0, 0, -1), ('util', 0, 0, 2), ('sql.sqltypes', 0, 0, 2), ('sqlalchemy.cresultproxy.BaseRowProxy', 0, 0, -1), ('sql.expression', 0, 0, 2), ('exc', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.engine.base: None -> <PyModule 'sqlalchemy.engine.base' C:\Python26\lib\site-packages\sqlalchemy\engine\base.pyc imports=[('', 0, 0, 2), ('interfaces', 0, 0, 1), ('sys', 0, 0, -1), ('interfaces.ExceptionContext', 0, 0, 1), ('sql', 0, 0, 2), ('__future__', 0, 0, -1), ('util', 0, 0, 2), ('sql.util', 0, 0, 2), ('interfaces.Connectable', 0, 0, 1), ('__future__.with_statement', 0, 0, -1), ('contextlib', 0, 0, -1), ('util', 0, 0, 1), ('exc', 0, 0, 2), ('util._distill_params', 0, 0, 1), ('log', 0, 0, 2), ('interfaces', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.engine.strategies: None -> <PyModule 'sqlalchemy.engine.strategies' C:\Python26\lib\site-packages\sqlalchemy\engine\strategies.pyc imports=[('sqlalchemy.event', 0, 0, -1), ('sqlalchemy.engine.threadlocal', 0, 0, -1), ('sqlalchemy.engine', 0, 0, -1), ('sqlalchemy.pool', 0, 0, -1), ('operator', 0, 0, -1), ('sqlalchemy.util', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.exc', 0, 0, -1), ('sqlalchemy.engine.ddl', 1, 0, -1), ('operator.attrgetter', 0, 0, -1), ('sqlalchemy.engine.url', 0, 0, -1), ('sqlalchemy.engine', 1, 0, -1), ('sqlalchemy.engine.base', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.engine.util: None -> <PyModule 'sqlalchemy.engine.util' C:\Python26\lib\site-packages\sqlalchemy\engine\util.pyc imports=[('', 0, 0, 2), ('sqlalchemy.cutils._distill_params', 0, 0, -1), ('sqlalchemy.cutils', 0, 0, -1), ('util', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.sql.compiler: None -> <PyModule 'sqlalchemy.sql.compiler' C:\Python26\lib\site-packages\sqlalchemy\sql\compiler.pyc imports=[('contextlib', 0, 0, -1), ('re', 0, 0, -1), ('itertools', 0, 0, -1), ('operators', 0, 0, 1), ('crud', 0, 0, 1), ('', 0, 0, 2), ('', 0, 0, 1), ('sqltypes', 0, 0, 1), ('functions', 0, 0, 1), ('elements', 0, 0, 1), ('util', 0, 0, 2), ('selectable', 0, 0, 1), ('exc', 0, 0, 2), ('schema', 0, 0, 1), ('visitors', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.sql.contextlib: None -> None
sqlalchemy.sql.crud: None -> <PyModule 'sqlalchemy.sql.crud' C:\Python26\lib\site-packages\sqlalchemy\sql\crud.pyc imports=[('', 0, 0, 2), ('', 0, 0, 1), ('operator', 0, 0, -1), ('elements', 0, 0, 1), ('util', 0, 0, 2), ('exc', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.sql.functions: None -> <PyModule 'sqlalchemy.sql.functions' C:\Python26\lib\site-packages\sqlalchemy\sql\functions.pyc imports=[('sqltypes', 0, 0, 1), ('elements.Over', 0, 0, 1), ('selectable', 0, 0, 1), ('base.Executable', 0, 0, 1), ('elements.ClauseList', 0, 0, 1), ('schema', 0, 0, 1), ('visitors', 0, 0, 1), ('', 0, 0, 2), ('operators', 0, 0, 1), ('elements.Cast', 0, 0, 1), ('elements.Extract', 0, 0, 1), ('base', 0, 0, 1), ('elements.BindParameter', 0, 0, 1), ('', 0, 0, 1), ('base.ColumnCollection', 0, 0, 1), ('elements', 0, 0, 1), ('elements.literal_column', 0, 0, 1), ('util', 0, 0, 2), ('annotation', 0, 0, 1), ('selectable.Alias', 0, 0, 1), ('elements.FunctionFilter', 0, 0, 1), ('elements._literal_as_binds', 0, 0, 1), ('elements._clone', 0, 0, 1), ('elements.ColumnElement', 0, 0, 1), ('elements._type_from_args', 0, 0, 1), ('visitors.VisitableType', 0, 0, 1), ('selectable.Select', 0, 0, 1), ('selectable.FromClause', 0, 0, 1)] binaries=[] datas=[]>
  DEL sqlalchemy.util.pickle
sqlalchemy.sql.decimal: None -> None
decimal: None -> <PyModule 'decimal' C:\Python26\lib\decimal.pyc imports=[('collections', 0, 0, -1), ('threading', 0, 0, -1), ('copy', 0, 0, -1), ('doctest', 0, 1, -1), ('re', 0, 0, -1), ('sys', 0, 1, -1), ('collections.namedtuple', 0, 0, -1), ('numbers', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.sql.codecs: None -> None
sqlalchemy.processors: None -> <PyModule 'sqlalchemy.processors' C:\Python26\lib\site-packages\sqlalchemy\processors.pyc imports=[('re', 0, 0, -1), ('sqlalchemy.cprocessors.DecimalResultProcessor', 0, 0, -1), ('sqlalchemy.cprocessors.to_float', 0, 0, -1), ('', 0, 0, 1), ('sqlalchemy.cprocessors.UnicodeResultProcessor', 0, 0, -1), ('sqlalchemy.cprocessors.str_to_time', 0, 0, -1), ('datetime', 0, 0, -1), ('sqlalchemy.cprocessors.str_to_date', 0, 0, -1), ('sqlalchemy.cprocessors.int_to_boolean', 0, 0, -1), ('util', 0, 0, 1), ('sqlalchemy.cprocessors.str_to_datetime', 0, 0, -1), ('codecs', 0, 0, -1), ('sqlalchemy.cprocessors.to_str', 0, 0, -1), ('sqlalchemy.cprocessors', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.sql.datetime: None -> None
sqlalchemy.sql.array: None -> None
sqlalchemy.re: None -> None
sqlalchemy.cprocessors: None -> None
  DEL sqlalchemy.cprocessors
sqlalchemy.cprocessors: None -> None
  DEL sqlalchemy.cprocessors
sqlalchemy.cprocessors: None -> None
  DEL sqlalchemy.cprocessors
sqlalchemy.cprocessors: None -> None
  DEL sqlalchemy.cprocessors
sqlalchemy.datetime: None -> None
sqlalchemy.cprocessors: None -> None
  DEL sqlalchemy.cprocessors
sqlalchemy.cprocessors: None -> None
  DEL sqlalchemy.cprocessors
sqlalchemy.cprocessors: None -> None
  DEL sqlalchemy.cprocessors
sqlalchemy.codecs: None -> None
sqlalchemy.cprocessors: None -> None
  DEL sqlalchemy.cprocessors
sqlalchemy.cprocessors: None -> None
  DEL sqlalchemy.cprocessors
sqlalchemy.engine.collections: None -> None
sqlalchemy.engine.sqlalchemy: None -> None
sqlalchemy.cresultproxy: None -> None
  DEL sqlalchemy.cresultproxy
sqlalchemy.engine.operator: None -> None
sqlalchemy.cresultproxy: None -> None
  DEL sqlalchemy.cresultproxy
sqlalchemy.cresultproxy: None -> None
  DEL sqlalchemy.cresultproxy
sqlalchemy.sql.dml: None -> <PyModule 'sqlalchemy.sql.dml' C:\Python26\lib\site-packages\sqlalchemy\sql\dml.pyc imports=[('elements._column_as_key', 0, 0, 1), ('', 0, 0, 2), ('base._generative', 0, 0, 1), ('selectable._interpret_as_from', 0, 0, 1), ('elements.Null', 0, 0, 1), ('selectable.HasPrefixes', 0, 0, 1), ('util', 0, 0, 2), ('elements._literal_as_text', 0, 0, 1), ('elements.and_', 0, 0, 1), ('elements', 0, 0, 1), ('elements._clone', 0, 0, 1), ('selectable', 0, 0, 1), ('base._from_objects', 0, 0, 1), ('base.Executable', 0, 0, 1), ('elements.ClauseElement', 0, 0, 1), ('selectable._interpret_as_select', 0, 0, 1), ('base.DialectKWArgs', 0, 0, 1), ('exc', 0, 0, 2), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.engine.sys: None -> None
sqlalchemy.engine.__future__: None -> None
sqlalchemy.engine.contextlib: None -> None
sqlalchemy.log: None -> <PyModule 'sqlalchemy.log' C:\Python26\lib\site-packages\sqlalchemy\log.pyc imports=[('logging', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.interfaces: None -> <PyModule 'sqlalchemy.interfaces' C:\Python26\lib\site-packages\sqlalchemy\interfaces.pyc imports=[('event', 0, 0, 1), ('', 0, 0, 1), ('util', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.cutils: None -> None
  DEL sqlalchemy.cutils
sqlalchemy.cutils: None -> None
  DEL sqlalchemy.cutils
sqlalchemy.logging: None -> None
sqlalchemy.sys: None -> None
sqlalchemy.engine.threadlocal: None -> <PyModule 'sqlalchemy.engine.threadlocal' C:\Python26\lib\site-packages\sqlalchemy\engine\threadlocal.pyc imports=[('', 0, 0, 2), ('', 0, 0, 1), ('base', 0, 0, 1), ('weakref', 0, 0, -1), ('util', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.engine.ddl: None -> None
  DEL sqlalchemy.engine.ddl
sqlalchemy.engine.url: None -> <PyModule 'sqlalchemy.engine.url' C:\Python26\lib\site-packages\sqlalchemy\engine\url.pyc imports=[('', 0, 0, 2), ('re', 0, 0, -1), ('', 0, 0, 1), ('Dialect', 0, 0, 1), ('dialects', 0, 0, 2), ('util', 0, 0, 2), ('dialects.registry', 0, 0, 2), ('exc', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.engine.weakref: None -> None
sqlalchemy.collections: None -> None
sqlalchemy.weakref: None -> None
sqlalchemy.util.queue: None -> <PyModule 'sqlalchemy.util.queue' C:\Python26\lib\site-packages\sqlalchemy\util\queue.pyc imports=[('collections', 0, 0, -1), ('collections.deque', 0, 0, -1), ('compat', 0, 0, 1), ('compat.threading', 0, 0, 1), ('time.time', 0, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.util.threading: None -> None
  DEL sqlalchemy.util.threading
sqlalchemy.util.chop_traceback: None -> None
  DEL sqlalchemy.util.chop_traceback
sqlalchemy.traceback: None -> None
sqlalchemy.time: None -> None
sqlalchemy.util.memoized_property: None -> None
  DEL sqlalchemy.util.memoized_property
sqlalchemy.engine.re: None -> None
sqlalchemy.engine.Dialect: None -> None
Dialect: None -> None
  DEL Dialect
sqlalchemy.dialects.registry: None -> None
  DEL sqlalchemy.dialects.registry
sqlalchemy.dialects.sybase.base: None -> <PyModule 'sqlalchemy.dialects.sybase.base' C:\Python26\lib\site-packages\sqlalchemy\dialects\sybase\base.pyc imports=[('sqlalchemy.types.FLOAT', 0, 0, -1), ('sqlalchemy.types.VARBINARY', 0, 0, -1), ('sqlalchemy.types.DATETIME', 0, 0, -1), ('sqlalchemy.types.SMALLINT', 0, 0, -1), ('sqlalchemy.types.DECIMAL', 0, 0, -1), ('sqlalchemy.types.TIMESTAMP', 0, 0, -1), ('sqlalchemy.types.NUMERIC', 0, 0, -1), ('sqlalchemy.types.REAL', 0, 0, -1), ('sqlalchemy.types.TEXT', 0, 0, -1), ('sqlalchemy.sql.bindparam', 0, 0, -1), ('sqlalchemy.types.BIGINT', 0, 0, -1), ('sqlalchemy.types.INT', 0, 0, -1), ('sqlalchemy.types.INTEGER', 0, 0, -1), ('sqlalchemy.util', 0, 0, -1), ('sqlalchemy.schema', 0, 0, -1), ('sqlalchemy.types.NVARCHAR', 0, 0, -1), ('sqlalchemy.exc', 0, 0, -1), ('sqlalchemy.sql.expression', 0, 0, -1), ('sqlalchemy.types.CHAR', 0, 0, -1), ('sqlalchemy.engine.base', 0, 0, -1), ('sqlalchemy.types.VARCHAR', 0, 0, -1), ('sqlalchemy.types.TIME', 0, 0, -1), ('sqlalchemy.types.UnicodeText', 0, 0, -1), ('sqlalchemy.engine', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.sql.compiler', 0, 0, -1), ('sqlalchemy.types.NCHAR', 0, 0, -1), ('sqlalchemy.engine.reflection', 0, 0, -1), ('sqlalchemy.sql.operators', 0, 0, -1), ('sqlalchemy.types.Unicode', 0, 0, -1), ('sqlalchemy.types.DATE', 0, 0, -1), ('re', 0, 0, -1), ('sqlalchemy.sql', 0, 0, -1), ('sqlalchemy.engine.default', 0, 0, -1), ('operator', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('sqlalchemy.types.BINARY', 0, 0, -1), ('sqlalchemy.sql.text', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.dialects.oracle.base: None -> <PyModule 'sqlalchemy.dialects.oracle.base' C:\Python26\lib\site-packages\sqlalchemy\dialects\oracle\base.pyc imports=[('re', 0, 0, -1), ('sqlalchemy.types.BLOB', 0, 0, -1), ('sqlalchemy.types.TIMESTAMP', 0, 0, -1), ('sqlalchemy.sql', 0, 0, -1), ('sqlalchemy.engine.default', 0, 0, -1), ('sqlalchemy.engine', 0, 0, -1), ('sqlalchemy.types.FLOAT', 0, 0, -1), ('sqlalchemy.types.VARCHAR', 0, 0, -1), ('sqlalchemy.sql.visitors', 0, 0, -1), ('sqlalchemy.util', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('sqlalchemy.schema', 0, 0, -1), ('sqlalchemy.types.NVARCHAR', 0, 0, -1), ('sqlalchemy.sql.expression', 0, 0, -1), ('sqlalchemy.sql.compiler', 0, 0, -1), ('sqlalchemy.types.CHAR', 0, 0, -1), ('sqlalchemy.engine.reflection', 0, 0, -1), ('sqlalchemy.types.CLOB', 0, 0, -1), ('sqlalchemy.sql.operators', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.dialects.mssql.base: None -> <PyModule 'sqlalchemy.dialects.mssql.base' C:\Python26\lib\site-packages\sqlalchemy\dialects\mssql\base.pyc imports=[('types.TEXT', 0, 0, 3), ('engine.default', 0, 0, 3), ('types.NVARCHAR', 0, 0, 3), ('types.BINARY', 0, 0, 3), ('sql.expression', 0, 0, 3), ('types.VARCHAR', 0, 0, 3), ('types.DECIMAL', 0, 0, 3), ('types.TIMESTAMP', 0, 0, 3), ('exc', 0, 0, 3), ('sql.compiler', 0, 0, 3), ('util', 0, 0, 3), ('types.CHAR', 0, 0, 3), ('types', 0, 0, 3), ('types.SMALLINT', 0, 0, 3), ('sql', 0, 0, 3), ('types.BIGINT', 0, 0, 3), ('engine', 0, 0, 3), ('', 0, 0, 1), ('schema', 0, 0, 3), ('sql.util', 0, 0, 3), ('types.INTEGER', 0, 0, 3), ('types.DATE', 0, 0, 3), ('information_schema', 0, 0, 1), ('types.DATETIME', 0, 0, 3), ('datetime', 0, 0, -1), ('types.NCHAR', 0, 0, 3), ('types.FLOAT', 0, 0, 3), ('re', 0, 0, -1), ('util.update_wrapper', 0, 0, 3), ('types.NUMERIC', 0, 0, 3), ('operator', 0, 0, -1), ('engine.reflection', 0, 0, 3), ('', 0, 0, 3)] binaries=[] datas=[]>
sqlalchemy.dialects.mysql.base: None -> <PyModule 'sqlalchemy.dialects.mysql.base' C:\Python26\lib\site-packages\sqlalchemy\dialects\mysql\base.pyc imports=[('types.BINARY', 0, 0, 3), ('util.topological', 0, 0, 3), ('exc', 0, 0, 3), ('sys', 0, 0, -1), ('sql.compiler', 0, 0, 3), ('util', 0, 0, 3), ('types', 0, 0, 3), ('sql', 0, 0, 3), ('engine', 0, 0, 3), ('types.VARBINARY', 0, 0, 3), ('schema', 0, 0, 3), ('array', 0, 0, -1), ('types.DATE', 0, 0, 3), ('datetime', 0, 0, -1), ('re', 0, 0, -1), ('log', 0, 0, 3), ('types.BLOB', 0, 0, 3), ('types.BOOLEAN', 0, 0, 3), ('engine.default', 0, 0, 3), ('engine.reflection', 0, 0, 3), ('array.array', 0, 0, -1), ('', 0, 0, 3)] binaries=[] datas=[]>
sqlalchemy.dialects.sqlite.base: None -> <PyModule 'sqlalchemy.dialects.sqlite.base' C:\Python26\lib\site-packages\sqlalchemy\dialects\sqlite\base.pyc imports=[('types.TEXT', 0, 0, 3), ('engine.default', 0, 0, 3), ('types.DECIMAL', 0, 0, 3), ('types.TIMESTAMP', 0, 0, 3), ('exc', 0, 0, 3), ('sql.compiler', 0, 0, 3), ('util', 0, 0, 3), ('types', 0, 0, 3), ('types.SMALLINT', 0, 0, 3), ('sql', 0, 0, 3), ('engine', 0, 0, 3), ('types.REAL', 0, 0, 3), ('schema', 0, 0, 3), ('types.INTEGER', 0, 0, 3), ('types.CHAR', 0, 0, 3), ('datetime', 0, 0, -1), ('types.FLOAT', 0, 0, 3), ('re', 0, 0, -1), ('processors', 0, 0, 3), ('types.BLOB', 0, 0, 3), ('types.BOOLEAN', 0, 0, 3), ('types.NUMERIC', 0, 0, 3), ('types.VARCHAR', 0, 0, 3), ('engine.reflection', 0, 0, 3), ('', 0, 0, 3)] binaries=[] datas=[]>
sqlalchemy.dialects.postgresql.base: None -> <PyModule 'sqlalchemy.dialects.postgresql.base' C:\Python26\lib\site-packages\sqlalchemy\dialects\postgresql\base.pyc imports=[('sql.operators', 0, 0, 3), ('sqlalchemy.types.FLOAT', 0, 0, -1), ('sql.expression', 0, 0, 3), ('sqlalchemy.types.SMALLINT', 0, 0, -1), ('sqlalchemy.types.NUMERIC', 0, 0, -1), ('sqlalchemy.types.REAL', 0, 0, -1), ('sqlalchemy.types.BOOLEAN', 0, 0, -1), ('exc', 0, 0, 3), ('collections.defaultdict', 0, 0, -1), ('sql.compiler', 0, 0, 3), ('util', 0, 0, 3), ('types', 0, 0, 3), ('sqlalchemy.types.BIGINT', 0, 0, -1), ('sqlalchemy.types.INTEGER', 0, 0, -1), ('sql', 0, 0, 3), ('sql.default_comparator', 0, 0, 3), ('engine', 0, 0, 3), ('collections', 0, 0, -1), ('sqlalchemy.types.VARCHAR', 0, 0, -1), ('schema', 0, 0, 3), ('sqlalchemy.types.DATE', 0, 0, -1), ('sqlalchemy.types.CHAR', 0, 0, -1), ('sqlalchemy.types.TEXT', 0, 0, -1), ('uuid', 0, 0, -1), ('re', 0, 0, -1), ('engine.default', 0, 0, 3), ('engine.reflection', 0, 0, 3), ('sqlalchemy.types', 0, 0, -1), ('uuid.UUID', 0, 0, -1), ('', 0, 0, 3)] binaries=[] datas=[]>
sqlalchemy.dialects.firebird.base: None -> <PyModule 'sqlalchemy.dialects.firebird.base' C:\Python26\lib\site-packages\sqlalchemy\dialects\firebird\base.pyc imports=[('sqlalchemy.types.FLOAT', 0, 0, -1), ('sqlalchemy.types.Integer', 0, 0, -1), ('sqlalchemy.types.SMALLINT', 0, 0, -1), ('sqlalchemy.types.TIMESTAMP', 0, 0, -1), ('sqlalchemy.types.TEXT', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('sqlalchemy.types.INTEGER', 0, 0, -1), ('sqlalchemy.util', 0, 0, -1), ('sqlalchemy.schema', 0, 0, -1), ('sqlalchemy.exc', 0, 0, -1), ('sqlalchemy.sql.expression', 0, 0, -1), ('sqlalchemy.types.NUMERIC', 0, 0, -1), ('sqlalchemy.types.TIME', 0, 0, -1), ('sqlalchemy.engine', 0, 0, -1), ('sqlalchemy.types.DATE', 0, 0, -1), ('sqlalchemy.sql.compiler', 0, 0, -1), ('datetime', 0, 0, -1), ('sqlalchemy.engine.reflection', 0, 0, -1), ('sqlalchemy.engine.base', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.sql', 0, 0, -1), ('sqlalchemy.engine.default', 0, 0, -1), ('sqlalchemy.types.BIGINT', 0, 0, -1), ('sqlalchemy.types.BLOB', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.dialects.sybase.sqlalchemy: None -> None
sqlalchemy.dialects.sybase.pysybase: None -> <PyModule 'sqlalchemy.dialects.sybase.pysybase' C:\Python26\lib\site-packages\sqlalchemy\dialects\sybase\pysybase.pyc imports=[('sqlalchemy.dialects.sybase.base.SybaseExecutionContext', 0, 0, -1), ('sqlalchemy.dialects.sybase.base.SybaseDialect', 0, 0, -1), ('sqlalchemy.dialects.sybase.base.SybaseSQLCompiler', 0, 0, -1), ('sqlalchemy.dialects.sybase.base', 0, 0, -1), ('Sybase', 1, 0, -1), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('sqlalchemy.processors', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.dialects.sybase.pyodbc: None -> <PyModule 'sqlalchemy.dialects.sybase.pyodbc' C:\Python26\lib\site-packages\sqlalchemy\dialects\sybase\pyodbc.pyc imports=[('sqlalchemy.dialects.sybase.base.SybaseExecutionContext', 0, 0, -1), ('sqlalchemy.connectors.pyodbc.PyODBCConnector', 0, 0, -1), ('sqlalchemy.dialects.sybase.base.SybaseDialect', 0, 0, -1), ('sqlalchemy.dialects.sybase.base', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('decimal', 0, 0, -1), ('sqlalchemy.processors', 0, 0, -1), ('sqlalchemy.connectors.pyodbc', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.sql.bindparam: None -> None
  DEL sqlalchemy.sql.bindparam
sqlalchemy.engine.reflection: None -> <PyModule 'sqlalchemy.engine.reflection' C:\Python26\lib\site-packages\sqlalchemy\engine\reflection.pyc imports=[('', 0, 0, 2), ('sql', 0, 0, 2), ('inspection', 0, 0, 2), ('util.deprecated', 0, 0, 2), ('sql.type_api', 0, 0, 2), ('util', 0, 0, 2), ('base.Connectable', 0, 0, 1), ('sql.schema', 0, 0, 2), ('util.topological', 0, 0, 2), ('exc', 0, 0, 2), ('sql.type_api.TypeEngine', 0, 0, 2), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.sybase.re: None -> None
sqlalchemy.engine.default: None -> <PyModule 'sqlalchemy.engine.default' C:\Python26\lib\site-packages\sqlalchemy\engine\default.pyc imports=[('result', 0, 0, 1), ('re', 0, 0, -1), ('interfaces', 0, 0, 1), ('weakref', 0, 0, -1), ('', 0, 0, 2), ('sql', 0, 0, 2), ('', 0, 0, 1), ('event', 0, 0, 2), ('pool', 0, 0, 2), ('reflection', 0, 0, 1), ('types', 0, 0, 2), ('util', 0, 0, 2), ('sql.expression', 0, 0, 2), ('random', 0, 0, -1), ('exc', 0, 0, 2), ('codecs', 0, 0, -1), ('processors', 0, 0, 2), ('sql.compiler', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.dialects.sybase.operator: None -> None
sqlalchemy.sql.text: None -> None
  DEL sqlalchemy.sql.text
sqlalchemy.util.deprecated: None -> None
  DEL sqlalchemy.util.deprecated
sqlalchemy.engine.random: None -> None
sqlalchemy.engine.codecs: None -> None
sqlalchemy.dialects.sybase.Sybase: None -> None
Sybase: None -> None
  DEL Sybase
sqlalchemy.connectors: None -> <PkgModule 'sqlalchemy.connectors' C:\Python26\lib\site-packages\sqlalchemy\connectors\__init__.pyc imports=[] binaries=[] datas=[]>
sqlalchemy.connectors.pyodbc: None -> <PyModule 'sqlalchemy.connectors.pyodbc' C:\Python26\lib\site-packages\sqlalchemy\connectors\pyodbc.pyc imports=[('', 0, 0, 2), ('re', 0, 0, -1), ('sys', 0, 0, -1), ('', 0, 0, 1), ('util', 0, 0, 2), ('Connector', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.sybase.decimal: None -> None
sqlalchemy.connectors.re: None -> None
sqlalchemy.connectors.sys: None -> None
sqlalchemy.connectors.Connector: None -> None
Connector: None -> None
  DEL Connector
sqlalchemy.dialects.oracle.sqlalchemy: None -> None
sqlalchemy.dialects.oracle.zxjdbc: None -> <PyModule 'sqlalchemy.dialects.oracle.zxjdbc' C:\Python26\lib\site-packages\sqlalchemy\dialects\oracle\zxjdbc.pyc imports=[('java.sql', 1, 0, -1), ('sqlalchemy.connectors.zxJDBC.ZxJDBCConnector', 0, 0, -1), ('com.ziclix.python.sql', 1, 0, -1), ('decimal', 0, 0, -1), ('java.sql.SQLException', 1, 0, -1), ('sqlalchemy.util', 0, 0, -1), ('sqlalchemy.sql.expression', 0, 0, -1), ('sqlalchemy.connectors.zxJDBC', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.OracleCompiler', 0, 0, -1), ('com.ziclix.python.sql.handler', 1, 0, -1), ('collections', 0, 0, -1), ('com.ziclix.python.sql.handler.OracleDataHandler', 1, 0, -1), ('sqlalchemy.engine', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.OracleDialect', 0, 0, -1), ('re', 0, 0, -1), ('sqlalchemy.sql', 0, 0, -1), ('sqlalchemy.dialects.oracle.base', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('com.ziclix.python.sql.zxJDBC', 1, 0, -1), ('sqlalchemy.engine.result', 0, 0, -1), ('sqlalchemy.dialects.oracle.base.OracleExecutionContext', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.dialects.oracle.cx_oracle: None -> <PyModule 'sqlalchemy.dialects.oracle.cx_oracle' C:\Python26\lib\site-packages\sqlalchemy\dialects\oracle\cx_oracle.pyc imports=[('sqlalchemy.types', 0, 0, 0), ('sqlalchemy.exc', 0, 0, 0), ('cx_Oracle', 1, 0, 0), ('sqlalchemy.util', 0, 0, 0), ('sqlalchemy', 0, 0, 0), ('__future__', 0, 0, 0), ('collections', 0, 0, 0), ('', 0, 0, 1), ('__future__.absolute_import', 0, 0, 0), ('decimal', 0, 0, 0), ('re', 0, 0, 0), ('random', 0, 0, 0), ('base.OracleCompiler', 0, 0, 1), ('base.OracleDialect', 0, 0, 1), ('engine', 0, 0, 3), ('base.OracleExecutionContext', 0, 0, 1), ('sqlalchemy.processors', 0, 0, 0), ('engine.result', 0, 0, 3), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.oracle.re: None -> None
sqlalchemy.dialects.oracle.java: None -> None
java: None -> None
  DEL java
sqlalchemy.connectors.zxJDBC: None -> <PyModule 'sqlalchemy.connectors.zxJDBC' C:\Python26\lib\site-packages\sqlalchemy\connectors\zxJDBC.pyc imports=[('', 0, 0, 1), ('Connector', 0, 0, 1), ('sys', 0, 0, -1), ('com.ziclix.python.sql', 1, 0, -1), ('com.ziclix.python.sql.zxJDBC', 1, 0, -1)] binaries=[] datas=[]>
sqlalchemy.dialects.oracle.com: None -> None
com: None -> None
  DEL com
sqlalchemy.dialects.oracle.decimal: None -> None
java: None -> None
  DEL java
com: None -> None
  DEL com
sqlalchemy.dialects.oracle.collections: None -> None
com: None -> None
  DEL com
com: None -> None
  DEL com
Connector: None -> None
  DEL Connector
sqlalchemy.connectors.com: None -> None
com: None -> None
  DEL com
com: None -> None
  DEL com
cx_Oracle: None -> None
  DEL cx_Oracle
sqlalchemy.dialects.sqlite.sqlalchemy: None -> None
sqlalchemy.dialects.sqlite.pysqlite: None -> <PyModule 'sqlalchemy.dialects.sqlite.pysqlite' C:\Python26\lib\site-packages\sqlalchemy\dialects\sqlite\pysqlite.pyc imports=[('sqlite3', 1, 1, -1), ('pysqlite2.dbapi2', 1, 0, -1), ('pysqlite2', 1, 0, -1), ('os', 0, 0, -1), ('sqlite3.dbapi2', 1, 1, -1), ('sqlalchemy.dialects.sqlite.base', 0, 0, -1), ('sqlalchemy.pool', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('sqlalchemy.exc', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.DATE', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.DATETIME', 0, 0, -1), ('sqlalchemy.util', 0, 0, -1), ('sqlalchemy.dialects.sqlite.base.SQLiteDialect', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.dialects.sqlite.pysqlcipher: None -> <PyModule 'sqlalchemy.dialects.sqlite.pysqlcipher' C:\Python26\lib\site-packages\sqlalchemy\dialects\sqlite\pysqlcipher.pyc imports=[('pysqlite.SQLiteDialect_pysqlite', 0, 0, 1), ('__future__', 0, 0, 0), ('pysqlcipher.dbapi2', 1, 0, 0), ('pool', 0, 0, 3), ('__future__.absolute_import', 0, 0, 0), ('', 0, 0, 3), ('engine.url', 0, 0, 3), ('engine', 0, 0, 3), ('pysqlite', 0, 0, 1), ('pysqlcipher', 1, 0, 0)] binaries=[] datas=[]>
sqlalchemy.dialects.sqlite.datetime: None -> None
sqlalchemy.dialects.sqlite.re: None -> None
sqlalchemy.dialects.sqlite.sqlite3: None -> None
sqlalchemy.dialects.sqlite.pysqlite2: None -> None
pysqlite2: None -> None
  DEL pysqlite2
pysqlite2: None -> None
  DEL pysqlite2
sqlalchemy.dialects.sqlite.os: None -> None
pysqlcipher: None -> None
  DEL pysqlcipher
pysqlcipher: None -> None
  DEL pysqlcipher
sqlalchemy.dialects.mssql.sqlalchemy: None -> None
sqlalchemy.dialects.mssql.adodbapi: None -> <PyModule 'sqlalchemy.dialects.mssql.adodbapi' C:\Python26\lib\site-packages\sqlalchemy\dialects\mssql\adodbapi.pyc imports=[('sqlalchemy.dialects.mssql.base.MSDialect', 0, 0, -1), ('sys', 0, 0, -1), ('adodbapi', 1, 0, -1), ('sqlalchemy.dialects.mssql.base.MSDateTime', 0, 0, -1), ('sqlalchemy.util', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('datetime', 0, 0, -1), ('sqlalchemy.dialects.mssql.base', 0, 0, -1)] binaries=[] datas=[]>
sqlalchemy.dialects.mssql.pymssql: None -> <PyModule 'sqlalchemy.dialects.mssql.pymssql' C:\Python26\lib\site-packages\sqlalchemy\dialects\mssql\pymssql.pyc imports=[('re', 0, 0, -1), ('processors', 0, 0, 3), ('util', 0, 0, 3), ('types', 0, 0, 3), ('base.MSDialect', 0, 0, 1), ('', 0, 0, 3), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.mssql.pyodbc: None -> <PyModule 'sqlalchemy.dialects.mssql.pyodbc' C:\Python26\lib\site-packages\sqlalchemy\dialects\mssql\pyodbc.pyc imports=[('base.VARBINARY', 0, 0, 1), ('util', 0, 0, 3), ('types', 0, 0, 3), ('connectors.pyodbc.PyODBCConnector', 0, 0, 3), ('decimal', 0, 0, -1), ('base.MSDialect', 0, 0, 1), ('', 0, 0, 3), ('connectors.pyodbc', 0, 0, 3), ('base', 0, 0, 1), ('base.MSExecutionContext', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.mssql.zxjdbc: None -> <PyModule 'sqlalchemy.dialects.mssql.zxjdbc' C:\Python26\lib\site-packages\sqlalchemy\dialects\mssql\zxjdbc.pyc imports=[('engine', 0, 0, 3), ('connectors.zxJDBC', 0, 0, 3), ('base.MSDialect', 0, 0, 1), ('', 0, 0, 3), ('connectors.zxJDBC.ZxJDBCConnector', 0, 0, 3), ('base', 0, 0, 1), ('base.MSExecutionContext', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.mssql.mxodbc: None -> <PyModule 'sqlalchemy.dialects.mssql.mxodbc' C:\Python26\lib\site-packages\sqlalchemy\dialects\mssql\mxodbc.pyc imports=[('connectors.mxodbc', 0, 0, 3), ('connectors.mxodbc.MxODBCConnector', 0, 0, 3), ('base.MSSQLStrictCompiler', 0, 0, 1), ('base._MSTime', 0, 0, 1), ('types', 0, 0, 3), ('base._MSDateTime', 0, 0, 1), ('base._MSDate', 0, 0, 1), ('pyodbc._MSNumeric_pyodbc', 0, 0, 1), ('pyodbc.MSExecutionContext_pyodbc', 0, 0, 1), ('pyodbc', 0, 0, 1), ('', 0, 0, 3), ('base.MSDialect', 0, 0, 1), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.mssql.information_schema: None -> <PyModule 'sqlalchemy.dialects.mssql.information_schema' C:\Python26\lib\site-packages\sqlalchemy\dialects\mssql\information_schema.pyc imports=[('types.String', 0, 0, 3), ('Table', 0, 0, 3), ('util', 0, 0, 3), ('MetaData', 0, 0, 3), ('types', 0, 0, 3), ('', 1, 0, 1), ('types.Integer', 0, 0, 3), ('cast', 0, 0, 3), ('Column', 0, 0, 3), ('sql', 0, 0, 3), ('base', 1, 0, 1), ('types.Unicode', 0, 0, 3), ('sql.expression', 0, 0, 3), ('ext.compiler', 0, 0, 3), ('types.TypeDecorator', 0, 0, 3), ('', 0, 0, 3), ('ext.compiler.compiles', 0, 0, 3), ('types.UnicodeText', 0, 0, 3)] binaries=[] datas=[]>
sqlalchemy.dialects.mssql.datetime: None -> None
sqlalchemy.dialects.mssql.re: None -> None
sqlalchemy.util.update_wrapper: None -> None
  DEL sqlalchemy.util.update_wrapper
sqlalchemy.dialects.mssql.operator: None -> None
sqlalchemy.Table: None -> None
Table: None -> None
  DEL Table
sqlalchemy.MetaData: None -> None
MetaData: None -> None
  DEL MetaData
sqlalchemy.cast: None -> None
cast: None -> None
  DEL cast
sqlalchemy.Column: None -> None
Column: None -> None
  DEL Column
sqlalchemy.ext: None -> <PkgModule 'sqlalchemy.ext' C:\Python26\lib\site-packages\sqlalchemy\ext\__init__.pyc imports=[('', 0, 0, 2), ('util', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.ext.compiler: None -> <PyModule 'sqlalchemy.ext.compiler' C:\Python26\lib\site-packages\sqlalchemy\ext\compiler.pyc imports=[('sql', 0, 0, 2), ('', 0, 0, 2), ('exc', 0, 0, 2), ('sql.visitors', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.dialects.mssql.sys: None -> None
sqlalchemy.dialects.mssql.decimal: None -> None
sqlalchemy.connectors.mxodbc: None -> <PyModule 'sqlalchemy.connectors.mxodbc' C:\Python26\lib\site-packages\sqlalchemy\connectors\mxodbc.pyc imports=[('mx.ODBC.Error.Warning', 1, 0, -1), ('mx.ODBC', 1, 1, -1), ('re', 0, 0, -1), ('sys', 0, 0, -1), ('', 0, 0, 1), ('warnings', 0, 0, -1), ('mx.ODBC.Error', 1, 0, -1), ('mx.ODBC.Windows', 1, 1, -1), ('mx.ODBC', 1, 0, -1), ('mx.ODBC.ProgrammingError', 1, 0, -1), ('mx.ODBC.InterfaceError', 1, 0, -1), ('Connector', 0, 0, 1), ('mx.ODBC.iODBC', 1, 1, -1), ('mx.ODBC.unixODBC', 1, 1, -1)] binaries=[] datas=[]>
sqlalchemy.connectors.mx: None -> None
mx: None -> None
  DEL mx
mx: None -> None
  DEL mx
sqlalchemy.connectors.warnings: None -> None
mx: None -> None
  DEL mx
mx: None -> None
  DEL mx
mx: None -> None
  DEL mx
mx: None -> None
  DEL mx
mx: None -> None
  DEL mx
Connector: None -> None
  DEL Connector
mx: None -> None
  DEL mx
mx: None -> None
  DEL mx
sqlalchemy.dialects.firebird.sqlalchemy: None -> None
sqlalchemy.dialects.firebird.kinterbasdb: None -> <PyModule 'sqlalchemy.dialects.firebird.kinterbasdb' C:\Python26\lib\site-packages\sqlalchemy\dialects\firebird\kinterbasdb.pyc imports=[('re', 0, 0, -1), ('decimal', 0, 0, -1), ('util', 0, 0, 3), ('types', 0, 0, 3), ('re.match', 0, 0, -1), ('base.FBDialect', 0, 0, 1), ('', 0, 0, 3), ('base', 0, 0, 1), ('base.FBExecutionContext', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.firebird.fdb: None -> <PyModule 'sqlalchemy.dialects.firebird.fdb' C:\Python26\lib\site-packages\sqlalchemy\dialects\firebird\fdb.pyc imports=[('', 0, 0, 3), ('util', 0, 0, 3), ('kinterbasdb', 0, 0, 1), ('kinterbasdb.FBDialect_kinterbasdb', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.firebird.datetime: None -> None
sqlalchemy.dialects.firebird.re: None -> None
sqlalchemy.dialects.firebird.decimal: None -> None
sqlalchemy.dialects.mysql.zxjdbc: None -> <PyModule 'sqlalchemy.dialects.mysql.zxjdbc' C:\Python26\lib\site-packages\sqlalchemy\dialects\mysql\zxjdbc.pyc imports=[('re', 0, 0, -1), ('util', 0, 0, 3), ('types', 0, 0, 3), ('connectors.zxJDBC', 0, 0, 3), ('base.MySQLExecutionContext', 0, 0, 1), ('base.BIT', 0, 0, 1), ('', 0, 0, 3), ('connectors.zxJDBC.ZxJDBCConnector', 0, 0, 3), ('base.MySQLDialect', 0, 0, 1), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.mysql.gaerdbms: None -> <PyModule 'sqlalchemy.dialects.mysql.gaerdbms' C:\Python26\lib\site-packages\sqlalchemy\dialects\mysql\gaerdbms.pyc imports=[('re', 0, 0, -1), ('google.appengine.api.rdbms_mysqldb', 1, 1, -1), ('google.storage.speckle.python.api.rdbms_googleapi', 1, 0, -1), ('os', 0, 0, -1), ('pool', 0, 0, 3), ('google.appengine.api', 1, 1, -1), ('google.storage.speckle.python.api.rdbms_apiproxy', 1, 1, -1), ('google.appengine.api.apiproxy_stub_map', 1, 0, -1), ('sqlalchemy.util', 0, 0, -1), ('google.storage.speckle.python.api', 1, 1, -1), ('mysqldb.MySQLDialect_mysqldb', 0, 0, 1), ('sqlalchemy.util.warn_deprecated', 0, 0, -1), ('pool.NullPool', 0, 0, 3), ('google.storage.speckle.python.api', 1, 0, -1), ('google.appengine.api', 1, 0, -1), ('mysqldb', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.mysql.pymysql: None -> <PyModule 'sqlalchemy.dialects.mysql.pymysql' C:\Python26\lib\site-packages\sqlalchemy\dialects\mysql\pymysql.pyc imports=[('util', 0, 0, 3), ('mysqldb.MySQLDialect_mysqldb', 0, 0, 1), ('util.py3k', 0, 0, 3), ('mysqldb', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.mysql.cymysql: None -> <PyModule 'sqlalchemy.dialects.mysql.cymysql' C:\Python26\lib\site-packages\sqlalchemy\dialects\mysql\cymysql.pyc imports=[('re', 0, 0, -1), ('util', 0, 0, 3), ('base.BIT', 0, 0, 1), ('mysqldb.MySQLDialect_mysqldb', 0, 0, 1), ('', 0, 0, 3), ('mysqldb', 0, 0, 1), ('base.MySQLDialect', 0, 0, 1), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.mysql.oursql: None -> <PyModule 'sqlalchemy.dialects.mysql.oursql' C:\Python26\lib\site-packages\sqlalchemy\dialects\mysql\oursql.pyc imports=[('re', 0, 0, -1), ('util', 0, 0, 3), ('types', 0, 0, 3), ('base.MySQLExecutionContext', 0, 0, 1), ('base.BIT', 0, 0, 1), ('', 0, 0, 3), ('base.MySQLDialect', 0, 0, 1), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.mysql.mysqlconnector: None -> <PyModule 'sqlalchemy.dialects.mysql.mysqlconnector' C:\Python26\lib\site-packages\sqlalchemy\dialects\mysql\mysqlconnector.pyc imports=[('re', 0, 0, -1), ('util', 0, 0, 3), ('base.MySQLCompiler', 0, 0, 1), ('mysql.connector', 1, 0, -1), ('base.MySQLIdentifierPreparer', 0, 0, 1), ('base.MySQLExecutionContext', 0, 0, 1), ('base.BIT', 0, 0, 1), ('mysql', 1, 0, -1), ('', 0, 0, 3), ('base.MySQLDialect', 0, 0, 1), ('mysql.connector.constants', 1, 1, -1), ('mysql.connector.constants.ClientFlag', 1, 1, -1), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.mysql.pyodbc: None -> <PyModule 'sqlalchemy.dialects.mysql.pyodbc' C:\Python26\lib\site-packages\sqlalchemy\dialects\mysql\pyodbc.pyc imports=[('re', 0, 0, -1), ('util', 0, 0, 3), ('connectors.pyodbc.PyODBCConnector', 0, 0, 3), ('base.MySQLExecutionContext', 0, 0, 1), ('', 0, 0, 3), ('connectors.pyodbc', 0, 0, 3), ('base.MySQLDialect', 0, 0, 1), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.mysql.mysqldb: None -> <PyModule 'sqlalchemy.dialects.mysql.mysqldb' C:\Python26\lib\site-packages\sqlalchemy\dialects\mysql\mysqldb.pyc imports=[('re', 0, 0, -1), ('util', 0, 0, 3), ('base.MySQLCompiler', 0, 0, 1), ('base.MySQLIdentifierPreparer', 0, 0, 1), ('sql', 0, 0, 3), ('base.MySQLExecutionContext', 0, 0, 1), ('', 0, 0, 3), ('base.TEXT', 0, 0, 1), ('base.MySQLDialect', 0, 0, 1), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.mysql.sys: None -> None
sqlalchemy.dialects.mysql.array: None -> None
sqlalchemy.dialects.mysql.datetime: None -> None
sqlalchemy.dialects.mysql.re: None -> None
sqlalchemy.dialects.mysql.google: None -> None
google: None -> None
  DEL google
google: None -> None
  DEL google
sqlalchemy.dialects.mysql.os: None -> None
google: None -> None
  DEL google
google: None -> None
  DEL google
google: None -> None
  DEL google
sqlalchemy.dialects.mysql.sqlalchemy: None -> None
google: None -> None
  DEL google
sqlalchemy.util.warn_deprecated: None -> None
  DEL sqlalchemy.util.warn_deprecated
google: None -> None
  DEL google
google: None -> None
  DEL google
sqlalchemy.util.py3k: None -> None
  DEL sqlalchemy.util.py3k
sqlalchemy.dialects.mysql.mysql: None -> None
mysql: None -> None
  DEL mysql
mysql: None -> None
  DEL mysql
mysql: None -> None
  DEL mysql
mysql: None -> None
  DEL mysql
sqlalchemy.dialects.postgresql.ranges: None -> <PyModule 'sqlalchemy.dialects.postgresql.ranges' C:\Python26\lib\site-packages\sqlalchemy\dialects\postgresql\ranges.pyc imports=[('base.ischema_names', 0, 0, 1), ('', 0, 0, 3), ('types', 0, 0, 3), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.postgresql.json: None -> <PyModule 'sqlalchemy.dialects.postgresql.json' C:\Python26\lib\site-packages\sqlalchemy\dialects\postgresql\json.pyc imports=[('sql.operators', 0, 0, 3), ('json', 0, 0, 0), ('__future__', 0, 0, 0), ('base.ischema_names', 0, 0, 1), ('types', 0, 0, 3), ('__future__.absolute_import', 0, 0, 0), ('sql.operators.custom_op', 0, 0, 3), ('sql', 0, 0, 3), ('sql.default_comparator', 0, 0, 3), ('util', 0, 0, 3), ('', 0, 0, 3), ('sql.elements', 0, 0, 3), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.postgresql.psycopg2cffi: None -> <PyModule 'sqlalchemy.dialects.postgresql.psycopg2cffi' C:\Python26\lib\site-packages\sqlalchemy\dialects\postgresql\psycopg2cffi.pyc imports=[('psycopg2.PGDialect_psycopg2', 0, 0, 1), ('psycopg2', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.postgresql.hstore: None -> <PyModule 'sqlalchemy.dialects.postgresql.hstore' C:\Python26\lib\site-packages\sqlalchemy\dialects\postgresql\hstore.pyc imports=[('sql.operators', 0, 0, 3), ('re', 0, 0, -1), ('base.ischema_names', 0, 0, 1), ('types', 0, 0, 3), ('sql.operators.custom_op', 0, 0, 3), ('sql', 0, 0, 3), ('util', 0, 0, 3), ('', 0, 0, 3), ('sql.functions', 0, 0, 3), ('base.ARRAY', 0, 0, 1), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.postgresql.constraints: None -> <PyModule 'sqlalchemy.dialects.postgresql.constraints' C:\Python26\lib\site-packages\sqlalchemy\dialects\postgresql\constraints.pyc imports=[('util', 0, 0, 3), ('sql.expression', 0, 0, 3), ('sql', 0, 0, 3), ('sql.schema.ColumnCollectionConstraint', 0, 0, 3), ('', 0, 0, 3), ('sql.schema', 0, 0, 3)] binaries=[] datas=[]>
sqlalchemy.dialects.postgresql.pypostgresql: None -> <PyModule 'sqlalchemy.dialects.postgresql.pypostgresql' C:\Python26\lib\site-packages\sqlalchemy\dialects\postgresql\pypostgresql.pyc imports=[('processors', 0, 0, 3), ('base.PGDialect', 0, 0, 1), ('util', 0, 0, 3), ('postgresql.driver', 1, 0, -1), ('types', 0, 0, 3), ('postgresql.driver.dbapi20', 1, 0, -1), ('', 0, 0, 3), ('base.PGExecutionContext', 0, 0, 1), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.postgresql.pg8000: None -> <PyModule 'sqlalchemy.dialects.postgresql.pg8000' C:\Python26\lib\site-packages\sqlalchemy\dialects\postgresql\pg8000.pyc imports=[('re', 0, 0, -1), ('exc', 0, 0, 3), ('base._DECIMAL_TYPES', 0, 0, 1), ('base.PGDialect', 0, 0, 1), ('util', 0, 0, 3), ('sqlalchemy.dialects.postgresql.json.JSON', 0, 0, -1), ('types', 0, 0, 3), ('base.PGIdentifierPreparer', 0, 0, 1), ('base.PGCompiler', 0, 0, 1), ('base._FLOAT_TYPES', 0, 0, 1), ('sqlalchemy.dialects.postgresql.json', 0, 0, -1), ('processors', 0, 0, 3), ('', 0, 0, 3), ('base.PGExecutionContext', 0, 0, 1), ('decimal', 0, 0, -1), ('base._INT_TYPES', 0, 0, 1), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.postgresql.psycopg2: None -> <PyModule 'sqlalchemy.dialects.postgresql.psycopg2' C:\Python26\lib\site-packages\sqlalchemy\dialects\postgresql\psycopg2.pyc imports=[('uuid.UUID', 0, 0, 0), ('json.JSON', 0, 0, 1), ('__future__.absolute_import', 0, 0, 0), ('sql.expression', 0, 0, 3), ('re', 0, 0, 0), ('base._FLOAT_TYPES', 0, 0, 1), ('exc', 0, 0, 3), ('base._DECIMAL_TYPES', 0, 0, 1), ('util', 0, 0, 3), ('types', 0, 0, 3), ('decimal', 0, 0, 0), ('psycopg2.extensions', 1, 0, 0), ('sql', 0, 0, 3), ('engine', 0, 0, 3), ('base.ENUM', 0, 0, 1), ('base.PGExecutionContext', 0, 0, 1), ('json', 0, 0, 1), ('base.ARRAY', 0, 0, 1), ('base', 0, 0, 1), ('psycopg2', 1, 0, 0), ('base.PGIdentifierPreparer', 0, 0, 1), ('base.PGCompiler', 0, 0, 1), ('psycopg2.extras', 1, 0, 0), ('hstore', 0, 0, 1), ('logging', 0, 0, 0), ('hstore.HSTORE', 0, 0, 1), ('base._INT_TYPES', 0, 0, 1), ('engine.result', 0, 0, 3), ('processors', 0, 0, 3), ('__future__', 0, 0, 0), ('base.PGDialect', 0, 0, 1), ('json.JSONB', 0, 0, 1), ('uuid', 0, 0, 0), ('base.UUID', 0, 0, 1), ('', 0, 0, 3)] binaries=[] datas=[]>
sqlalchemy.dialects.postgresql.zxjdbc: None -> <PyModule 'sqlalchemy.dialects.postgresql.zxjdbc' C:\Python26\lib\site-packages\sqlalchemy\dialects\postgresql\zxjdbc.pyc imports=[('base.PGDialect', 0, 0, 1), ('com.ziclix.python.sql.handler.PostgresqlDataHandler', 1, 0, -1), ('connectors.zxJDBC', 0, 0, 3), ('connectors.zxJDBC.ZxJDBCConnector', 0, 0, 3), ('base.PGExecutionContext', 0, 0, 1), ('com.ziclix.python.sql.handler', 1, 0, -1), ('base', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.dialects.postgresql.sqlalchemy: None -> None
sqlalchemy.dialects.postgresql.collections: None -> None
sqlalchemy.sql.default_comparator: None -> <PyModule 'sqlalchemy.sql.default_comparator' C:\Python26\lib\site-packages\sqlalchemy\sql\default_comparator.pyc imports=[('elements.UnaryExpression', 0, 0, 1), ('elements._is_literal', 0, 0, 1), ('elements._clause_element_as_expr', 0, 0, 1), ('selectable', 0, 0, 1), ('elements._literal_as_text', 0, 0, 1), ('elements.and_', 0, 0, 1), ('elements.ClauseList', 0, 0, 1), ('elements.False_', 0, 0, 1), ('elements._const_expr', 0, 0, 1), ('', 0, 0, 2), ('selectable.Selectable', 0, 0, 1), ('operators', 0, 0, 1), ('selectable.ScalarSelect', 0, 0, 1), ('elements.ClauseElement', 0, 0, 1), ('elements.or_', 0, 0, 1), ('elements.TextClause', 0, 0, 1), ('elements.True_', 0, 0, 1), ('elements.BinaryExpression', 0, 0, 1), ('elements.BindParameter', 0, 0, 1), ('', 0, 0, 1), ('elements.collate', 0, 0, 1), ('elements', 0, 0, 1), ('util', 0, 0, 2), ('selectable.Alias', 0, 0, 1), ('type_api', 0, 0, 1), ('elements.Null', 0, 0, 1), ('elements.ColumnElement', 0, 0, 1), ('selectable.SelectBase', 0, 0, 1), ('exc', 0, 0, 2)] binaries=[] datas=[]>
sqlalchemy.dialects.postgresql.uuid: None -> None
uuid: None -> <PyModule 'uuid' C:\Python26\lib\uuid.pyc imports=[('ctypes', 0, 0, -1), ('hashlib.sha1', 1, 0, -1), ('sys', 0, 0, -1), ('hashlib', 1, 0, -1), ('os', 0, 1, -1), ('ctypes.util', 0, 0, -1), ('re', 1, 0, -1), ('win32wnet', 1, 0, -1), ('netbios', 1, 0, -1), ('ctypes', 1, 0, -1), ('random', 1, 1, -1), ('time', 1, 0, -1), ('sys', 1, 0, -1), ('hashlib.md5', 1, 0, -1), ('socket', 1, 0, -1), ('os', 1, 0, -1), ('random', 1, 0, -1)] binaries=[] datas=[]>
sqlalchemy.dialects.postgresql.re: None -> None
ctypes.util: None -> <PyModule 'ctypes.util' C:\Python26\lib\ctypes\util.pyc imports=[('struct', 1, 0, -1), ('sys', 0, 0, -1), ('errno', 0, 1, -1), ('os', 0, 0, -1), ('ctypes.macholib.dyld', 0, 1, -1), ('re', 0, 1, -1), ('tempfile', 0, 1, -1), ('ctypes.macholib.dyld.dyld_find', 0, 1, -1), ('ctypes', 1, 0, -1), ('imp', 1, 0, -1), ('ctypes.cdll', 1, 0, -1)] binaries=[] datas=[]>
win32wnet: None -> <ExtensionModule 'win32wnet' C:\Python26\lib\site-packages\win32\win32wnet.pyd imports=[] binaries=[] datas=[]>
netbios: None -> <PyModule 'netbios' C:\Python26\lib\site-packages\win32\lib\netbios.pyc imports=[('sys', 0, 0, -1), ('struct', 0, 0, -1), ('win32wnet', 0, 0, -1)] binaries=[] datas=[]>
ctypes.errno: None -> None
ctypes.macholib: None -> <PkgModule 'ctypes.macholib' C:\Python26\lib\ctypes\macholib\__init__.pyc imports=[] binaries=[] datas=[]>
ctypes.macholib.dyld: None -> <PyModule 'ctypes.macholib.dyld' C:\Python26\lib\ctypes\macholib\dyld.pyc imports=[('framework', 0, 0, -1), ('itertools', 0, 0, -1), ('dylib.dylib_info', 0, 0, -1), ('os', 0, 0, -1), ('itertools.*', 0, 0, -1), ('dylib', 0, 0, -1), ('framework.framework_info', 0, 0, -1)] binaries=[] datas=[]>
ctypes.re: None -> None
ctypes.tempfile: None -> None
ctypes.imp: None -> None
ctypes.cdll: None -> None
  DEL ctypes.cdll
ctypes.macholib.framework: None -> <PyModule 'ctypes.macholib.framework' C:\Python26\lib\ctypes\macholib\framework.pyc imports=[('re', 0, 0, -1)] binaries=[] datas=[]>
ctypes.macholib.itertools: None -> None
ctypes.macholib.dylib: None -> <PyModule 'ctypes.macholib.dylib' C:\Python26\lib\ctypes\macholib\dylib.pyc imports=[('re', 0, 0, -1)] binaries=[] datas=[]>
ctypes.macholib.os: None -> None
ctypes.macholib.re: None -> None
json: None -> <PkgModule 'json' C:\Python26\lib\json\__init__.pyc imports=[('encoder', 0, 0, 1), ('encoder.JSONEncoder', 0, 0, 1), ('decoder.JSONDecoder', 0, 0, 1), ('decoder', 0, 0, 1)] binaries=[] datas=[]>
json.encoder: None -> <PyModule 'json.encoder' C:\Python26\lib\json\encoder.pyc imports=[('_json.encode_basestring_ascii', 0, 0, -1), ('_json', 0, 0, -1), ('re', 0, 0, -1), ('math', 0, 0, -1)] binaries=[] datas=[]>
json.decoder: None -> <PyModule 'json.decoder' C:\Python26\lib\json\decoder.pyc imports=[('re', 0, 0, -1), ('json.scanner', 0, 0, -1), ('sys', 0, 0, -1), ('_json.scanstring', 0, 0, -1), ('json.scanner.pattern', 0, 0, -1), ('json.scanner.Scanner', 0, 0, -1), ('_json', 0, 0, -1)] binaries=[] datas=[]>
json._json: None -> None
_json: None -> <BuiltinModule '_json' None imports=[] binaries=[] datas=[]>
json.re: None -> None
json.math: None -> None
json.json: None -> None
json.scanner: None -> <PyModule 'json.scanner' C:\Python26\lib\json\scanner.pyc imports=[('re', 0, 0, -1), ('re.MULTILINE', 0, 0, -1), ('sre_parse', 0, 0, -1), ('re.DOTALL', 0, 0, -1), ('re.VERBOSE', 0, 0, -1), ('sre_constants', 0, 0, -1), ('sre_compile', 0, 0, -1), ('sre_constants.BRANCH', 0, 0, -1), ('sre_constants.SUBPATTERN', 0, 0, -1)] binaries=[] datas=[]>
json.sys: None -> None
json.sre_parse: None -> None
json.sre_constants: None -> None
json.sre_compile: None -> None
psycopg2: None -> None
  DEL psycopg2
psycopg2: None -> None
  DEL psycopg2
psycopg2: None -> None
  DEL psycopg2
sqlalchemy.dialects.postgresql.postgresql: None -> None
postgresql: None -> None
  DEL postgresql
postgresql: None -> None
  DEL postgresql
sqlalchemy.dialects.postgresql.decimal: None -> None
sqlalchemy.dialects.postgresql.com: None -> None
com: None -> None
  DEL com
com: None -> None
  DEL com
dataset.re: None -> None
sqlalchemy.Integer: None -> None
  DEL sqlalchemy.Integer
dataset.persistence.alembic: None -> None
alembic: None -> <PkgModule 'alembic' C:\Python26\lib\site-packages\alembic\__init__.pyc imports=[('context', 0, 0, 1), ('sys', 0, 0, -1), ('os.path', 0, 0, -1), ('os', 0, 0, -1), ('', 0, 0, 1), ('runtime.migration', 0, 0, 1), ('runtime.environment', 0, 0, 1), ('runtime', 0, 0, 1), ('op', 0, 0, 1)] binaries=[] datas=[]>
alembic.migration: None -> None
  DEL alembic.migration
dataset.persistence.threading: None -> None
alembic.operations: None -> <PkgModule 'alembic.operations' C:\Python26\lib\site-packages\alembic\operations\__init__.pyc imports=[('toimpl', 0, 0, 1), ('base.Operations', 0, 0, 1), ('', 0, 0, 1), ('ops', 0, 0, 1), ('ops.MigrateOperation', 0, 0, 1), ('base', 0, 0, 1), ('base.BatchOperations', 0, 0, 1)] binaries=[] datas=[]>
alembic.operations.Operations: None -> None
  DEL alembic.operations.Operations
sqlalchemy.create_engine: None -> None
  DEL sqlalchemy.create_engine
alembic.migration: None -> None
  DEL alembic.migration
dataset.persistence.re: None -> None
sqlalchemy.util.safe_reraise: None -> None
  DEL sqlalchemy.util.safe_reraise
sqlalchemy.String: None -> None
  DEL sqlalchemy.String
sqlalchemy.sql.text: None -> None
  DEL sqlalchemy.sql.text
alembic.context: None -> <PyModule 'alembic.context' C:\Python26\lib\site-packages\alembic\context.pyc imports=[('runtime.environment.EnvironmentContext', 0, 0, 1), ('runtime.environment', 0, 0, 1)] binaries=[] datas=[]>
alembic.sys: None -> None
alembic.os: None -> None
alembic.runtime: None -> <PkgModule 'alembic.runtime' C:\Python26\lib\site-packages\alembic\runtime\__init__.pyc imports=[] binaries=[] datas=[]>
alembic.runtime.migration: None -> <PyModule 'alembic.runtime.migration' C:\Python26\lib\site-packages\alembic\runtime\migration.pyc imports=[('contextlib', 0, 0, -1), ('sqlalchemy.engine.strategies', 0, 0, -1), ('sqlalchemy.engine', 0, 0, -1), ('sqlalchemy.String', 0, 0, -1), ('sys', 0, 0, -1), ('sqlalchemy.Column', 0, 0, -1), ('contextlib.contextmanager', 0, 0, -1), ('sqlalchemy.engine.strategies.MockEngineStrategy', 0, 0, -1), ('ddl', 0, 0, 2), ('sqlalchemy.MetaData', 0, 0, -1), ('util.compat.callable', 0, 0, 2), ('sqlalchemy', 0, 0, -1), ('logging', 0, 0, -1), ('util.compat.EncodedIO', 0, 0, 2), ('sqlalchemy.literal_column', 0, 0, -1), ('util.compat', 0, 0, 2), ('util', 0, 0, 2), ('sqlalchemy.Table', 0, 0, -1), ('', 0, 0, 2), ('sqlalchemy.engine.url', 0, 0, -1)] binaries=[] datas=[]>
alembic.runtime.environment: None -> <PyModule 'alembic.runtime.environment' C:\Python26\lib\site-packages\alembic\runtime\environment.pyc imports=[('operations', 0, 0, 2), ('migration.MigrationContext', 0, 0, 1), ('', 0, 0, 2), ('operations.Operations', 0, 0, 2), ('util', 0, 0, 2), ('migration', 0, 0, 1)] binaries=[] datas=[]>
alembic.op: None -> <PyModule 'alembic.op' C:\Python26\lib\site-packages\alembic\op.pyc imports=[('operations.base', 0, 0, 1), ('operations.base.Operations', 0, 0, 1)] binaries=[] datas=[]>
alembic.operations.Operations: None -> None
  DEL alembic.operations.Operations
alembic.util: None -> <PkgModule 'alembic.util' C:\Python26\lib\site-packages\alembic\util\__init__.pyc imports=[('langhelpers.to_tuple', 0, 0, 1), ('messaging.warn', 0, 0, 1), ('langhelpers._with_legacy_names', 0, 0, 1), ('sqla_compat', 0, 0, 1), ('messaging.write_outstream', 0, 0, 1), ('pyfiles.template_to_file', 0, 0, 1), ('pyfiles.edit', 0, 0, 1), ('langhelpers.memoized_property', 0, 0, 1), ('messaging.format_as_comma', 0, 0, 1), ('pyfiles.coerce_resource_to_filename', 0, 0, 1), ('langhelpers', 0, 0, 1), ('pyfiles.pyc_file_from_path', 0, 0, 1), ('sqla_compat.sqla_07', 0, 0, 1), ('langhelpers.Dispatcher', 0, 0, 1), ('langhelpers.rev_id', 0, 0, 1), ('messaging.msg', 0, 0, 1), ('sqla_compat.sqla_08', 0, 0, 1), ('messaging.status', 0, 0, 1), ('pyfiles.simple_pyc_file_from_path', 0, 0, 1), ('sqla_compat.sqla_100', 0, 0, 1), ('langhelpers.dedupe_tuple', 0, 0, 1), ('langhelpers.to_list', 0, 0, 1), ('sqla_compat.sqla_084', 0, 0, 1), ('sqla_compat.sqla_083', 0, 0, 1), ('sqla_compat.sqla_094', 0, 0, 1), ('langhelpers.ModuleClsProxy', 0, 0, 1), ('sqla_compat.sqla_09', 0, 0, 1), ('pyfiles.load_python_file', 0, 0, 1), ('pyfiles', 0, 0, 1), ('sqla_compat.sqla_105', 0, 0, 1), ('sqla_compat.sqla_092', 0, 0, 1), ('langhelpers.immutabledict', 0, 0, 1), ('sqla_compat.sqla_099', 0, 0, 1), ('messaging', 0, 0, 1), ('messaging.obfuscate_url_pw', 0, 0, 1), ('messaging.err', 0, 0, 1), ('langhelpers.asbool', 0, 0, 1), ('sqla_compat.sqla_079', 0, 0, 1)] binaries=[] datas=[]>
alembic.operations.toimpl: None -> <PyModule 'alembic.operations.toimpl' C:\Python26\lib\site-packages\alembic\operations\toimpl.pyc imports=[('sqlalchemy', 0, 0, -1), ('sqlalchemy.schema', 0, 0, -1), ('', 0, 0, 1), ('ops', 0, 0, 1), ('Operations', 0, 0, 1)] binaries=[] datas=[]>
alembic.operations.base: None -> <PyModule 'alembic.operations.base' C:\Python26\lib\site-packages\alembic\operations\base.pyc imports=[('sqlalchemy.sql.naming', 0, 0, -1), ('contextlib', 0, 0, -1), ('util.sqla_compat', 0, 0, 2), ('', 0, 0, 2), ('contextlib.contextmanager', 0, 0, -1), ('batch', 0, 0, 1), ('', 0, 0, 1), ('textwrap', 0, 0, -1), ('util', 0, 0, 2), ('util.compat', 0, 0, 2), ('util.compat.exec_', 0, 0, 2), ('inspect', 0, 0, -1), ('sqlalchemy.sql.naming.conv', 0, 0, -1), ('schemaobj', 0, 0, 1)] binaries=[] datas=[]>
alembic.operations.ops: None -> <PyModule 'alembic.operations.ops' C:\Python26\lib\site-packages\alembic\operations\ops.pyc imports=[('', 0, 0, 2), ('re', 0, 0, -1), ('util.sqla_compat', 0, 0, 2), ('util', 0, 0, 2), ('base.Operations', 0, 0, 1), ('sqlalchemy.types.NULLTYPE', 0, 0, -1), ('', 0, 0, 1), ('sqlalchemy.types', 0, 0, -1), ('base', 0, 0, 1), ('base.BatchOperations', 0, 0, 1), ('schemaobj', 0, 0, 1)] binaries=[] datas=[]>
alembic.operations.sqlalchemy: None -> None
alembic.operations.Operations: None -> None
Operations: None -> None
  DEL Operations
alembic.operations.re: None -> None
alembic.util.sqla_compat: None -> <PyModule 'alembic.util.sqla_compat' C:\Python26\lib\site-packages\alembic\util\sqla_compat.pyc imports=[('sqlalchemy.ext.compiler', 0, 0, -1), ('re', 0, 0, -1), ('sqlalchemy.schema.CheckConstraint', 0, 0, -1), ('', 0, 0, 1), ('sqlalchemy.sql', 0, 0, -1), ('sqlalchemy.sql.expression', 0, 1, -1), ('sqlalchemy.schema.ForeignKeyConstraint', 0, 0, -1), ('sqlalchemy.__version__', 0, 0, -1), ('sqlalchemy.sql.expression.TextClause', 0, 1, -1), ('sqlalchemy.sql.visitors', 0, 0, -1), ('sqlalchemy.sql.expression._TextClause', 0, 1, -1), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('sqlalchemy.schema', 0, 0, -1), ('sqlalchemy.sql.visitors.traverse', 0, 0, -1), ('sqlalchemy.schema.Column', 0, 0, -1), ('sqlalchemy.ext.compiler.compiles', 0, 0, -1), ('compat', 0, 0, 1), ('sqlalchemy.sql.expression._BindParamClause', 0, 0, -1), ('sqlalchemy.sql.expression', 0, 0, -1)] binaries=[] datas=[]>
alembic.operations.schemaobj: None -> <PyModule 'alembic.operations.schemaobj' C:\Python26\lib\site-packages\alembic\operations\schemaobj.pyc imports=[('util.compat.string_types', 0, 0, 2), ('', 0, 0, 2), ('sqlalchemy.types.NULLTYPE', 0, 0, -1), ('sqlalchemy.types.Integer', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('sqlalchemy.schema', 0, 0, -1), ('util.compat', 0, 0, 2), ('util', 0, 0, 2)] binaries=[] datas=[]>
alembic.util.langhelpers: None -> <PyModule 'alembic.util.langhelpers' C:\Python26\lib\site-packages\alembic\util\langhelpers.pyc imports=[('collections', 0, 0, -1), ('compat.string_types', 0, 0, 1), ('compat.callable', 0, 0, 1), ('sqlalchemy.util.format_argspec_plus', 0, 0, -1), ('compat', 0, 0, 1), ('warnings', 0, 0, -1), ('compat.with_metaclass', 0, 0, 1), ('uuid', 0, 0, -1), ('sqlalchemy.util', 0, 0, -1), ('compat.exec_', 0, 0, 1), ('sqlalchemy.util.compat', 0, 0, -1), ('textwrap', 0, 0, -1), ('inspect', 0, 0, -1), ('sqlalchemy.util.update_wrapper', 0, 0, -1), ('sqlalchemy.util.compat.inspect_getfullargspec', 0, 0, -1)] binaries=[] datas=[]>
alembic.util.messaging: None -> <PyModule 'alembic.util.messaging' C:\Python26\lib\site-packages\alembic\util\messaging.pyc imports=[('collections', 0, 0, -1), ('sys', 0, 0, -1), ('termios', 0, 0, -1), ('compat', 0, 0, 1), ('sqlalchemy.engine', 0, 0, -1), ('warnings', 0, 0, -1), ('struct', 0, 0, -1), ('logging', 0, 0, -1), ('fcntl', 0, 0, -1), ('compat.binary_type', 0, 0, 1), ('compat.py27', 0, 0, 1), ('compat.string_types', 0, 0, 1), ('textwrap', 0, 0, -1), ('sqlalchemy.engine.url', 0, 0, -1)] binaries=[] datas=[]>
alembic.util.pyfiles: None -> <PyModule 'alembic.util.pyfiles' C:\Python26\lib\site-packages\alembic\util\pyfiles.pyc imports=[('re', 0, 0, -1), ('editor', 1, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('compat', 0, 0, 1), ('mako.template.Template', 0, 0, -1), ('imp', 1, 0, -1), ('CommandError', 1, 0, 1), ('mako.template', 0, 0, -1), ('pkg_resources', 1, 1, -1), ('', 1, 0, 1), ('compat.load_module_py', 0, 0, 1), ('compat.load_module_pyc', 0, 0, 1)] binaries=[] datas=[]>
alembic.util.collections: None -> None
alembic.util.compat: None -> <PyModule 'alembic.util.compat' C:\Python26\lib\site-packages\alembic\util\compat.pyc imports=[('mako.util', 0, 1, -1), ('builtins', 0, 1, -1), ('sys', 0, 0, -1), ('ConfigParser', 0, 1, -1), ('__builtin__', 0, 1, -1), ('sqlalchemy.__version__', 0, 0, -1), ('importlib.machinery', 0, 1, -1), ('imp', 0, 1, -1), ('ConfigParser.SafeConfigParser', 0, 1, -1), ('configparser.ConfigParser', 0, 1, -1), ('sqlalchemy', 0, 0, -1), ('configparser', 0, 1, -1), ('io', 0, 1, -1), ('StringIO.StringIO', 0, 1, -1), ('StringIO', 0, 1, -1), ('importlib', 0, 1, -1), ('mako.util.parse_encoding', 0, 1, -1), ('io.StringIO', 0, 1, -1), ('io', 0, 0, -1)] binaries=[] datas=[]>
alembic.util.sqlalchemy: None -> None
sqlalchemy.util.format_argspec_plus: None -> None
  DEL sqlalchemy.util.format_argspec_plus
alembic.util.warnings: None -> None
alembic.util.uuid: None -> None
alembic.util.textwrap: None -> None
alembic.util.inspect: None -> None
sqlalchemy.util.update_wrapper: None -> None
  DEL sqlalchemy.util.update_wrapper
alembic.util.mako: None -> None
mako: None -> <PkgModule 'mako' C:\Python26\lib\site-packages\mako\__init__.pyc imports=[] binaries=[] datas=[]>
mako.util: None -> <PyModule 'mako.util' C:\Python26\lib\site-packages\mako\util.pyc imports=[('mako.compat', 0, 0, -1), ('collections', 0, 0, -1), ('re', 0, 0, -1), ('pkg_resources', 1, 0, -1), ('mako', 1, 0, -1), ('os', 0, 0, -1), ('operator', 0, 0, -1), ('mako', 0, 0, -1), ('parser', 1, 1, -1), ('codecs', 0, 0, -1), ('mako.exceptions', 1, 0, -1)] binaries=[] datas=[]>
alembic.util.builtins: None -> None
builtins: None -> None
  DEL builtins
alembic.util.sys: None -> None
alembic.util.ConfigParser: None -> None
alembic.util.__builtin__: None -> None
sqlalchemy.__version__: None -> None
  DEL sqlalchemy.__version__
alembic.util.importlib: None -> None
importlib: None -> None
  DEL importlib
alembic.util.imp: None -> None
alembic.util.configparser: None -> None
configparser: None -> None
  DEL configparser
configparser: None -> None
  DEL configparser
alembic.util.io: None -> None
alembic.util.StringIO: None -> None
importlib: None -> None
  DEL importlib
mako.mako: None -> None
mako.compat: None -> <PyModule 'mako.compat' C:\Python26\lib\site-packages\mako\compat.pyc imports=[('thread', 0, 1, -1), ('functools.partial', 0, 0, -1), ('io.BytesIO', 0, 1, -1), ('io.StringIO', 0, 1, -1), ('htmlentitydefs', 0, 1, -1), ('htmlentitydefs.codepoint2name', 0, 1, -1), ('html.entities.codepoint2name', 0, 1, -1), ('inspect.CO_VARARGS', 0, 0, -1), ('_dummy_thread', 0, 1, -1), ('html.entities', 0, 1, -1), ('dummy_threading', 0, 1, -1), ('imp', 0, 1, -1), ('threading', 0, 0, -1), ('sys', 0, 0, -1), ('__builtin__', 0, 1, -1), ('urllib.parse.quote_plus', 0, 1, -1), ('htmlentitydefs.name2codepoint', 0, 1, -1), ('io', 0, 1, -1), ('urllib.unquote_plus', 0, 1, -1), ('functools', 0, 0, -1), ('time', 0, 0, -1), ('inspect', 0, 1, -1), ('urllib.quote_plus', 0, 1, -1), ('urllib', 0, 1, -1), ('inspect.CO_VARKEYWORDS', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('inspect', 0, 0, -1), ('_thread', 0, 1, -1), ('importlib', 0, 1, -1), ('cStringIO.StringIO', 0, 1, -1), ('urllib.parse.unquote_plus', 0, 1, -1), ('json', 0, 0, -1), ('builtins', 0, 1, -1), ('urllib.parse', 0, 1, -1), ('importlib.machinery', 0, 1, -1), ('dummy_thread', 0, 1, -1), ('html.entities.name2codepoint', 0, 1, -1), ('StringIO', 0, 1, -1), ('cStringIO', 0, 1, -1)] binaries=[] datas=[]>
mako.collections: None -> None
mako.re: None -> None
mako.pkg_resources: None -> None
mako.os: None -> None
mako.operator: None -> None
mako.parser: None -> None
mako.codecs: None -> None
mako.exceptions: None -> <PyModule 'mako.exceptions' C:\Python26\lib\site-packages\mako\exceptions.pyc imports=[('mako.compat', 0, 0, -1), ('mako.filters', 1, 0, -1), ('sys', 0, 0, -1), ('mako.filters.html_escape', 1, 0, -1), ('mako.template', 1, 0, -1), ('mako.ext.pygmentplugin.syntax_highlight', 1, 0, -1), ('mako.util', 0, 0, -1), ('mako', 0, 0, -1), ('mako.ext.pygmentplugin.pygments_html_formatter', 1, 0, -1), ('traceback', 0, 0, -1), ('mako.ext.pygmentplugin', 1, 0, -1)] binaries=[] datas=[]>
mako.thread: None -> None
mako.functools: None -> None
mako.io: None -> None
mako.htmlentitydefs: None -> None
htmlentitydefs: None -> <PyModule 'htmlentitydefs' C:\Python26\lib\htmlentitydefs.pyc imports=[] binaries=[] datas=[]>
mako.html: None -> None
html: None -> None
  DEL html
mako.inspect: None -> None
mako._dummy_thread: None -> None
_dummy_thread: None -> None
  DEL _dummy_thread
html: None -> None
  DEL html
mako.dummy_threading: None -> None
mako.imp: None -> None
mako.threading: None -> None
mako.sys: None -> None
mako.__builtin__: None -> None
mako.urllib: None -> None
mako.time: None -> None
mako.StringIO: None -> None
mako._thread: None -> None
_thread: None -> None
  DEL _thread
mako.importlib: None -> None
importlib: None -> None
  DEL importlib
mako.cStringIO: None -> None
mako.json: None -> None
mako.builtins: None -> None
builtins: None -> None
  DEL builtins
importlib: None -> None
  DEL importlib
mako.dummy_thread: None -> None
html: None -> None
  DEL html
mako.filters: None -> <PyModule 'mako.filters' C:\Python26\lib\site-packages\mako\filters.pyc imports=[('mako.compat', 0, 0, -1), ('re', 0, 0, -1), ('mako.compat.codepoint2name', 0, 0, -1), ('mako.compat.quote_plus', 0, 0, -1), ('mako.compat.unquote_plus', 0, 0, -1), ('markupsafe', 0, 0, -1), ('mako.compat.name2codepoint', 0, 0, -1), ('codecs', 0, 0, -1), ('mako', 0, 0, -1)] binaries=[] datas=[]>
mako.template: None -> <PyModule 'mako.template' C:\Python26\lib\site-packages\mako\template.pyc imports=[('mako.compat', 0, 0, -1), ('mako.codegen', 0, 0, -1), ('sys', 0, 0, -1), ('weakref', 0, 0, -1), ('types', 0, 0, -1), ('shutil', 0, 0, -1), ('os', 0, 0, -1), ('re', 0, 0, -1), ('mako.exceptions', 0, 0, -1), ('mako.lexer', 0, 0, -1), ('mako.util', 0, 0, -1), ('mako', 0, 0, -1), ('mako.lexer.Lexer', 0, 0, -1), ('mako.cache', 0, 0, -1), ('tempfile', 0, 0, -1), ('stat', 0, 0, -1), ('mako.runtime', 0, 0, -1)] binaries=[] datas=[]>
mako.ext: None -> <PkgModule 'mako.ext' C:\Python26\lib\site-packages\mako\ext\__init__.pyc imports=[] binaries=[] datas=[]>
mako.ext.pygmentplugin: None -> <PyModule 'mako.ext.pygmentplugin' C:\Python26\lib\site-packages\mako\ext\pygmentplugin.pyc imports=[('mako.compat', 0, 0, -1), ('pygments.token.Text', 0, 0, -1), ('pygments.lexer.RegexLexer', 0, 0, -1), ('pygments.highlight', 0, 0, -1), ('pygments.token.Operator', 0, 0, -1), ('pygments.formatters.html', 0, 0, -1), ('pygments.token.Other', 0, 0, -1), ('pygments.lexer.include', 0, 0, -1), ('pygments.lexers.agile', 0, 0, -1), ('pygments.lexers.agile.PythonLexer', 0, 0, -1), ('pygments', 0, 0, -1), ('pygments.lexers.web.CssLexer', 0, 0, -1), ('pygments.lexer.using', 0, 0, -1), ('pygments.lexers.web', 0, 0, -1), ('mako', 0, 0, -1), ('pygments.lexer', 0, 0, -1), ('pygments.token.Name', 0, 0, -1), ('pygments.token.Comment', 0, 0, -1), ('pygments.lexers.web.JavascriptLexer', 0, 0, -1), ('pygments.lexers.web.HtmlLexer', 0, 0, -1), ('pygments.lexer.bygroups', 0, 0, -1), ('pygments.lexers.web.XmlLexer', 0, 0, -1), ('pygments.lexers.agile.Python3Lexer', 0, 0, -1), ('pygments.token.String', 0, 0, -1), ('pygments.formatters.html.HtmlFormatter', 0, 0, -1), ('pygments.token', 0, 0, -1), ('pygments.lexer.DelegatingLexer', 0, 0, -1), ('pygments.token.Keyword', 0, 0, -1)] binaries=[] datas=[]>
mako.traceback: None -> None
mako.markupsafe: None -> None
markupsafe: None -> <PkgModule 'markupsafe' C:\Python26\lib\site-packages\markupsafe\__init__.pyc imports=[('collections', 0, 0, -1), ('re', 0, 0, -1), ('markupsafe._compat.unichr', 0, 0, -1), ('markupsafe._native', 0, 1, -1), ('markupsafe._speedups', 0, 0, -1), ('markupsafe._compat.PY2', 0, 0, -1), ('markupsafe._compat.text_type', 0, 0, -1), ('markupsafe._compat.string_types', 0, 0, -1), ('string', 0, 0, -1), ('markupsafe._constants.HTML_ENTITIES', 1, 0, -1), ('markupsafe._speedups.soft_unicode', 0, 0, -1), ('markupsafe._compat.iteritems', 0, 0, -1), ('markupsafe._native.soft_unicode', 0, 1, -1), ('collections.Mapping', 0, 0, -1), ('markupsafe._compat.int_types', 0, 0, -1), ('markupsafe._constants', 1, 0, -1), ('markupsafe._native.escape_silent', 0, 1, -1), ('markupsafe._compat', 0, 0, -1), ('markupsafe._speedups.escape', 0, 0, -1), ('markupsafe._native.escape', 0, 1, -1), ('markupsafe._speedups.escape_silent', 0, 0, -1)] binaries=[] datas=[]>
markupsafe.collections: None -> None
markupsafe.re: None -> None
markupsafe.markupsafe: None -> None
markupsafe._compat: None -> <PyModule 'markupsafe._compat' C:\Python26\lib\site-packages\markupsafe\_compat.pyc imports=[('sys', 0, 0, -1)] binaries=[] datas=[]>
markupsafe._native: None -> <PyModule 'markupsafe._native' C:\Python26\lib\site-packages\markupsafe\_native.pyc imports=[('markupsafe._compat.text_type', 0, 0, -1), ('markupsafe', 0, 0, -1), ('markupsafe._compat', 0, 0, -1), ('markupsafe.Markup', 0, 0, -1)] binaries=[] datas=[]>
markupsafe._speedups: None -> None
  DEL markupsafe._speedups
markupsafe.string: None -> None
markupsafe._constants: None -> <PyModule 'markupsafe._constants' C:\Python26\lib\site-packages\markupsafe\_constants.pyc imports=[] binaries=[] datas=[]>
markupsafe._speedups: None -> None
  DEL markupsafe._speedups
markupsafe._speedups: None -> None
  DEL markupsafe._speedups
markupsafe._speedups: None -> None
  DEL markupsafe._speedups
markupsafe.sys: None -> None
markupsafe.Markup: None -> None
  DEL markupsafe.Markup
mako.codegen: None -> <PyModule 'mako.codegen' C:\Python26\lib\site-packages\mako\codegen.pyc imports=[('mako.compat', 0, 0, -1), ('mako.exceptions', 0, 0, -1), ('re', 0, 0, -1), ('mako.pygen', 0, 0, -1), ('mako.pygen.PythonPrinter', 0, 0, -1), ('mako.util', 0, 0, -1), ('mako', 0, 0, -1), ('mako.ast', 0, 0, -1), ('mako.filters', 0, 0, -1), ('time', 0, 0, -1), ('mako.parsetree', 0, 0, -1), ('mako.cache', 0, 0, -1), ('make.runtime', 0, 0, -1), ('mako.filters', 0, 0, -1)] binaries=[] datas=[]>
mako.weakref: None -> None
mako.types: None -> None
mako.shutil: None -> None
mako.lexer: None -> <PyModule 'mako.lexer' C:\Python26\lib\site-packages\mako\lexer.pyc imports=[('mako.compat', 0, 0, -1), ('re', 0, 0, -1), ('mako.pygen', 0, 0, -1), ('mako.exceptions', 0, 0, -1), ('mako.pygen.adjust_whitespace', 0, 0, -1), ('mako', 0, 0, -1), ('codecs', 0, 0, -1), ('mako.parsetree', 0, 0, -1)] binaries=[] datas=[]>
mako.cache: None -> <PyModule 'mako.cache' C:\Python26\lib\site-packages\mako\cache.pyc imports=[('mako.compat', 0, 0, -1), ('mako.util', 0, 0, -1), ('mako', 0, 0, -1)] binaries=[] datas=[]>
mako.tempfile: None -> None
mako.stat: None -> None
mako.runtime: None -> <PyModule 'mako.runtime' C:\Python26\lib\site-packages\mako\runtime.pyc imports=[('mako.compat', 0, 0, -1), ('mako.compat.compat_builtins', 0, 0, -1), ('sys', 0, 0, -1), ('mako.template', 1, 0, -1), ('mako.exceptions', 0, 0, -1), ('mako.util', 0, 0, -1), ('mako', 0, 0, -1)] binaries=[] datas=[]>
mako.pygen: None -> <PyModule 'mako.pygen' C:\Python26\lib\site-packages\mako\pygen.pyc imports=[('mako.exceptions', 0, 0, -1), ('re', 0, 0, -1), ('mako', 0, 0, -1)] binaries=[] datas=[]>
mako.ast: None -> <PyModule 'mako.ast' C:\Python26\lib\site-packages\mako\ast.pyc imports=[('mako.exceptions', 0, 0, -1), ('mako.compat', 0, 0, -1), ('re', 0, 0, -1), ('mako.pyparser', 0, 0, -1), ('mako', 0, 0, -1)] binaries=[] datas=[]>
mako.parsetree: None -> <PyModule 'mako.parsetree' C:\Python26\lib\site-packages\mako\parsetree.pyc imports=[('mako.compat', 0, 0, -1), ('re', 0, 0, -1), ('mako.exceptions', 0, 0, -1), ('mako.filters', 0, 0, -1), ('mako', 0, 0, -1), ('mako.ast', 0, 0, -1), ('mako.util', 0, 0, -1)] binaries=[] datas=[]>
mako.make: None -> None
make: None -> None
  DEL make
mako.pyparser: None -> <PyModule 'mako.pyparser' C:\Python26\lib\site-packages\mako\pyparser.pyc imports=[('mako.compat', 0, 0, -1), ('mako._ast_util', 0, 0, -1), ('operator', 0, 0, -1), ('_ast', 0, 0, -1), ('mako.exceptions', 0, 0, -1), ('mako.util', 0, 0, -1), ('mako', 0, 0, -1), ('mako.compat.arg_stringname', 0, 0, -1)] binaries=[] datas=[]>
mako._ast_util: None -> <PyModule 'mako._ast_util' C:\Python26\lib\site-packages\mako\_ast_util.pyc imports=[('mako.compat', 0, 0, -1), ('_ast', 0, 0, -1), ('collections.deque', 1, 0, -1), ('_ast.*', 0, 0, -1), ('collections', 1, 0, -1), ('mako.compat.arg_stringname', 0, 0, -1)] binaries=[] datas=[]>
mako._ast: None -> None
mako.ext.mako: None -> None
mako.ext.pygments: None -> None
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
pygments: None -> None
  DEL pygments
alembic.util.termios: None -> None
termios: None -> None
  DEL termios
alembic.util.struct: None -> None
alembic.util.logging: None -> None
alembic.util.fcntl: None -> None
fcntl: None -> None
  DEL fcntl
alembic.util.re: None -> None
sqlalchemy.__version__: None -> None
  DEL sqlalchemy.__version__
alembic.util.editor: None -> None
editor: None -> <PyModule 'editor' C:\Python26\lib\site-packages\editor.pyc imports=[('distutils.spawn', 0, 0, -1), ('__future__.print_function', 0, 0, -1), ('os.path', 0, 0, -1), ('locale', 0, 0, -1), ('__future__', 0, 0, -1), ('subprocess', 0, 0, -1), ('distutils.spawn.find_executable', 0, 0, -1), ('tempfile', 0, 0, -1), ('argparse', 0, 1, -1)] binaries=[] datas=[]>
alembic.util.os: None -> None
alembic.util.CommandError: None -> None
CommandError: None -> None
  DEL CommandError
alembic.util.pkg_resources: None -> None
argparse: None -> <PyModule 'argparse' C:\Python26\lib\site-packages\argparse.pyc imports=[('re', 0, 0, -1), ('sys', 0, 0, -1), ('sets.Set', 0, 1, -1), ('copy', 0, 0, -1), ('os', 0, 0, -1), ('warnings', 1, 1, -1), ('gettext.gettext', 0, 0, -1), ('textwrap', 0, 0, -1), ('gettext', 0, 0, -1), ('warnings', 1, 0, -1), ('sets', 0, 1, -1)] binaries=[] datas=[]>
sets: None -> <PyModule 'sets' C:\Python26\lib\sets.pyc imports=[('itertools', 0, 0, -1), ('warnings', 0, 0, -1), ('itertools.ifilterfalse', 0, 0, -1), ('copy', 1, 0, -1), ('itertools.ifilter', 0, 0, -1), ('copy.deepcopy', 1, 0, -1)] binaries=[] datas=[]>
alembic.operations.contextlib: None -> None
alembic.operations.batch: None -> <PyModule 'alembic.operations.batch' C:\Python26\lib\site-packages\alembic\operations\batch.pyc imports=[('sqlalchemy.select', 0, 0, -1), ('sqlalchemy.cast', 0, 0, -1), ('util.sqla_compat', 0, 0, 2), ('sqlalchemy.Column', 0, 0, -1), ('sqlalchemy.Index', 0, 0, -1), ('sqlalchemy.util.OrderedDict', 0, 0, -1), ('sqlalchemy.MetaData', 0, 0, -1), ('sqlalchemy.util', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('sqlalchemy.schema', 0, 0, -1), ('', 0, 0, 2), ('util', 0, 0, 2), ('sqlalchemy.ForeignKeyConstraint', 0, 0, -1), ('sqlalchemy.Table', 0, 0, -1), ('util.sqla_compat._columns_for_constraint', 0, 0, 2), ('util.sqla_compat._is_type_bound', 0, 0, 2)] binaries=[] datas=[]>
alembic.operations.textwrap: None -> None
alembic.operations.inspect: None -> None
sqlalchemy.select: None -> None
  DEL sqlalchemy.select
  DEL sqlalchemy.cast
  DEL sqlalchemy.Column
sqlalchemy.Index: None -> None
  DEL sqlalchemy.Index
sqlalchemy.util.OrderedDict: None -> None
  DEL sqlalchemy.util.OrderedDict
  DEL sqlalchemy.MetaData
sqlalchemy.ForeignKeyConstraint: None -> None
  DEL sqlalchemy.ForeignKeyConstraint
  DEL sqlalchemy.Table
alembic.runtime.contextlib: None -> None
alembic.runtime.sqlalchemy: None -> None
sqlalchemy.String: None -> None
  DEL sqlalchemy.String
alembic.runtime.sys: None -> None
sqlalchemy.Column: None -> None
  DEL sqlalchemy.Column
alembic.ddl: None -> <PkgModule 'alembic.ddl' C:\Python26\lib\site-packages\alembic\ddl\__init__.pyc imports=[('mysql', 0, 0, 1), ('', 0, 0, 1), ('sqlite', 0, 0, 1), ('postgresql', 0, 0, 1), ('impl.DefaultImpl', 0, 0, 1), ('oracle', 0, 0, 1), ('impl', 0, 0, 1), ('mssql', 0, 0, 1)] binaries=[] datas=[]>
sqlalchemy.MetaData: None -> None
  DEL sqlalchemy.MetaData
alembic.runtime.logging: None -> None
sqlalchemy.literal_column: None -> None
  DEL sqlalchemy.literal_column
sqlalchemy.Table: None -> None
  DEL sqlalchemy.Table
alembic.ddl.mysql: None -> <PyModule 'alembic.ddl.mysql' C:\Python26\lib\site-packages\alembic\ddl\mysql.pyc imports=[('sqlalchemy.ext.compiler', 0, 0, -1), ('autogenerate.compare', 0, 0, 2), ('impl.DefaultImpl', 0, 0, 1), ('base.format_server_default', 0, 0, 1), ('util.compat', 0, 0, 2), ('base.format_column_name', 0, 0, 1), ('', 0, 0, 2), ('sqlalchemy.types', 0, 0, -1), ('base.alter_table', 0, 0, 1), ('util.compat.string_types', 0, 0, 2), ('sqlalchemy.schema', 0, 0, -1), ('base.ColumnType', 0, 0, 1), ('base.ColumnName', 0, 0, 1), ('autogenerate', 0, 0, 2), ('base', 0, 0, 1), ('sqlalchemy', 0, 0, -1), ('util', 0, 0, 2), ('sqlalchemy.ext.compiler.compiles', 0, 0, -1), ('base.ColumnDefault', 0, 0, 1), ('base.AlterColumn', 0, 0, 1), ('base.ColumnNullable', 0, 0, 1), ('impl', 0, 0, 1)] binaries=[] datas=[]>
alembic.ddl.sqlite: None -> <PyModule 'alembic.ddl.sqlite' C:\Python26\lib\site-packages\alembic\ddl\sqlite.pyc imports=[('impl', 0, 0, 1), ('', 0, 0, 2), ('re', 0, 0, -1), ('impl.DefaultImpl', 0, 0, 1), ('util', 0, 0, 2)] binaries=[] datas=[]>
alembic.ddl.postgresql: None -> <PyModule 'alembic.ddl.postgresql' C:\Python26\lib\site-packages\alembic\ddl\postgresql.pyc imports=[('base.RenameTable', 0, 0, 1), ('sqlalchemy.text', 0, 0, -1), ('impl.DefaultImpl', 0, 0, 1), ('util.compat', 0, 0, 2), ('', 0, 0, 2), ('sqlalchemy.dialects.postgresql.INTEGER', 0, 0, -1), ('base.alter_table', 0, 0, 1), ('sqlalchemy.Numeric', 0, 0, -1), ('sqlalchemy.sql.expression.UnaryExpression', 0, 1, -1), ('base.compiles', 0, 0, 1), ('impl', 0, 0, 1), ('base', 0, 0, 1), ('sqlalchemy.Column', 0, 0, -1), ('sqlalchemy', 0, 0, -1), ('util', 0, 0, 2), ('sqlalchemy.dialects.postgresql.BIGINT', 0, 0, -1), ('re', 0, 0, -1), ('sqlalchemy.sql.expression', 0, 1, -1), ('sqlalchemy.sql.expression._UnaryExpression', 0, 1, -1), ('logging', 0, 0, -1), ('sqlalchemy.dialects.postgresql', 0, 0, -1), ('base.format_table_name', 0, 0, 1)] binaries=[] datas=[]>
alembic.ddl.impl: None -> <PyModule 'alembic.ddl.impl' C:\Python26\lib\site-packages\alembic\ddl\impl.pyc imports=[('util.compat.string_types', 0, 0, 2), ('util.sqla_compat', 0, 0, 2), ('util.compat.with_metaclass', 0, 0, 2), ('', 0, 0, 1), ('sqlalchemy.text', 0, 0, -1), ('', 0, 0, 2), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('sqlalchemy.schema', 0, 0, -1), ('util.compat', 0, 0, 2), ('util', 0, 0, 2), ('util.compat.text_type', 0, 0, 2), ('base', 0, 0, 1)] binaries=[] datas=[]>
alembic.ddl.oracle: None -> <PyModule 'alembic.ddl.oracle' C:\Python26\lib\site-packages\alembic\ddl\oracle.pyc imports=[('sqlalchemy.ext.compiler', 0, 0, -1), ('base.ColumnType', 0, 0, 1), ('base.ColumnNullable', 0, 0, 1), ('base.format_server_default', 0, 0, 1), ('base.alter_table', 0, 0, 1), ('base.ColumnDefault', 0, 0, 1), ('impl.DefaultImpl', 0, 0, 1), ('base.AddColumn', 0, 0, 1), ('base.format_type', 0, 0, 1), ('sqlalchemy.ext.compiler.compiles', 0, 0, -1), ('impl', 0, 0, 1), ('base.ColumnName', 0, 0, 1), ('base.format_column_name', 0, 0, 1), ('base', 0, 0, 1)] binaries=[] datas=[]>
alembic.ddl.mssql: None -> <PyModule 'alembic.ddl.mssql' C:\Python26\lib\site-packages\alembic\ddl\mssql.pyc imports=[('sqlalchemy.ext.compiler', 0, 0, -1), ('base.ColumnDefault', 0, 0, 1), ('impl.DefaultImpl', 0, 0, 1), ('base.format_server_default', 0, 0, 1), ('base.format_type', 0, 0, 1), ('base.format_column_name', 0, 0, 1), ('', 0, 0, 2), ('sqlalchemy.sql.expression.ClauseElement', 0, 0, -1), ('base.alter_table', 0, 0, 1), ('sqlalchemy.sql.expression', 0, 0, -1), ('base.ColumnType', 0, 0, 1), ('base.ColumnName', 0, 0, 1), ('base', 0, 0, 1), ('util', 0, 0, 2), ('sqlalchemy.ext.compiler.compiles', 0, 0, -1), ('base.RenameTable', 0, 0, 1), ('base.alter_column', 0, 0, 1), ('base.AddColumn', 0, 0, 1), ('base.ColumnNullable', 0, 0, 1), ('sqlalchemy.sql.expression.Executable', 0, 0, -1), ('base.format_table_name', 0, 0, 1), ('impl', 0, 0, 1)] binaries=[] datas=[]>
alembic.ddl.sqlalchemy: None -> None
alembic.autogenerate: None -> <PkgModule 'alembic.autogenerate' C:\Python26\lib\site-packages\alembic\autogenerate\__init__.pyc imports=[('compare.comparators', 0, 0, 1), ('api.RevisionContext', 0, 0, 1), ('rewriter.Rewriter', 0, 0, 1), ('api._render_migration_diffs', 0, 0, 1), ('api.compare_metadata', 0, 0, 1), ('render', 0, 0, 1), ('compare', 0, 0, 1), ('api.produce_migrations', 0, 0, 1), ('api.render_python_code', 0, 0, 1), ('render.renderers', 0, 0, 1), ('render.render_op_text', 0, 0, 1), ('rewriter', 0, 0, 1), ('compare._produce_net_changes', 0, 0, 1), ('api', 0, 0, 1)] binaries=[] datas=[]>
alembic.autogenerate.compare: None -> <PyModule 'alembic.autogenerate.compare' C:\Python26\lib\site-packages\alembic\autogenerate\compare.pyc imports=[('alembic.ddl.base._fk_spec', 0, 0, -1), ('operations', 0, 0, 2), ('re', 0, 0, -1), ('sqlalchemy.util.OrderedSet', 0, 0, -1), ('sqlalchemy.event', 0, 0, -1), ('util.sqla_compat', 0, 0, 2), ('logging', 0, 0, -1), ('render._user_defined_render', 0, 0, 1), ('alembic.ddl.base', 0, 0, -1), ('operations.ops', 0, 0, 2), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('sqlalchemy.schema', 0, 0, -1), ('contextlib', 0, 0, -1), ('', 0, 0, 2), ('util', 0, 0, 2), ('sqlalchemy.engine.reflection.Inspector', 0, 0, -1), ('util.compat', 0, 0, 2), ('sqlalchemy.util', 0, 0, -1), ('sqlalchemy.engine.reflection', 0, 0, -1), ('render', 0, 0, 1)] binaries=[] datas=[]>
alembic.ddl.base: None -> <PyModule 'alembic.ddl.base' C:\Python26\lib\site-packages\alembic\ddl\base.pyc imports=[('util.sqla_compat._fk_spec', 0, 0, 2), ('sqlalchemy.ext.compiler', 0, 0, -1), ('sqlalchemy.schema.DDLElement', 0, 0, -1), ('util.sqla_compat', 0, 0, 2), ('', 0, 0, 2), ('util', 0, 0, 2), ('sqlalchemy.Integer', 0, 0, -1), ('util.sqla_compat._is_type_bound', 0, 0, 2), ('util.sqla_compat._table_for_constraint', 0, 0, 2), ('sqlalchemy.sql.elements', 0, 1, -1), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('sqlalchemy.schema', 0, 0, -1), ('sqlalchemy.schema.Column', 0, 0, -1), ('sqlalchemy.ext.compiler.compiles', 0, 0, -1), ('sqlalchemy.sql.elements.quoted_name', 0, 1, -1), ('util.sqla_compat._columns_for_constraint', 0, 0, 2), ('functools', 0, 0, -1), ('util.sqla_compat._find_columns', 0, 0, 2)] binaries=[] datas=[]>
alembic.autogenerate.api: None -> <PyModule 'alembic.autogenerate.api' C:\Python26\lib\site-packages\alembic\autogenerate\api.pyc imports=[('operations', 0, 0, 2), ('', 0, 0, 2), ('', 0, 0, 1), ('compare', 0, 0, 1), ('operations.ops', 0, 0, 2), ('render', 0, 0, 1), ('util', 0, 0, 2), ('sqlalchemy.engine.reflection.Inspector', 0, 0, -1), ('contextlib', 0, 0, -1), ('sqlalchemy.engine.reflection', 0, 0, -1)] binaries=[] datas=[]>
alembic.autogenerate.rewriter: None -> <PyModule 'alembic.autogenerate.rewriter' C:\Python26\lib\site-packages\alembic\autogenerate\rewriter.pyc imports=[('alembic.operations.ops', 0, 0, -1), ('alembic.operations', 0, 0, -1), ('alembic.util', 0, 0, -1), ('alembic', 0, 0, -1)] binaries=[] datas=[]>
alembic.autogenerate.render: None -> <PyModule 'alembic.autogenerate.render' C:\Python26\lib\site-packages\alembic\autogenerate\render.pyc imports=[('operations', 0, 0, 2), ('re', 0, 0, -1), ('', 0, 0, 2), ('sqlalchemy.sql', 0, 0, -1), ('util', 0, 0, 2), ('sqlalchemy.sql.naming', 0, 0, -1), ('mako.pygen', 0, 0, -1), ('operations.ops', 0, 0, 2), ('sqlalchemy', 0, 0, -1), ('sqlalchemy.types', 0, 0, -1), ('sqlalchemy.schema', 0, 0, -1), ('util.compat', 0, 0, 2), ('util.compat.StringIO', 0, 0, 2), ('sqlalchemy.sql.naming.conv', 0, 0, -1), ('util.compat.string_types', 0, 0, 2), ('mako.pygen.PythonPrinter', 0, 0, -1)] binaries=[] datas=[]>
alembic.autogenerate.alembic: None -> None
alembic.autogenerate.re: None -> None
alembic.autogenerate.sqlalchemy: None -> None
sqlalchemy.util.OrderedSet: None -> None
  DEL sqlalchemy.util.OrderedSet
alembic.autogenerate.logging: None -> None
alembic.autogenerate.contextlib: None -> None
sqlalchemy.Integer: None -> None
  DEL sqlalchemy.Integer
alembic.ddl.functools: None -> None
alembic.autogenerate.mako: None -> None
sqlalchemy.text: None -> None
  DEL sqlalchemy.text
alembic.ddl.re: None -> None
sqlalchemy.text: None -> None
  DEL sqlalchemy.text
sqlalchemy.dialects.postgresql.INTEGER: None -> None
  DEL sqlalchemy.dialects.postgresql.INTEGER
sqlalchemy.Numeric: None -> None
  DEL sqlalchemy.Numeric
sqlalchemy.Column: None -> None
  DEL sqlalchemy.Column
sqlalchemy.dialects.postgresql.BIGINT: None -> None
  DEL sqlalchemy.dialects.postgresql.BIGINT
alembic.ddl.logging: None -> None
dataset.freeze.dataset: None -> None
dataset.freeze.format: None -> <PkgModule 'dataset.freeze.format' C:\Python26\lib\site-packages\dataset\freeze\format\__init__.pyc imports=[('dataset.freeze.format.ftabson', 0, 0, -1), ('dataset.freeze.format.fjson.JSONSerializer', 0, 0, -1), ('dataset.freeze.format.fjson', 0, 0, -1), ('dataset.freeze.format.fcsv.CSVSerializer', 0, 0, -1), ('dataset.freeze.format.ftabson.TabsonSerializer', 0, 0, -1), ('dataset.freeze.format.fcsv', 0, 0, -1)] binaries=[] datas=[]>
dataset.freeze.sqlalchemy: None -> None
dataset.freeze.config: None -> <PyModule 'dataset.freeze.config' C:\Python26\lib\site-packages\dataset\freeze\config.pyc imports=[('yaml', 0, 0, -1), ('json', 0, 0, -1), ('six.text_type', 0, 0, -1), ('six.PY3', 0, 0, -1), ('dataset.util', 0, 0, -1), ('six', 0, 0, -1), ('dataset.util.FreezeException', 0, 0, -1)] binaries=[] datas=[]>
dataset.freeze.logging: None -> None
dataset.freeze.argparse: None -> None
dataset.freeze.format.get_serializer: None -> None
  DEL dataset.freeze.format.get_serializer
dataset.freeze.format.dataset: None -> None
dataset.freeze.format.ftabson: None -> <PyModule 'dataset.freeze.format.ftabson' C:\Python26\lib\site-packages\dataset\freeze\format\ftabson.pyc imports=[('dataset.freeze.format.fjson', 0, 0, -1), ('dataset.freeze.format.fjson.JSONSerializer', 0, 0, -1)] binaries=[] datas=[]>
dataset.freeze.format.fjson: None -> <PyModule 'dataset.freeze.format.fjson' C:\Python26\lib\site-packages\dataset\freeze\format\fjson.pyc imports=[('collections', 0, 0, -1), ('json', 0, 0, -1), ('collections.defaultdict', 0, 0, -1), ('six.PY3', 0, 0, -1), ('dataset.freeze.format.common.Serializer', 0, 0, -1), ('dataset.freeze.format.common', 0, 0, -1), ('datetime.date', 0, 0, -1), ('datetime', 0, 0, -1), ('six', 0, 0, -1), ('datetime.datetime', 0, 0, -1)] binaries=[] datas=[]>
dataset.freeze.format.fcsv: None -> <PyModule 'dataset.freeze.format.fcsv' C:\Python26\lib\site-packages\dataset\freeze\format\fcsv.pyc imports=[('csv', 0, 0, -1), ('six.PY3', 0, 0, -1), ('dataset.freeze.format.common.Serializer', 0, 0, -1), ('__future__.unicode_literals', 0, 0, -1), ('__future__', 0, 0, -1), ('six.text_type', 0, 0, -1), ('datetime.date', 0, 0, -1), ('datetime', 0, 0, -1), ('six', 0, 0, -1), ('dataset.freeze.format.common', 0, 0, -1), ('datetime.datetime', 0, 0, -1)] binaries=[] datas=[]>
dataset.freeze.format.collections: None -> None
dataset.freeze.format.json: None -> None
dataset.freeze.format.six: None -> None
dataset.freeze.format.common: None -> <PyModule 'dataset.freeze.format.common' C:\Python26\lib\site-packages\dataset\freeze\format\common.pyc imports=[('re', 0, 0, -1), ('sys', 0, 0, -1), ('six.binary_type', 0, 0, -1), ('os', 0, 0, -1), ('dataset.util', 0, 0, -1), ('dataset.util.FreezeException', 0, 0, -1), ('six.text_type', 0, 0, -1), ('normality.slugify', 0, 0, -1), ('normality', 0, 0, -1), ('six', 0, 0, -1), ('locale', 0, 0, -1)] binaries=[] datas=[]>
dataset.freeze.format.datetime: None -> None
dataset.freeze.format.re: None -> None
dataset.freeze.format.sys: None -> None
dataset.freeze.format.os: None -> None
dataset.freeze.format.normality: None -> None
normality: None -> <PyModule 'normality' C:\Python26\lib\site-packages\normality.pyc imports=[('six', 0, 0, -1), ('re', 0, 0, -1), ('unicodedata', 0, 0, -1), ('unidecode', 0, 0, -1), ('unidecode.unidecode', 0, 0, -1)] binaries=[] datas=[]>
dataset.freeze.format.locale: None -> None
unidecode: None -> <PkgModule 'unidecode' C:\Python26\lib\site-packages\unidecode\__init__.pyc imports=[('sys.version_info', 0, 0, -1), ('warnings', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
unidecode.unidecode: None -> None
  DEL unidecode.unidecode
unidecode.sys: None -> None
unidecode.warnings: None -> None
dataset.freeze.format.csv: None -> None
csv: None -> <PyModule 'csv' C:\Python26\lib\csv.pyc imports=[('_csv.field_size_limit', 0, 0, -1), ('_csv.QUOTE_MINIMAL', 0, 0, -1), ('_csv.QUOTE_NONE', 0, 0, -1), ('_csv', 0, 0, -1), ('_csv.writer', 0, 0, -1), ('_csv.__version__', 0, 0, -1), ('_csv.register_dialect', 0, 0, -1), ('cStringIO', 0, 0, -1), ('_csv.Error', 0, 0, -1), ('functools', 0, 0, -1), ('_csv.get_dialect', 0, 0, -1), ('_csv.unregister_dialect', 0, 0, -1), ('_csv.QUOTE_NONNUMERIC', 0, 0, -1), ('_csv.Dialect', 0, 0, -1), ('StringIO.StringIO', 0, 1, -1), ('cStringIO.StringIO', 0, 0, -1), ('_csv.QUOTE_ALL', 0, 0, -1), ('_csv.reader', 0, 0, -1), ('re', 0, 0, -1), ('_csv.list_dialects', 0, 0, -1), ('functools.reduce', 0, 0, -1), ('StringIO', 0, 1, -1), ('_csv.__doc__', 0, 0, -1)] binaries=[] datas=[]>
dataset.freeze.format.__future__: None -> None
_csv: None -> <BuiltinModule '_csv' None imports=[] binaries=[] datas=[]>
dataset.freeze.yaml: None -> None
yaml: None -> <PkgModule 'yaml' C:\Python26\lib\site-packages\yaml\__init__.pyc imports=[('cyaml', 0, 0, -1), ('nodes.*', 0, 0, -1), ('events.*', 0, 0, -1), ('tokens', 0, 0, -1), ('events', 0, 0, -1), ('loader.*', 0, 0, -1), ('StringIO.StringIO', 1, 1, -1), ('nodes', 0, 0, -1), ('StringIO', 1, 1, -1), ('error.*', 0, 0, -1), ('tokens.*', 0, 0, -1), ('cStringIO', 1, 1, -1), ('loader', 0, 0, -1), ('dumper', 0, 0, -1), ('cStringIO.StringIO', 1, 1, -1), ('dumper.*', 0, 0, -1), ('cyaml.*', 0, 0, -1), ('error', 0, 0, -1)] binaries=[] datas=[]>
dataset.freeze.json: None -> None
dataset.freeze.six: None -> None
yaml.cyaml: None -> <PyModule 'yaml.cyaml' C:\Python26\lib\site-packages\yaml\cyaml.pyc imports=[('resolver.*', 0, 0, -1), ('serializer.*', 0, 0, -1), ('serializer', 0, 0, -1), ('constructor', 0, 0, -1), ('_yaml', 0, 0, -1), ('representer.*', 0, 0, -1), ('_yaml.CEmitter', 0, 0, -1), ('representer', 0, 0, -1), ('constructor.*', 0, 0, -1), ('_yaml.CParser', 0, 0, -1), ('resolver', 0, 0, -1)] binaries=[] datas=[]>
yaml.nodes: None -> <PyModule 'yaml.nodes' C:\Python26\lib\site-packages\yaml\nodes.pyc imports=[] binaries=[] datas=[]>
yaml.events: None -> <PyModule 'yaml.events' C:\Python26\lib\site-packages\yaml\events.pyc imports=[] binaries=[] datas=[]>
yaml.tokens: None -> <PyModule 'yaml.tokens' C:\Python26\lib\site-packages\yaml\tokens.pyc imports=[] binaries=[] datas=[]>
yaml.loader: None -> <PyModule 'yaml.loader' C:\Python26\lib\site-packages\yaml\loader.pyc imports=[('resolver', 0, 0, -1), ('scanner.*', 0, 0, -1), ('composer.*', 0, 0, -1), ('parser.*', 0, 0, -1), ('scanner', 0, 0, -1), ('resolver.*', 0, 0, -1), ('parser', 0, 0, -1), ('constructor.*', 0, 0, -1), ('constructor', 0, 0, -1), ('reader', 0, 0, -1), ('reader.*', 0, 0, -1), ('composer', 0, 0, -1)] binaries=[] datas=[]>
yaml.StringIO: None -> None
yaml.error: None -> <PyModule 'yaml.error' C:\Python26\lib\site-packages\yaml\error.pyc imports=[] binaries=[] datas=[]>
yaml.cStringIO: None -> None
yaml.dumper: None -> <PyModule 'yaml.dumper' C:\Python26\lib\site-packages\yaml\dumper.pyc imports=[('serializer.*', 0, 0, -1), ('emitter', 0, 0, -1), ('serializer', 0, 0, -1), ('resolver.*', 0, 0, -1), ('emitter.*', 0, 0, -1), ('representer.*', 0, 0, -1), ('representer', 0, 0, -1), ('resolver', 0, 0, -1)] binaries=[] datas=[]>
yaml.resolver: None -> <PyModule 'yaml.resolver' C:\Python26\lib\site-packages\yaml\resolver.pyc imports=[('nodes.*', 0, 0, -1), ('re', 0, 0, -1), ('nodes', 0, 0, -1), ('error', 0, 0, -1), ('error.*', 0, 0, -1)] binaries=[] datas=[]>
yaml.serializer: None -> <PyModule 'yaml.serializer' C:\Python26\lib\site-packages\yaml\serializer.pyc imports=[('nodes.*', 0, 0, -1), ('events.*', 0, 0, -1), ('events', 0, 0, -1), ('nodes', 0, 0, -1), ('error.YAMLError', 0, 0, -1), ('error', 0, 0, -1)] binaries=[] datas=[]>
yaml.constructor: None -> <PyModule 'yaml.constructor' C:\Python26\lib\site-packages\yaml\constructor.pyc imports=[('nodes.*', 0, 0, -1), ('re', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('nodes', 0, 0, -1), ('error.*', 0, 0, -1), ('datetime', 0, 0, -1), ('binascii', 0, 0, -1), ('error', 0, 0, -1)] binaries=[] datas=[]>
yaml._yaml: None -> None
_yaml: None -> None
  DEL _yaml
yaml.representer: None -> <PyModule 'yaml.representer' C:\Python26\lib\site-packages\yaml\representer.pyc imports=[('nodes.*', 0, 0, -1), ('sys', 0, 0, -1), ('types', 0, 0, -1), ('nodes', 0, 0, -1), ('error.*', 0, 0, -1), ('copy_reg', 0, 0, -1), ('datetime', 0, 0, -1), ('error', 0, 0, -1)] binaries=[] datas=[]>
_yaml: None -> None
  DEL _yaml
_yaml: None -> None
  DEL _yaml
yaml.re: None -> None
yaml.sys: None -> None
yaml.types: None -> None
yaml.datetime: None -> None
yaml.binascii: None -> None
yaml.copy_reg: None -> None
yaml.scanner: None -> <PyModule 'yaml.scanner' C:\Python26\lib\site-packages\yaml\scanner.pyc imports=[('tokens.*', 0, 0, -1), ('error', 0, 0, -1), ('error.MarkedYAMLError', 0, 0, -1), ('tokens', 0, 0, -1)] binaries=[] datas=[]>
yaml.composer: None -> <PyModule 'yaml.composer' C:\Python26\lib\site-packages\yaml\composer.pyc imports=[('nodes.*', 0, 0, -1), ('events.*', 0, 0, -1), ('error.MarkedYAMLError', 0, 0, -1), ('events', 0, 0, -1), ('nodes', 0, 0, -1), ('error', 0, 0, -1)] binaries=[] datas=[]>
yaml.parser: None -> <PyModule 'yaml.parser' C:\Python26\lib\site-packages\yaml\parser.pyc imports=[('events.*', 0, 0, -1), ('error.MarkedYAMLError', 0, 0, -1), ('events', 0, 0, -1), ('scanner.*', 0, 0, -1), ('scanner', 0, 0, -1), ('tokens.*', 0, 0, -1), ('error', 0, 0, -1), ('tokens', 0, 0, -1)] binaries=[] datas=[]>
yaml.reader: None -> <PyModule 'yaml.reader' C:\Python26\lib\site-packages\yaml\reader.pyc imports=[('codecs', 0, 0, -1), ('error.Mark', 0, 0, -1), ('error.YAMLError', 0, 0, -1), ('error', 0, 0, -1), ('re', 0, 0, -1)] binaries=[] datas=[]>
yaml.codecs: None -> None
yaml.emitter: None -> <PyModule 'yaml.emitter' C:\Python26\lib\site-packages\yaml\emitter.pyc imports=[('events.*', 0, 0, -1), ('error.YAMLError', 0, 0, -1), ('error', 0, 0, -1), ('events', 0, 0, -1)] binaries=[] datas=[]>
pygame.pygame: None -> None
pygame.mac_scrap: None -> <PyModule 'pygame.mac_scrap' C:\Python26\lib\site-packages\pygame\mac_scrap.pyc imports=[('pygame.locals.SCRAP_SELECTION', 0, 0, -1), ('pygame.image', 0, 0, -1), ('sys', 0, 0, -1), ('AppKit.*', 0, 0, -1), ('pygame.locals.SCRAP_BMP', 0, 0, -1), ('AppKit', 0, 0, -1), ('cStringIO', 0, 0, -1), ('pygame.locals.SCRAP_CLIPBOARD', 0, 0, -1), ('cStringIO.StringIO', 0, 0, -1), ('Foundation', 0, 0, -1), ('pygame.compat.unicode_', 0, 0, -1), ('pygame.locals.SCRAP_TEXT', 0, 0, -1), ('Foundation.*', 0, 0, -1), ('pygame.compat', 0, 0, -1), ('tempfile', 0, 0, -1), ('pygame.locals', 0, 0, -1)] binaries=[] datas=[]>
pygame.cursors: None -> <PyModule 'pygame.cursors' C:\Python26\lib\site-packages\pygame\cursors.pyc imports=[] binaries=[] datas=[]>
pygame.fastevent: None -> <ExtensionModule 'pygame.fastevent' C:\Python26\lib\site-packages\pygame\fastevent.pyd imports=[] binaries=[] datas=[]>
pygame.pixelarray: None -> <ExtensionModule 'pygame.pixelarray' C:\Python26\lib\site-packages\pygame\pixelarray.pyd imports=[] binaries=[] datas=[]>
pygame.key: None -> <ExtensionModule 'pygame.key' C:\Python26\lib\site-packages\pygame\key.pyd imports=[] binaries=[] datas=[]>
pygame.os: None -> None
pygame.movie: None -> <ExtensionModule 'pygame.movie' C:\Python26\lib\site-packages\pygame\movie.pyd imports=[] binaries=[] datas=[]>
pygame.bufferproxy: None -> <ExtensionModule 'pygame.bufferproxy' C:\Python26\lib\site-packages\pygame\bufferproxy.pyd imports=[] binaries=[] datas=[]>
pygame.rwobject: None -> <ExtensionModule 'pygame.rwobject' C:\Python26\lib\site-packages\pygame\rwobject.pyd imports=[] binaries=[] datas=[]>
pygame.base: None -> <ExtensionModule 'pygame.base' C:\Python26\lib\site-packages\pygame\base.pyd imports=[] binaries=[] datas=[]>
pygame.color: None -> <ExtensionModule 'pygame.color' C:\Python26\lib\site-packages\pygame\color.pyd imports=[] binaries=[] datas=[]>
pygame.surface: None -> <ExtensionModule 'pygame.surface' C:\Python26\lib\site-packages\pygame\surface.pyd imports=[] binaries=[] datas=[]>
pygame.atexit: None -> None
pygame.numpy: None -> None
numpy: None -> None
  DEL numpy
pygame.rect: None -> <ExtensionModule 'pygame.rect' C:\Python26\lib\site-packages\pygame\rect.pyd imports=[] binaries=[] datas=[]>
pygame.copyreg: None -> None
copyreg: None -> None
  DEL copyreg
pygame.mask: None -> <ExtensionModule 'pygame.mask' C:\Python26\lib\site-packages\pygame\mask.pyd imports=[] binaries=[] datas=[]>
pygame.image: None -> <ExtensionModule 'pygame.image' C:\Python26\lib\site-packages\pygame\image.pyd imports=[] binaries=[] datas=[]>
pygame.sys: None -> None
pygame.overlay: None -> <ExtensionModule 'pygame.overlay' C:\Python26\lib\site-packages\pygame\overlay.pyd imports=[] binaries=[] datas=[]>
pygame.display: None -> <ExtensionModule 'pygame.display' C:\Python26\lib\site-packages\pygame\display.pyd imports=[] binaries=[] datas=[]>
pygame.string: None -> None
pygame.mouse: None -> <ExtensionModule 'pygame.mouse' C:\Python26\lib\site-packages\pygame\mouse.pyd imports=[] binaries=[] datas=[]>
pygame.cdrom: None -> <ExtensionModule 'pygame.cdrom' C:\Python26\lib\site-packages\pygame\cdrom.pyd imports=[] binaries=[] datas=[]>
pygame.sndarray: None -> <PyModule 'pygame.sndarray' C:\Python26\lib\site-packages\pygame\sndarray.pyc imports=[('pygame._numericsndarray', 0, 0, -1), ('pygame', 0, 0, -1), ('pygame._numpysndarray', 0, 0, -1)] binaries=[] datas=[]>
pygame.warnings: None -> None
pygame.transform: None -> <ExtensionModule 'pygame.transform' C:\Python26\lib\site-packages\pygame\transform.pyd imports=[] binaries=[] datas=[]>
pygame.joystick: None -> <ExtensionModule 'pygame.joystick' C:\Python26\lib\site-packages\pygame\joystick.pyd imports=[] binaries=[] datas=[]>
pygame.constants: None -> <ExtensionModule 'pygame.constants' C:\Python26\lib\site-packages\pygame\constants.pyd imports=[] binaries=[] datas=[]>
pygame.sysfont: None -> <PyModule 'pygame.sysfont' C:\Python26\lib\site-packages\pygame\sysfont.pyc imports=[('subprocess', 1, 0, -1), ('pygame.font', 1, 0, -1), ('os', 0, 0, -1), ('winreg', 1, 1, -1), ('_winreg', 1, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
pygame.colordict: None -> <PyModule 'pygame.colordict' C:\Python26\lib\site-packages\pygame\colordict.pyc imports=[] binaries=[] datas=[]>
pygame.version: None -> <PyModule 'pygame.version' C:\Python26\lib\site-packages\pygame\version.pyc imports=[] binaries=[] datas=[]>
pygame.imageext: None -> <ExtensionModule 'pygame.imageext' C:\Python26\lib\site-packages\pygame\imageext.pyd imports=[] binaries=[] datas=[]>
pygame.threads: None -> <PkgModule 'pygame.threads' C:\Python26\lib\site-packages\pygame\threads\__init__.pyc imports=[('multiprocessing.JoinableQueue', 0, 1, -1), ('Py25Queue', 0, 1, -1), ('Queue.Queue', 0, 1, -1), ('sys', 0, 0, -1), ('Py25Queue.Empty', 0, 1, -1), ('time', 1, 0, -1), ('pygame', 1, 0, -1), ('threading', 0, 0, -1), ('pygame.compat.geterror', 0, 0, -1), ('Py25Queue.Queue', 0, 1, -1), ('queue', 0, 1, -1), ('multiprocessing', 0, 1, -1), ('queue.Empty', 0, 1, -1), ('traceback', 0, 0, -1), ('pygame.transform', 1, 0, -1), ('Queue', 0, 1, -1), ('pygame.compat', 0, 0, -1), ('Queue.Empty', 0, 1, -1)] binaries=[] datas=[]>
pygame.sprite: None -> <PyModule 'pygame.sprite' C:\Python26\lib\site-packages\pygame\sprite.pyc imports=[('pygame.time', 0, 0, -1), ('pygame.mask.from_surface', 0, 0, -1), ('pygame.time.get_ticks', 0, 0, -1), ('pygame.mask', 0, 0, -1), ('pygame', 0, 0, -1), ('pygame.Rect', 0, 0, -1)] binaries=[] datas=[]>
pygame.time: None -> <ExtensionModule 'pygame.time' C:\Python26\lib\site-packages\pygame\time.pyd imports=[] binaries=[] datas=[]>
pygame.surfarray: None -> <PyModule 'pygame.surfarray' C:\Python26\lib\site-packages\pygame\surfarray.pyc imports=[('pygame._numpysurfarray', 0, 0, -1), ('_arraysurfarray', 0, 0, -1), ('pygame._numericsurfarray', 0, 0, -1), ('_arraysurfarray.blit_array', 0, 0, -1), ('pygame', 0, 0, -1)] binaries=[] datas=[]>
pygame.Numeric: None -> None
Numeric: None -> None
  DEL Numeric
pygame.compat: None -> <PyModule 'pygame.compat' C:\Python26\lib\site-packages\pygame\compat.pyc imports=[('io.BytesIO', 1, 1, -1), ('io', 1, 1, -1), ('cStringIO.StringIO', 1, 0, -1), ('sys', 0, 0, -1), ('cStringIO', 1, 0, -1)] binaries=[] datas=[]>
pygame.surflock: None -> <ExtensionModule 'pygame.surflock' C:\Python26\lib\site-packages\pygame\surflock.pyd imports=[] binaries=[] datas=[]>
pygame.draw: None -> <ExtensionModule 'pygame.draw' C:\Python26\lib\site-packages\pygame\draw.pyd imports=[] binaries=[] datas=[]>
pygame.mixer_music: None -> <ExtensionModule 'pygame.mixer_music' C:\Python26\lib\site-packages\pygame\mixer_music.pyd imports=[] binaries=[] datas=[]>
pygame.OpenGL: None -> None
OpenGL: None -> None
  DEL OpenGL
pygame.copy_reg: None -> None
pygame.macosx: None -> <PyModule 'pygame.macosx' C:\Python26\lib\site-packages\pygame\macosx.pyc imports=[('pygame.pkgdata.getResource', 0, 0, -1), ('sys', 0, 0, -1), ('os', 0, 0, -1), ('pygame.pkgdata', 0, 0, -1), ('MacOS', 0, 0, -1), ('pygame.sdlmain_osx', 0, 0, -1), ('pygame', 0, 0, -1)] binaries=[] datas=[]>
pygame.font: None -> <ExtensionModule 'pygame.font' C:\Python26\lib\site-packages\pygame\font.pyd imports=[] binaries=[] datas=[]>
pygame.event: None -> <ExtensionModule 'pygame.event' C:\Python26\lib\site-packages\pygame\event.pyd imports=[] binaries=[] datas=[]>
pygame.scrap: None -> <ExtensionModule 'pygame.scrap' C:\Python26\lib\site-packages\pygame\scrap.pyd imports=[] binaries=[] datas=[]>
pygame._view: None -> None
  DEL pygame._view
pygame.locals: None -> <PyModule 'pygame.locals' C:\Python26\lib\site-packages\pygame\locals.pyc imports=[('pygame.color', 0, 0, -1), ('pygame.constants.*', 0, 0, -1), ('pygame.rect', 0, 0, -1), ('pygame.rect.Rect', 0, 0, -1), ('pygame.constants', 0, 0, -1)] binaries=[] datas=[]>
pygame.AppKit: None -> None
AppKit: None -> None
  DEL AppKit
AppKit: None -> None
  DEL AppKit
pygame.cStringIO: None -> None
pygame.Foundation: None -> None
Foundation: None -> None
  DEL Foundation
Foundation: None -> None
  DEL Foundation
pygame.tempfile: None -> None
pygame.io: None -> None
pygame._numericsndarray: None -> <ExtensionModule 'pygame._numericsndarray' C:\Python26\lib\site-packages\pygame\_numericsndarray.pyd imports=[] binaries=[] datas=[]>
pygame._numpysndarray: None -> <PyModule 'pygame._numpysndarray' C:\Python26\lib\site-packages\pygame\_numpysndarray.pyc imports=[('numpy', 0, 0, -1), ('pygame.mixer', 0, 0, -1), ('pygame', 0, 0, -1)] binaries=[] datas=[]>
numpy: None -> None
  DEL numpy
pygame.subprocess: None -> None
pygame.winreg: None -> None
winreg: None -> None
  DEL winreg
pygame._winreg: None -> None
pygame.threads.multiprocessing: None -> None
multiprocessing: None -> <PkgModule 'multiprocessing' C:\Python26\lib\multiprocessing\__init__.pyc imports=[('multiprocessing.util.SUBDEBUG', 0, 0, -1), ('multiprocessing.util.SUBWARNING', 0, 0, -1), ('os', 0, 0, -1), ('multiprocessing.reduction', 1, 0, -1), ('multiprocessing', 1, 0, -1), ('multiprocessing.managers.SyncManager', 1, 0, -1), ('multiprocessing.sharedctypes.Array', 1, 0, -1), ('multiprocessing.synchronize.Event', 1, 0, -1), ('multiprocessing.managers', 1, 0, -1), ('multiprocessing.util', 1, 0, -1), ('sys', 0, 0, -1), ('multiprocessing.synchronize', 1, 0, -1), ('multiprocessing.forking', 1, 1, -1), ('multiprocessing.synchronize.Lock', 1, 0, -1), ('multiprocessing.synchronize.Semaphore', 1, 0, -1), ('multiprocessing.connection', 1, 0, -1), ('multiprocessing.pool', 1, 0, -1), ('multiprocessing.process.current_process', 0, 0, -1), ('multiprocessing.synchronize.Condition', 1, 0, -1), ('multiprocessing.queues', 1, 0, -1), ('multiprocessing.sharedctypes.RawArray', 1, 0, -1), ('_multiprocessing', 0, 0, -1), ('multiprocessing.connection.Pipe', 1, 0, -1), ('multiprocessing.synchronize.RLock', 1, 0, -1), ('multiprocessing.synchronize.BoundedSemaphore', 1, 0, -1), ('multiprocessing.sharedctypes.Value', 1, 0, -1), ('multiprocessing.util', 0, 0, -1), ('multiprocessing.sharedctypes.RawValue', 1, 0, -1), ('multiprocessing.queues.JoinableQueue', 1, 0, -1), ('multiprocessing.util.log_to_stderr', 1, 0, -1), ('multiprocessing.forking.freeze_support', 1, 1, -1), ('multiprocessing.process.Process', 0, 0, -1), ('multiprocessing.pool.Pool', 1, 0, -1), ('multiprocessing.forking.set_executable', 1, 0, -1), ('multiprocessing.process', 0, 0, -1), ('multiprocessing.util.get_logger', 1, 0, -1), ('multiprocessing.process.active_children', 0, 0, -1), ('multiprocessing.sharedctypes', 1, 0, -1), ('multiprocessing.forking', 1, 0, -1), ('multiprocessing.queues.Queue', 1, 0, -1)] binaries=[] datas=[]>
multiprocessing.JoinableQueue: None -> None
  DEL multiprocessing.JoinableQueue
pygame.threads.Py25Queue: None -> <PyModule 'pygame.threads.Py25Queue' C:\Python26\lib\site-packages\pygame\threads\Py25Queue.pyc imports=[('collections', 0, 0, -1), ('dummy_threading', 1, 1, -1), ('collections.deque', 0, 0, -1), ('time.time', 0, 0, -1), ('threading', 1, 0, -1), ('time', 0, 0, -1)] binaries=[] datas=[]>
pygame.threads.Queue: None -> None
pygame.threads.sys: None -> None
pygame.threads.time: None -> None
pygame.threads.pygame: None -> None
pygame.threads.threading: None -> None
pygame.threads.queue: None -> None
queue: None -> None
  DEL queue
queue: None -> None
  DEL queue
pygame.threads.traceback: None -> None
multiprocessing.multiprocessing: None -> None
multiprocessing.util: None -> <PyModule 'multiprocessing.util' C:\Python26\lib\multiprocessing\util.pyc imports=[('atexit', 0, 0, -1), ('itertools', 0, 0, -1), ('logging', 1, 0, -1), ('weakref', 0, 0, -1), ('shutil', 1, 1, -1), ('threading', 0, 0, -1), ('multiprocessing.process.active_children', 0, 0, -1), ('multiprocessing.process.current_process', 0, 0, -1), ('traceback', 1, 1, -1), ('atexit', 1, 0, -1), ('tempfile', 1, 1, -1), ('multiprocessing.process', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.os: None -> None
multiprocessing.reduction: None -> <PyModule 'multiprocessing.reduction' C:\Python26\lib\multiprocessing\reduction.pyc imports=[('_multiprocessing', 0, 1, -1), ('os', 0, 0, -1), ('multiprocessing.forking.close', 0, 0, -1), ('util.is_exiting', 1, 0, 1), ('_multiprocessing.win32', 0, 1, -1), ('threading', 0, 0, -1), ('sys', 0, 0, -1), ('util', 1, 0, 1), ('multiprocessing.forking.Popen', 0, 0, -1), ('multiprocessing.connection.Listener', 0, 0, -1), ('_multiprocessing', 0, 0, -1), ('multiprocessing.current_process', 0, 0, -1), ('multiprocessing.forking.duplicate', 0, 0, -1), ('multiprocessing.forking', 0, 0, -1), ('multiprocessing.util', 0, 0, -1), ('socket', 0, 0, -1), ('_subprocess', 0, 1, -1), ('traceback', 1, 1, -1), ('multiprocessing.util.debug', 0, 0, -1), ('multiprocessing.connection', 0, 0, -1), ('util.sub_warning', 1, 0, 1), ('multiprocessing.util.sub_debug', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('multiprocessing.forking.ForkingPickler', 0, 0, -1), ('multiprocessing.util.register_after_fork', 0, 0, -1), ('multiprocessing.connection.Client', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.managers: None -> <PyModule 'multiprocessing.managers' C:\Python26\lib\multiprocessing\managers.pyc imports=[('multiprocessing.util.Finalize', 0, 0, -1), ('multiprocessing.Process', 0, 0, -1), ('os', 0, 0, -1), ('multiprocessing.forking.assert_spawning', 0, 0, -1), ('pickle.PicklingError', 0, 1, -1), ('threading', 0, 0, -1), ('sys', 0, 0, -1), ('multiprocessing.forking.Popen', 0, 0, -1), ('cPickle.PicklingError', 0, 0, -1), ('pickle', 0, 1, -1), ('multiprocessing.current_process', 0, 0, -1), ('weakref', 0, 0, -1), ('multiprocessing.forking.exit', 0, 0, -1), ('multiprocessing.forking', 0, 0, -1), ('array', 0, 0, -1), ('multiprocessing.util', 0, 0, -1), ('multiprocessing.util.info', 0, 0, -1), ('traceback', 1, 0, -1), ('multiprocessing.connection', 0, 0, -1), ('Queue', 0, 0, -1), ('multiprocessing.active_children', 0, 0, -1), ('multiprocessing.process', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('traceback.format_exc', 0, 0, -1), ('multiprocessing.forking.ForkingPickler', 0, 0, -1), ('cPickle', 0, 0, -1), ('traceback', 0, 0, -1), ('multiprocessing.process.AuthenticationString', 0, 0, -1), ('multiprocessing.Pool', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.sharedctypes: None -> <PyModule 'multiprocessing.sharedctypes' C:\Python26\lib\multiprocessing\sharedctypes.pyc imports=[('ctypes', 0, 0, -1), ('sys', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('multiprocessing.forking', 0, 0, -1), ('weakref', 0, 0, -1), ('multiprocessing.forking.ForkingPickler', 0, 0, -1), ('multiprocessing.forking.assert_spawning', 0, 0, -1), ('multiprocessing.heap', 0, 0, -1), ('multiprocessing.RLock', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.synchronize: None -> <PyModule 'multiprocessing.synchronize' C:\Python26\lib\multiprocessing\synchronize.pyc imports=[('threading', 0, 0, -1), ('sys', 0, 0, -1), ('multiprocessing.forking', 0, 0, -1), ('os', 0, 0, -1), ('multiprocessing.util', 0, 0, -1), ('time.time', 0, 0, -1), ('multiprocessing.forking.assert_spawning', 0, 0, -1), ('multiprocessing.forking.Popen', 0, 0, -1), ('multiprocessing.util.register_after_fork', 0, 0, -1), ('time.sleep', 0, 0, -1), ('multiprocessing.process.current_process', 0, 0, -1), ('_multiprocessing.SemLock', 0, 0, -1), ('_multiprocessing', 0, 0, -1), ('multiprocessing.util.debug', 0, 0, -1), ('time', 0, 0, -1), ('multiprocessing.util.Finalize', 0, 0, -1), ('multiprocessing.process', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.sys: None -> None
multiprocessing.forking: None -> <PyModule 'multiprocessing.forking' C:\Python26\lib\multiprocessing\forking.pyc imports=[('thread', 0, 1, -1), ('functools.partial', 0, 0, -1), ('_multiprocessing', 0, 1, -1), ('os', 0, 0, -1), ('_multiprocessing.win32', 0, 1, -1), ('_multiprocessing.Connection', 0, 1, -1), ('pickle.HIGHEST_PROTOCOL', 0, 1, -1), ('signal', 0, 0, -1), ('pickle', 0, 0, -1), ('sys', 0, 0, -1), ('util', 1, 0, 1), ('util._logger', 1, 0, 1), ('time', 0, 1, -1), ('_multiprocessing.PipeConnection', 0, 1, -1), ('functools', 0, 0, -1), ('pickle', 0, 1, -1), ('imp', 1, 1, -1), ('util', 0, 1, 1), ('util._log_to_stderr', 1, 0, 1), ('multiprocessing.util', 0, 0, -1), ('util.Finalize', 0, 1, 1), ('_subprocess', 0, 1, -1), ('pickle.load', 0, 1, -1), ('pickle.Pickler', 0, 0, -1), ('multiprocessing.process', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('msvcrt', 0, 1, -1), ('random', 1, 1, -1)] binaries=[] datas=[]>
multiprocessing.connection: None -> <PyModule 'multiprocessing.connection' C:\Python26\lib\multiprocessing\connection.pyc imports=[('multiprocessing.util.Finalize', 0, 0, -1), ('_multiprocessing', 0, 1, -1), ('os', 0, 0, -1), ('multiprocessing.forking.close', 0, 0, -1), ('hmac', 1, 0, -1), ('_multiprocessing.win32', 0, 1, -1), ('errno', 0, 0, -1), ('itertools', 0, 0, -1), ('sys', 0, 0, -1), ('_multiprocessing', 0, 0, -1), ('time', 0, 0, -1), ('multiprocessing.current_process', 0, 0, -1), ('multiprocessing.forking.duplicate', 0, 0, -1), ('multiprocessing.forking', 0, 0, -1), ('xmlrpclib', 1, 0, -1), ('multiprocessing.util', 0, 0, -1), ('socket', 0, 0, -1), ('multiprocessing.util.get_temp_dir', 0, 0, -1), ('multiprocessing.util.debug', 0, 0, -1), ('multiprocessing.util.sub_debug', 0, 0, -1), ('multiprocessing.AuthenticationError', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('tempfile', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.pool: None -> <PyModule 'multiprocessing.pool' C:\Python26\lib\multiprocessing\pool.pyc imports=[('dummy', 1, 0, 1), ('collections', 0, 0, -1), ('threading', 0, 0, -1), ('itertools', 0, 0, -1), ('Queue', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('queues.SimpleQueue', 1, 0, 1), ('dummy.Process', 1, 0, 1), ('multiprocessing.util', 0, 0, -1), ('multiprocessing.TimeoutError', 0, 0, -1), ('multiprocessing.cpu_count', 0, 0, -1), ('queues', 1, 0, 1), ('multiprocessing.util.debug', 0, 0, -1), ('time', 0, 0, -1), ('multiprocessing.util.Finalize', 0, 0, -1), ('multiprocessing.Process', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.process: None -> <PyModule 'multiprocessing.process' C:\Python26\lib\multiprocessing\process.pyc imports=[('forking', 1, 1, 1), ('itertools', 0, 0, -1), ('sys', 0, 0, -1), ('util', 1, 0, 1), ('os', 0, 0, -1), ('forking.Popen', 1, 0, 1), ('forking', 1, 0, 1), ('forking.Popen', 1, 1, 1), ('', 1, 0, 1), ('traceback', 1, 1, -1), ('signal', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.queues: None -> <PyModule 'multiprocessing.queues' C:\Python26\lib\multiprocessing\queues.pyc imports=[('multiprocessing.synchronize.Semaphore', 0, 0, -1), ('multiprocessing.util.Finalize', 0, 0, -1), ('os', 0, 0, -1), ('multiprocessing.synchronize.Condition', 0, 0, -1), ('multiprocessing.forking.assert_spawning', 0, 0, -1), ('util.is_exiting', 1, 0, 1), ('multiprocessing.synchronize.BoundedSemaphore', 0, 0, -1), ('threading', 0, 0, -1), ('Queue.Full', 0, 0, -1), ('util', 1, 0, 1), ('_multiprocessing', 0, 0, -1), ('time', 0, 0, -1), ('multiprocessing.Pipe', 0, 0, -1), ('collections', 0, 0, -1), ('atexit', 0, 0, -1), ('weakref', 0, 0, -1), ('multiprocessing.forking', 0, 0, -1), ('multiprocessing.util', 0, 0, -1), ('multiprocessing.util.info', 0, 0, -1), ('traceback', 1, 1, -1), ('multiprocessing.util.debug', 0, 0, -1), ('sys', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('Queue.Empty', 0, 0, -1), ('multiprocessing.util.register_after_fork', 0, 0, -1), ('Queue', 0, 0, -1), ('multiprocessing.synchronize', 0, 0, -1), ('multiprocessing.synchronize.Lock', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing._multiprocessing: None -> None
_multiprocessing: None -> <ExtensionModule '_multiprocessing' C:\Python26\DLLs\_multiprocessing.pyd imports=[] binaries=[] datas=[]>
multiprocessing.atexit: None -> None
multiprocessing.itertools: None -> None
multiprocessing.logging: None -> None
multiprocessing.weakref: None -> None
multiprocessing.shutil: None -> None
multiprocessing.threading: None -> None
multiprocessing.traceback: None -> None
multiprocessing.tempfile: None -> None
multiprocessing.signal: None -> None
multiprocessing.thread: None -> None
multiprocessing.functools: None -> None
multiprocessing.pickle: None -> None
multiprocessing.time: None -> None
multiprocessing.imp: None -> None
multiprocessing._subprocess: None -> None
multiprocessing.msvcrt: None -> None
multiprocessing.random: None -> None
multiprocessing.current_process: None -> None
  DEL multiprocessing.current_process
multiprocessing.socket: None -> None
multiprocessing.hmac: None -> None
hmac: None -> <PyModule 'hmac' C:\Python26\lib\hmac.pyc imports=[('hashlib', 1, 1, -1), ('warnings', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.errno: None -> None
multiprocessing.current_process: None -> None
  DEL multiprocessing.current_process
multiprocessing.xmlrpclib: None -> None
xmlrpclib: None -> <PyModule 'xmlrpclib' C:\Python26\lib\xmlrpclib.pyc imports=[('xml.parsers.expat', 0, 0, -1), ('re', 0, 0, -1), ('xml.parsers', 0, 0, -1), ('types.*', 0, 0, -1), ('httplib', 1, 0, -1), ('types', 0, 0, -1), ('xmllib', 1, 0, -1), ('operator', 0, 0, -1), ('string', 0, 0, -1), ('_xmlrpclib', 0, 0, -1), ('base64', 1, 1, -1), ('cStringIO', 0, 0, -1), ('datetime', 0, 0, -1), ('base64', 0, 0, -1), ('StringIO', 0, 1, -1), ('sgmlop', 0, 0, -1), ('time', 0, 0, -1), ('urllib', 1, 0, -1), ('sys.modules', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.AuthenticationError: None -> None
  DEL multiprocessing.AuthenticationError
xmllib: None -> <PyModule 'xmllib' C:\Python26\lib\xmllib.pyc imports=[('re', 0, 0, -1), ('time', 1, 0, -1), ('warnings', 0, 0, -1), ('string', 0, 0, -1), ('getopt', 1, 0, -1), ('sys', 1, 0, -1), ('time.time', 1, 0, -1)] binaries=[] datas=[]>
_xmlrpclib: None -> None
  DEL _xmlrpclib
sgmlop: None -> None
  DEL sgmlop
multiprocessing.Process: None -> None
  DEL multiprocessing.Process
multiprocessing.cPickle: None -> None
multiprocessing.current_process: None -> None
  DEL multiprocessing.current_process
multiprocessing.array: None -> None
multiprocessing.Queue: None -> None
multiprocessing.active_children: None -> None
  DEL multiprocessing.active_children
multiprocessing.Pool: None -> None
  DEL multiprocessing.Pool
multiprocessing.ctypes: None -> None
multiprocessing.heap: None -> <PyModule 'multiprocessing.heap' C:\Python26\lib\multiprocessing\heap.pyc imports=[('multiprocessing.forking.assert_spawning', 0, 0, -1), ('threading', 0, 0, -1), ('itertools', 0, 0, -1), ('sys', 0, 0, -1), ('multiprocessing.forking', 0, 0, -1), ('os', 0, 0, -1), ('multiprocessing.util', 0, 0, -1), ('tempfile', 0, 0, -1), ('multiprocessing.util.info', 0, 0, -1), ('_multiprocessing.win32', 0, 1, -1), ('_multiprocessing', 0, 0, -1), ('mmap', 0, 0, -1), ('bisect', 0, 0, -1), ('multiprocessing.util.Finalize', 0, 0, -1), ('_multiprocessing', 0, 1, -1)] binaries=[] datas=[]>
multiprocessing.RLock: None -> None
  DEL multiprocessing.RLock
multiprocessing.mmap: None -> None
multiprocessing.bisect: None -> None
multiprocessing.dummy: None -> <PkgModule 'multiprocessing.dummy' C:\Python26\lib\multiprocessing\dummy\__init__.pyc imports=[('threading', 0, 0, -1), ('itertools', 0, 0, -1), ('sys', 0, 0, -1), ('multiprocessing', 0, 0, -1), ('multiprocessing.dummy.connection', 0, 0, -1), ('threading.BoundedSemaphore', 0, 0, -1), ('multiprocessing.pool.ThreadPool', 1, 0, -1), ('array', 0, 0, -1), ('threading.Semaphore', 0, 0, -1), ('threading.Lock', 0, 0, -1), ('multiprocessing.TimeoutError', 0, 0, -1), ('multiprocessing.cpu_count', 0, 0, -1), ('multiprocessing.pool', 1, 0, -1), ('threading.RLock', 0, 0, -1), ('multiprocessing.dummy.connection.Pipe', 0, 0, -1), ('Queue.Queue', 0, 0, -1), ('Queue', 0, 0, -1), ('threading.Event', 0, 0, -1), ('weakref', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.collections: None -> None
multiprocessing.dummy.Process: None -> None
  DEL multiprocessing.dummy.Process
multiprocessing.TimeoutError: None -> None
  DEL multiprocessing.TimeoutError
multiprocessing.cpu_count: None -> None
  DEL multiprocessing.cpu_count
multiprocessing.Process: None -> None
  DEL multiprocessing.Process
multiprocessing.dummy.threading: None -> None
multiprocessing.dummy.itertools: None -> None
multiprocessing.dummy.sys: None -> None
multiprocessing.dummy.multiprocessing: None -> None
multiprocessing.dummy.connection: None -> <PyModule 'multiprocessing.dummy.connection' C:\Python26\lib\multiprocessing\dummy\connection.pyc imports=[('Queue', 0, 0, -1), ('Queue.Queue', 0, 0, -1)] binaries=[] datas=[]>
multiprocessing.dummy.array: None -> None
multiprocessing.TimeoutError: None -> None
  DEL multiprocessing.TimeoutError
multiprocessing.cpu_count: None -> None
  DEL multiprocessing.cpu_count
multiprocessing.dummy.Queue: None -> None
multiprocessing.dummy.weakref: None -> None
multiprocessing.Pipe: None -> None
  DEL multiprocessing.Pipe
pygame.threads.collections: None -> None
pygame.threads.dummy_threading: None -> None
pygame.Rect: None -> None
  DEL pygame.Rect
pygame._numpysurfarray: None -> <PyModule 'pygame._numpysurfarray' C:\Python26\lib\site-packages\pygame\_numpysurfarray.pyc imports=[('numpy', 0, 0, -1), ('re', 0, 0, -1), ('pygame', 0, 0, -1)] binaries=[] datas=[]>
pygame._arraysurfarray: None -> <ExtensionModule 'pygame._arraysurfarray' C:\Python26\lib\site-packages\pygame\_arraysurfarray.pyd imports=[] binaries=[] datas=[]>
pygame._numericsurfarray: None -> <ExtensionModule 'pygame._numericsurfarray' C:\Python26\lib\site-packages\pygame\_numericsurfarray.pyd imports=[] binaries=[] datas=[]>
numpy: None -> None
  DEL numpy
pygame.re: None -> None
pygame.pkgdata: None -> <PyModule 'pygame.pkgdata' C:\Python26\lib\site-packages\pygame\pkgdata.pyc imports=[('sys', 0, 0, -1), ('os', 0, 0, -1), ('pygame.compat.get_BytesIO', 0, 0, -1), ('pkg_resources.resource_stream', 0, 0, -1), ('pkg_resources', 0, 0, -1), ('pygame.compat', 0, 0, -1), ('pkg_resources.resource_exists', 0, 0, -1)] binaries=[] datas=[]>
pygame.MacOS: None -> None
MacOS: None -> None
  DEL MacOS
pygame.sdlmain_osx: None -> None
  DEL pygame.sdlmain_osx
pygame.pkg_resources: None -> None
pkg_resources.resource_stream: None -> None
  DEL pkg_resources.resource_stream
pkg_resources.resource_exists: None -> None
  DEL pkg_resources.resource_exists
__main__: <PyScript '__main__' .\panic.py imports=[('tkMessageBox', 0, 0, -1), ('os', 0, 0, -1), ('guipart', 0, 0, -1), ('dialog.LoginDialog', 0, 0, -1), ('random', 0, 0, -1), ('threading', 0, 0, -1), ('Queue', 0, 0, -1), ('guipart.GuiPart', 0, 0, -1), ('multiListBox', 0, 0, -1), ('PIL', 0, 0, -1), ('tkFileDialog', 0, 0, -1), ('dialog', 0, 0, -1), ('winsound', 0, 0, -1), ('guardMultiListBox', 0, 0, -1), ('PIL.ImageTk', 0, 0, -1), ('sys', 1, 1, -1), ('dialog.ConfirmedPanicDialog', 0, 0, -1), ('d2xx', 0, 0, -1), ('customtkSimpleDialog', 0, 0, -1), ('dataset', 0, 0, -1), ('PIL.Image', 0, 0, -1), ('tkSimpleDialog', 0, 0, -1), ('sys', 0, 0, -1), ('re', 0, 0, -1), ('dialog.PanicDialog', 0, 0, -1), ('Tkinter', 0, 0, -1), ('time', 0, 0, -1), ('admin', 0, 0, -1), ('Tkinter.*', 0, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\rthooks\pyi_rth_PIL_Image.py imports=[('pyi_importers', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
pwd: None -> None
  DEL pwd
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
__main__: <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\rthooks\pyi_rth_PIL_Image.py imports=[('pyi_importers', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\rthooks\pyi_rth_pkgres.py imports=[('pyi_importers', 0, 0, -1), ('pyi_importers.FrozenImporter', 0, 0, -1), ('pkg_resources', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
pwd: None -> None
  DEL pwd
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
packaging: None -> None
  DEL packaging
packaging: None -> None
  DEL packaging
_imp: None -> None
  DEL _imp
sysconfig: None -> None
  DEL sysconfig
sysconfig: None -> None
  DEL sysconfig
importlib: None -> None
  DEL importlib
_markerlib.compile: None -> None
  DEL _markerlib.compile
_scproxy: None -> None
  DEL _scproxy
_scproxy: None -> None
  DEL _scproxy
rourl2path: None -> None
  DEL rourl2path
rourl2path: None -> None
  DEL rourl2path
rourl2path: None -> None
  DEL rourl2path
_scproxy: None -> None
  DEL _scproxy
cl: None -> None
  DEL cl
cl: None -> None
  DEL cl
SOCKS: None -> None
  DEL SOCKS
EasyDialogs: None -> None
  DEL EasyDialogs
EasyDialogs: None -> None
  DEL EasyDialogs
pwd: None -> None
  DEL pwd
termios: None -> None
  DEL termios
pwd: None -> None
  DEL pwd
MacOS: None -> None
  DEL MacOS
MacOS: None -> None
  DEL MacOS
gestalt: None -> None
  DEL gestalt
java: None -> None
  DEL java
MacOS: None -> None
  DEL MacOS
gestalt: None -> None
  DEL gestalt
java: None -> None
  DEL java
vms_lib: None -> None
  DEL vms_lib
Carbon: None -> None
  DEL Carbon
Carbon: None -> None
  DEL Carbon
Carbon: None -> None
  DEL Carbon
Carbon: None -> None
  DEL Carbon
Carbon: None -> None
  DEL Carbon
Carbon: None -> None
  DEL Carbon
Carbon: None -> None
  DEL Carbon
Carbon: None -> None
  DEL Carbon
_xmlplus: None -> None
  DEL _xmlplus
org: None -> None
  DEL org
org: None -> None
  DEL org
java: None -> None
  DEL java
java: None -> None
  DEL java
xmlparse: None -> None
  DEL xmlparse
xmltok: None -> None
  DEL xmltok
__main__: <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\rthooks\pyi_rth_pkgres.py imports=[('pyi_importers', 0, 0, -1), ('pyi_importers.FrozenImporter', 0, 0, -1), ('pkg_resources', 0, 0, -1)] binaries=[] datas=[]> -> <PyScript '__main__' C:\Python26\lib\site-packages\PyInstaller\loader\rthooks\pyi_rth_Tkinter.py imports=[('os', 0, 0, -1), ('sys', 0, 0, -1)] binaries=[] datas=[]>
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
posix: None -> None
  DEL posix
_emx_link: None -> None
  DEL _emx_link
_emx_link: None -> None
  DEL _emx_link
fcntl: None -> None
  DEL fcntl
readline: None -> None
  DEL readline
org: None -> None
  DEL org
org: None -> None
  DEL org
readline: None -> None
  DEL readline
fcntl: None -> None
  DEL fcntl
org: None -> None
  DEL org
org: None -> None
  DEL org
pwd: None -> None
  DEL pwd
